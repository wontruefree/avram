{"repository_name":"avram","body":"# Avram\n\n[![API Documentation Website](https://img.shields.io/website?down_color=red&down_message=Offline&label=API%20Documentation&up_message=Online&url=https%3A%2F%2Fluckyframework.github.io%2Favram%2F)](https://luckyframework.github.io/avram)\n\n### Why Avram?\n\nThe name comes from [Henriette Avram](https://en.wikipedia.org/wiki/Henriette_Avram).\n\n> Henriette Davidson Avram (October 7, 1919 – April 22, 2006) was a computer programmer and systems analyst who developed the MARC format (Machine Readable Cataloging), the international data standard for bibliographic and holdings information in libraries.\n\n## Installation\n\nAdd this to your application's `shard.yml`:\n\n```yaml\ndependencies:\n  avram:\n    github: luckyframework/avram\n```\n\n## Usage\n\n```crystal\nrequire \"avram\"\n```\n\n## Contributing\n\n1. Fork it ( https://github.com/luckyframework/avram/fork )\n1. Create your feature branch (git checkout -b my-new-feature)\n1. Install docker and docker-compose: https://docs.docker.com/compose/install/\n1. Run `script/setup`\n1. Make your changes\n1. Run `script/test` to run the specs, build shards, and check formatting\n1. Commit your changes (git commit -am 'Add some feature')\n1. Push to the branch (git push origin my-new-feature)\n1. Create a new Pull Request\n\n## Testing\n\nTo run the tests:\n\n1. Install docker and docker-compose: https://docs.docker.com/compose/install/\n1. Run `script/setup` to set up the docker environment\n1. Run `script/test` to run the specs, build shards, and check formatting\n\nYou can run individual tests like this: `docker-compose run --rm app crystal spec path/to/spec.cr`\n\n> Remember to run `docker-compose down` when you're done. This will stop the\n> Crystal container.\n\n## Contributors\n\n- [paulcsmith](https://github.com/paulcsmith) Paul Smith - creator, maintainer\n- [mikeeus](https://github.com/mikeeus) Mikias Abera - contributor\n","program":{"html_id":"avram/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"avram","program":true,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[{"id":"avram_enum(enum_name,&block)-macro","html_id":"avram_enum(enum_name,&amp;block)-macro","name":"avram_enum","doc":null,"summary":null,"abstract":false,"args":[{"name":"enum_name","doc":null,"default_value":"","external_name":"enum_name","restriction":""}],"args_string":"(enum_name, &block)","location":{"filename":"src/avram/charms/enum_extensions.cr","line_number":7,"url":null},"def":{"name":"avram_enum","args":[{"name":"enum_name","doc":null,"default_value":"","external_name":"enum_name","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":""},"visibility":"Public","body":"  \n{% avram_enum = (\"Avram\" + (enum_name.names.join(\"::\"))).id %}\n\n  \nenum \n{{ avram_enum }}\n\n    \n{{ block.body }}\n\n\n    def ===(other : Int32)\n      value == other\n    \nend\n  \nend\n\n  struct \n{{ enum_name }}\n\n    def self.adapter\n      Lucky\n    \nend\n\n    redeclare_avram_enum(\n{{ avram_enum }}\n)\n\n    getter :enum\n\n    \n# You may need to prefix with \n{{ @type }}\n\n\n    \n#\n\n    \n#   \n{{ @type }}\n::\n{{ enum_name }}\n\n\n    def initialize(@enum : Avram\n{{ enum_name }}\n)\n    \nend\n\n    def initialize(\nenum_value : Int32)\n      @enum = Avram\n{{ enum_name }}\n.from_value(\nenum_value)\n    \nend\n\n    def initialize(\nenum_value : String)\n      int_value = \nenum_value.to_i?\n      @enum = if int_value\n                Avram\n{{ enum_name }}\n.from_value(int_value)\n              \nelse\n                Avram\n{{ enum_name }}\n.parse(\nenum_value)\n              \nend\n    \nend\n\n    delegate :===, to_s, to_i, to: @enum\n\n    forward_missing_to @enum\n\n    module Lucky\n      alias ColumnType = Int32\n      include Avram::Type\n\n      def self.criteria(query : T, column) forall T\n        Criteria(T, Int32).new(query, column)\n      \nend\n\n      def from_db!(value : Int32)\n        \n{{ enum_name }}\n.new(value)\n      \nend\n\n      def parse(value : Avram\n{{ enum_name }}\n)\n        SuccessfulCast(\n{{ enum_name }}\n).new(value)\n      \nend\n\n      def parse(value : String)\n        SuccessfulCast(\n{{ enum_name }}\n).new(\n{{ enum_name }}\n.new(value))\n      \nend\n\n      def parse(value : Int32)\n        SuccessfulCast(\n{{ enum_name }}\n).new(\n{{ enum_name }}\n.new(value))\n      \nend\n\n      def to_db(value : Int32)\n        value.to_s\n      \nend\n\n      def to_db(value : \n{{ enum_name }}\n)\n        value.value.to_s\n      \nend\n\n      class Criteria(T, V) < Int32::Lucky::Criteria(T, V)\n      \nend\n    \nend\n  \nend\n\n"}},{"id":"redeclare_avram_enum(name)-macro","html_id":"redeclare_avram_enum(name)-macro","name":"redeclare_avram_enum","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""}],"args_string":"(name)","location":{"filename":"src/avram/charms/enum_extensions.cr","line_number":1,"url":null},"def":{"name":"redeclare_avram_enum","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"  \n{% for member in name.resolve.constants %}\n    {{ member }} = {{ name }}::{{ member }}\n  {% end %}\n\n\n"}}],"types":[{"html_id":"avram/Array","path":"Array.html","kind":"class","full_name":"Array(T)","name":"Array","abstract":false,"superclass":{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"avram/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"avram/Indexable","kind":"module","full_name":"Indexable","name":"Indexable"},{"html_id":"avram/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"avram/Iterable","kind":"module","full_name":"Iterable","name":"Iterable"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[{"html_id":"avram/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"avram/Indexable","kind":"module","full_name":"Indexable","name":"Indexable"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"An `Array` is an ordered, integer-indexed collection of objects of type T.\n\nArray indexing starts at 0. A negative index is assumed to be\nrelative to the end of the array: -1 indicates the last element,\n-2 is the next to last element, and so on.\n\nAn `Array` can be created using the usual `new` method (several are provided), or with an array literal:\n\n```\nArray(Int32).new  # => []\n[1, 2, 3]         # Array(Int32)\n[1, \"hello\", 'x'] # Array(Int32 | String | Char)\n```\n\nAn `Array` can have mixed types, meaning T will be a union of types, but these are determined\nwhen the array is created, either by specifying T or by using an array literal. In the latter\ncase, T will be set to the union of the array literal elements' types.\n\nWhen creating an empty array you must always specify T:\n\n```\n[] of Int32 # same as Array(Int32)\n[]          # syntax error\n```\n\nAn `Array` is implemented using an internal buffer of some capacity\nand is reallocated when elements are pushed to it when more capacity\nis needed. This is normally known as a [dynamic array](http://en.wikipedia.org/wiki/Dynamic_array).\n\nYou can use a special array literal syntax with other types too, as long as they define an argless\n`new` method and a `<<` method. `Set` is one such type:\n\n```\nset = Set{1, 2, 3} # => Set{1, 2, 3}\nset.class          # => Set(Int32)\n```\n\nThe above is the same as this:\n\n```\nset = Set(typeof(1, 2, 3)).new\nset << 1\nset << 2\nset << 3\n```","summary":"<p>An <code><a href=\"Array.html\">Array</a></code> is an ordered, integer-indexed collection of objects of type T.</p>","class_methods":[{"id":"adapter-class-method","html_id":"adapter-class-method","name":"adapter","doc":"Proxy to the `T`'s adapter so we can call methods like\n`Array(String).adapter.to_db([\"test\"])`","summary":"<p>Proxy to the <code>T</code>'s adapter so we can call methods like <code><a href=\"Array.html\">Array</a>(<a href=\"String.html\">String</a>)<a href=\"Array.html#adapter-class-method\">.adapter</a>.to_db([\"test\"])</code></p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/charms/array_extensions.cr","line_number":4,"url":null},"def":{"name":"adapter","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"T.adapter"}}],"constructors":[],"instance_methods":[{"id":"blank?-instance-method","html_id":"blank?-instance-method","name":"blank?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/blank_extensions.cr","line_number":56,"url":null},"def":{"name":"blank?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"empty?"}},{"id":"blank_for_validates_required?:Bool-instance-method","html_id":"blank_for_validates_required?:Bool-instance-method","name":"blank_for_validates_required?","doc":"Arrays of any size should be considered present","summary":"<p>Arrays of any size should be considered present</p>","abstract":false,"args":[],"args_string":" : Bool","args_html":" : <a href=\"Bool.html\">Bool</a>","location":{"filename":"src/avram/object_extensions.cr","line_number":9,"url":null},"def":{"name":"blank_for_validates_required?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"false"}}],"macros":[],"types":[]},{"html_id":"avram/Avram","path":"Avram.html","kind":"module","full_name":"Avram","name":"Avram","abstract":false,"superclass":null,"ancestors":[{"html_id":"avram/Habitat/SettingsHelpers","kind":"module","full_name":"Habitat::SettingsHelpers","name":"SettingsHelpers"},{"html_id":"avram/Habitat/TempConfig","kind":"module","full_name":"Habitat::TempConfig","name":"TempConfig"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[{"id":"FailedQueryLog","name":"FailedQueryLog","value":"Log.for(\"failed_query\")","doc":null,"summary":null},{"id":"HABITAT_SETTINGS","name":"HABITAT_SETTINGS","value":"[{decl: lazy_load_enabled : Bool = true, example: nil, validation: nil}, {decl: database_to_migrate : Avram::Database.class, example: \"AppDatabase\", validation: nil}, {decl: time_formats : Array(String) = [] of String, example: nil, validation: nil}] of Nil","doc":null,"summary":null},{"id":"Log","name":"Log","value":"::Log.for(Avram)","doc":null,"summary":null},{"id":"QueryLog","name":"QueryLog","value":"Log.for(\"query\")","doc":null,"summary":null},{"id":"SaveFailedLog","name":"SaveFailedLog","value":"Log.for(\"save_failed\")","doc":null,"summary":null},{"id":"VERSION","name":"VERSION","value":"\"0.19.0\"","doc":null,"summary":null}],"included_modules":[{"html_id":"avram/Habitat/SettingsHelpers","kind":"module","full_name":"Habitat::SettingsHelpers","name":"SettingsHelpers"},{"html_id":"avram/Habitat/TempConfig","kind":"module","full_name":"Habitat::TempConfig","name":"TempConfig"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[{"id":"configure(&)-class-method","html_id":"configure(&)-class-method","name":"configure","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"(&)","args_html":"(&)","location":{"filename":"src/avram.cr","line_number":21,"url":null},"def":{"name":"configure","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"yield settings"}},{"id":"initialize_logging-class-method","html_id":"initialize_logging-class-method","name":"initialize_logging","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram.cr","line_number":32,"url":null},"def":{"name":"initialize_logging","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Avram::Events::QueryEvent.subscribe do |event, duration|\n  if event.query.starts_with?(\"TRUNCATE\")\n    next\n  end\n  Avram::QueryLog.dexter.info do\n    queryable = event.queryable\n    log_data = {query: event.query, args: event.args, duration: Pulsar.elapsed_text(duration)}\n    if queryable\n      {model: queryable}.merge(log_data)\n    else\n      log_data\n    end\n  end\nend\nAvram::Events::FailedQueryEvent.subscribe do |event|\n  Avram::FailedQueryLog.dexter.error do\n    queryable = event.queryable\n    log_data = {error_message: event.error_message, query: event.query, args: \"[FILTERED]\"}\n    if queryable\n      {model: queryable}.merge(log_data)\n    else\n      log_data\n    end\n  end\nend\nAvram::Events::SaveFailedEvent.subscribe do |event|\n  Avram::SaveFailedLog.dexter.warn do\n    {failed_to_save: event.operation_class, validation_errors: event.error_messages_as_string}\n  end\nend\n"}},{"id":"settings-class-method","html_id":"settings-class-method","name":"settings","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram.cr","line_number":21,"url":null},"def":{"name":"settings","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"HabitatSettings"}}],"constructors":[],"instance_methods":[{"id":"settings-instance-method","html_id":"settings-instance-method","name":"settings","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram.cr","line_number":21,"url":null},"def":{"name":"settings","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"HabitatSettings"}}],"macros":[],"types":[{"html_id":"avram/Avram/Associations","path":"Avram/Associations.html","kind":"module","full_name":"Avram::Associations","name":"Associations","abstract":false,"superclass":null,"ancestors":[{"html_id":"avram/Avram/Associations/BelongsTo","kind":"module","full_name":"Avram::Associations::BelongsTo","name":"BelongsTo"},{"html_id":"avram/Avram/Associations/HasOne","kind":"module","full_name":"Avram::Associations::HasOne","name":"HasOne"},{"html_id":"avram/Avram/Associations/HasMany","kind":"module","full_name":"Avram::Associations::HasMany","name":"HasMany"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[{"html_id":"avram/Avram/Associations/BelongsTo","kind":"module","full_name":"Avram::Associations::BelongsTo","name":"BelongsTo"},{"html_id":"avram/Avram/Associations/HasMany","kind":"module","full_name":"Avram::Associations::HasMany","name":"HasMany"},{"html_id":"avram/Avram/Associations/HasOne","kind":"module","full_name":"Avram::Associations::HasOne","name":"HasOne"}],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"avram/Avram/Model","kind":"class","full_name":"Avram::Model","name":"Model"}],"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"avram/Avram/Associations/BelongsTo","path":"Avram/Associations/BelongsTo.html","kind":"module","full_name":"Avram::Associations::BelongsTo","name":"BelongsTo","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"avram/Avram/Associations","kind":"module","full_name":"Avram::Associations","name":"Associations"}],"namespace":{"html_id":"avram/Avram/Associations","kind":"module","full_name":"Avram::Associations","name":"Associations"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[{"id":"belongs_to(type_declaration,foreign_key=nil)-macro","html_id":"belongs_to(type_declaration,foreign_key=nil)-macro","name":"belongs_to","doc":null,"summary":null,"abstract":false,"args":[{"name":"type_declaration","doc":null,"default_value":"","external_name":"type_declaration","restriction":""},{"name":"foreign_key","doc":null,"default_value":"nil","external_name":"foreign_key","restriction":""}],"args_string":"(type_declaration, foreign_key = <span class=\"n\">nil</span>)","location":{"filename":"src/avram/associations/belongs_to.cr","line_number":2,"url":null},"def":{"name":"belongs_to","args":[{"name":"type_declaration","doc":null,"default_value":"","external_name":"type_declaration","restriction":""},{"name":"foreign_key","doc":null,"default_value":"nil","external_name":"foreign_key","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    \n{% assoc_name = type_declaration.var %}\n\n\n    \n{% if type_declaration.type.is_a?(Union) %}\n      {% model = type_declaration.type.types.first %}\n      {% nilable = true %}\n    {% else %}\n      {% model = type_declaration.type %}\n      {% nilable = false %}\n    {% end %}\n\n\n    \n{% if !foreign_key %}\n      {% foreign_key = \"#{assoc_name}_id\".id %}\n    {% end %}\n\n\n    column \n{{ foreign_key.id }}\n : \n{{ model }}\n::PrimaryKeyType\n{% if nilable %}?{% end %}\n\n\n    association \\\n      assoc_name: :\n{{ assoc_name.id }}\n,\n      type: \n{{ model }}\n,\n      foreign_key: :\n{{ foreign_key.id }}\n,\n      relationship_type: :belongs_to\n\n    define_belongs_to_private_assoc_getter(\n{{ assoc_name }}\n, \n{{ model }}\n, \n{{ foreign_key.id }}\n, \n{{ nilable }}\n)\n    Avram::Associations.__define_public_preloaded_getters(\n{{ assoc_name }}\n, \n{{ model }}\n, \n{{ nilable }}\n)\n    Avram::Associations.__define_preloaded_setter(\n{{ assoc_name }}\n, \n{{ model }}\n)\n    define_belongs_to_base_query(\n{{ assoc_name }}\n, \n{{ model }}\n, \n{{ foreign_key.id }}\n)\n  \n"}}],"types":[]},{"html_id":"avram/Avram/Associations/HasMany","path":"Avram/Associations/HasMany.html","kind":"module","full_name":"Avram::Associations::HasMany","name":"HasMany","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"avram/Avram/Associations","kind":"module","full_name":"Avram::Associations","name":"Associations"}],"namespace":{"html_id":"avram/Avram/Associations","kind":"module","full_name":"Avram::Associations","name":"Associations"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[{"id":"has_many(type_declaration,through=nil,foreign_key=nil)-macro","html_id":"has_many(type_declaration,through=nil,foreign_key=nil)-macro","name":"has_many","doc":null,"summary":null,"abstract":false,"args":[{"name":"type_declaration","doc":null,"default_value":"","external_name":"type_declaration","restriction":""},{"name":"through","doc":null,"default_value":"nil","external_name":"through","restriction":""},{"name":"foreign_key","doc":null,"default_value":"nil","external_name":"foreign_key","restriction":""}],"args_string":"(type_declaration, through = <span class=\"n\">nil</span>, foreign_key = <span class=\"n\">nil</span>)","location":{"filename":"src/avram/associations/has_many.cr","line_number":2,"url":null},"def":{"name":"has_many","args":[{"name":"type_declaration","doc":null,"default_value":"","external_name":"type_declaration","restriction":""},{"name":"through","doc":null,"default_value":"nil","external_name":"through","restriction":""},{"name":"foreign_key","doc":null,"default_value":"nil","external_name":"foreign_key","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    \n{% if (!through.is_a?(NilLiteral)) && ((!through.is_a?(ArrayLiteral)) || through.any? do |item|\n  !item.is_a?(SymbolLiteral)\nend) %}\n      {% through.raise(\"'through' on #{@type.name} must be given an Array(Symbol). Instead, got: #{through}\\n\\nExample...\\n   has_many comments : Comment\\n   has_many related_authors : User, through: [:comments, :author]\\n\\nLearn more about associations: https://luckyframework.org/guides/database/models#model-associations\") %}\n    {% end %}\n\n    \n{% if (!through.is_a?(NilLiteral)) && through.size < 2 %}\n      {% through.raise(\"'through' on #{@type.name} must be given at least two items. Instead, got: #{through}\\n\\nExample...\\n   has_many comments : Comment\\n   has_many related_authors : User, through: [:comments, :author]\\n\\nLearn more about associations: https://luckyframework.org/guides/database/models#model-associations\") %}\n    {% end %}\n\n    \n{% assoc_name = type_declaration.var %}\n\n\n    \n{% if foreign_key %}{% else %}\n      {% foreign_key = \"#{(@type.name.underscore.split(\"::\")).last.id}_id\".id %}\n    {% end %}\n\n\n    \n{% foreign_key = foreign_key.id %}\n\n\n    association \\\n      assoc_name: :\n{{ assoc_name }}\n,\n      type: \n{{ type_declaration.type }}\n,\n      foreign_key: :\n{{ foreign_key }}\n,\n      through: \n{{ through }}\n,\n      relationship_type: :has_many\n\n    \n{% model = type_declaration.type %}\n\n\n    define_has_many_lazy_loading(\n{{ assoc_name }}\n, \n{{ model }}\n, \n{{ foreign_key }}\n, \n{{ through }}\n)\n    define_has_many_base_query(\n{{ assoc_name }}\n, \n{{ model }}\n, \n{{ foreign_key }}\n, \n{{ through }}\n)\n  \n"}}],"types":[]},{"html_id":"avram/Avram/Associations/HasOne","path":"Avram/Associations/HasOne.html","kind":"module","full_name":"Avram::Associations::HasOne","name":"HasOne","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"avram/Avram/Associations","kind":"module","full_name":"Avram::Associations","name":"Associations"}],"namespace":{"html_id":"avram/Avram/Associations","kind":"module","full_name":"Avram::Associations","name":"Associations"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[{"id":"has_one(type_declaration,foreign_key=nil)-macro","html_id":"has_one(type_declaration,foreign_key=nil)-macro","name":"has_one","doc":null,"summary":null,"abstract":false,"args":[{"name":"type_declaration","doc":null,"default_value":"","external_name":"type_declaration","restriction":""},{"name":"foreign_key","doc":null,"default_value":"nil","external_name":"foreign_key","restriction":""}],"args_string":"(type_declaration, foreign_key = <span class=\"n\">nil</span>)","location":{"filename":"src/avram/associations/has_one.cr","line_number":2,"url":null},"def":{"name":"has_one","args":[{"name":"type_declaration","doc":null,"default_value":"","external_name":"type_declaration","restriction":""},{"name":"foreign_key","doc":null,"default_value":"nil","external_name":"foreign_key","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    \n{% assoc_name = type_declaration.var %}\n\n\n    \n{% if type_declaration.type.is_a?(Union) %}\n      {% model = type_declaration.type.types.first %}\n      {% nilable = true %}\n    {% else %}\n      {% model = type_declaration.type %}\n      {% nilable = false %}\n    {% end %}\n\n\n    \n{% if foreign_key %}{% else %}\n      {% foreign_key = \"#{(@type.name.underscore.split(\"::\")).last.id}_id\".id %}\n    {% end %}\n\n\n    \n{% foreign_key = foreign_key.id %}\n\n\n    association \\\n      assoc_name: :\n{{ assoc_name.id }}\n,\n      type: \n{{ model }}\n,\n      foreign_key: :\n{{ foreign_key.id }}\n,\n      relationship_type: :has_one\n\n    Avram::Associations.__define_public_preloaded_getters(\n{{ assoc_name }}\n, \n{{ model }}\n, \n{{ nilable }}\n)\n    Avram::Associations.__define_preloaded_setter(\n{{ assoc_name }}\n, \n{{ model }}\n)\n    define_has_one_private_assoc_getter(\n{{ assoc_name }}\n, \n{{ model }}\n, \n{{ foreign_key }}\n, \n{{ nilable }}\n)\n    define_has_one_base_query(\n{{ assoc_name }}\n, \n{{ model }}\n, \n{{ foreign_key }}\n)\n  \n"}}],"types":[]}]},{"html_id":"avram/Avram/Attribute","path":"Avram/Attribute.html","kind":"class","full_name":"Avram::Attribute(T)","name":"Attribute","abstract":false,"superclass":{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"avram/Avram/PermittedAttribute","kind":"class","full_name":"Avram::PermittedAttribute(T)","name":"PermittedAttribute"}],"including_types":[],"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(name,value:T?,param_key,param=nil)-class-method","html_id":"new(name,value:T?,param_key,param=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"T | ::Nil"},{"name":"param_key","doc":null,"default_value":"","external_name":"param_key","restriction":""},{"name":"param","doc":null,"default_value":"nil","external_name":"param","restriction":""}],"args_string":"(name, value : T?, param_key, param = <span class=\"n\">nil</span>)","args_html":"(name, value : T?, param_key, param = <span class=\"n\">nil</span>)","location":{"filename":"src/avram/attribute.cr","line_number":9,"url":null},"def":{"name":"new","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"T | ::Nil"},{"name":"param_key","doc":null,"default_value":"","external_name":"param_key","restriction":""},{"name":"param","doc":null,"default_value":"nil","external_name":"param","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = Attribute(T).allocate\n_.initialize(name, value, param_key, param)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"add_error(message:String=&quot;isinvalid&quot;)-instance-method","html_id":"add_error(message:String=&quot;isinvalid&quot;)-instance-method","name":"add_error","doc":null,"summary":null,"abstract":false,"args":[{"name":"message","doc":null,"default_value":"\"is invalid\"","external_name":"message","restriction":"String"}],"args_string":"(message : String = <span class=\"s\">&quot;is invalid&quot;</span>)","args_html":"(message : <a href=\"../String.html\">String</a> = <span class=\"s\">&quot;is invalid&quot;</span>)","location":{"filename":"src/avram/attribute.cr","line_number":29,"url":null},"def":{"name":"add_error","args":[{"name":"message","doc":null,"default_value":"\"is invalid\"","external_name":"message","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@errors << message"}},{"id":"add_error(message:Proc|Avram::CallableErrorMessage)-instance-method","html_id":"add_error(message:Proc|Avram::CallableErrorMessage)-instance-method","name":"add_error","doc":null,"summary":null,"abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"Proc | Avram::CallableErrorMessage"}],"args_string":"(message : Proc | Avram::CallableErrorMessage)","args_html":"(message : Proc | <a href=\"../Avram/CallableErrorMessage.html\">Avram::CallableErrorMessage</a>)","location":{"filename":"src/avram/attribute.cr","line_number":33,"url":null},"def":{"name":"add_error","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"Proc | Avram::CallableErrorMessage"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"message_string = message.call(@name.to_s, @value.to_s)\nadd_error(message_string)\n"}},{"id":"changed?(from:T?|Nothing=Nothing.new,to:T?|Nothing=Nothing.new):Bool-instance-method","html_id":"changed?(from:T?|Nothing=Nothing.new,to:T?|Nothing=Nothing.new):Bool-instance-method","name":"changed?","doc":null,"summary":null,"abstract":false,"args":[{"name":"from","doc":null,"default_value":"Nothing.new","external_name":"from","restriction":"T | ::Nil | Nothing"},{"name":"to","doc":null,"default_value":"Nothing.new","external_name":"to","restriction":"T | ::Nil | Nothing"}],"args_string":"(from : T? | Nothing = <span class=\"t\">Nothing</span>.<span class=\"k\">new</span>, to : T? | Nothing = <span class=\"t\">Nothing</span>.<span class=\"k\">new</span>) : Bool","args_html":"(from : T? | <a href=\"../Avram/Attribute/Nothing.html\">Nothing</a> = <span class=\"t\">Nothing</span>.<span class=\"k\">new</span>, to : T? | <a href=\"../Avram/Attribute/Nothing.html\">Nothing</a> = <span class=\"t\">Nothing</span>.<span class=\"k\">new</span>) : <a href=\"../Bool.html\">Bool</a>","location":{"filename":"src/avram/attribute.cr","line_number":66,"url":null},"def":{"name":"changed?","args":[{"name":"from","doc":null,"default_value":"Nothing.new","external_name":"from","restriction":"T | ::Nil | Nothing"},{"name":"to","doc":null,"default_value":"Nothing.new","external_name":"to","restriction":"T | ::Nil | Nothing"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"from = from.is_a?(Nothing) ? true : from == original_value\nto = to.is_a?(Nothing) ? true : to == value\n((value != original_value) && from) && to\n"}},{"id":"errors:Array(String)-instance-method","html_id":"errors:Array(String)-instance-method","name":"errors","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(String)","args_html":" : <a href=\"../Array.html\">Array</a>(<a href=\"../String.html\">String</a>)","location":{"filename":"src/avram/attribute.cr","line_number":42,"url":null},"def":{"name":"errors","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(String)","visibility":"Public","body":"@errors.uniq"}},{"id":"extract(params:Avram::Paramable)-instance-method","html_id":"extract(params:Avram::Paramable)-instance-method","name":"extract","doc":null,"summary":null,"abstract":false,"args":[{"name":"params","doc":null,"default_value":"","external_name":"params","restriction":"Avram::Paramable"}],"args_string":"(params : Avram::Paramable)","args_html":"(params : <a href=\"../Avram/Paramable.html\">Avram::Paramable</a>)","location":{"filename":"src/avram/attribute.cr","line_number":72,"url":null},"def":{"name":"extract","args":[{"name":"params","doc":null,"default_value":"","external_name":"params","restriction":"Avram::Paramable"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"extract(params, type: T)"}},{"id":"name:Symbol-instance-method","html_id":"name:Symbol-instance-method","name":"name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Symbol","args_html":" : Symbol","location":{"filename":"src/avram/attribute.cr","line_number":3,"url":null},"def":{"name":"name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Symbol","visibility":"Public","body":"@name"}},{"id":"original_value:T?-instance-method","html_id":"original_value:T?-instance-method","name":"original_value","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : T?","args_html":" : T?","location":{"filename":"src/avram/attribute.cr","line_number":50,"url":null},"def":{"name":"original_value","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"T | ::Nil","visibility":"Public","body":"ensure_no_blank(@original_value)"}},{"id":"param:Avram::Uploadable|String-instance-method","html_id":"param:Avram::Uploadable|String-instance-method","name":"param","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Avram::Uploadable | String","args_html":" : <a href=\"../Avram/Uploadable.html\">Avram::Uploadable</a> | <a href=\"../String.html\">String</a>","location":{"filename":"src/avram/attribute.cr","line_number":25,"url":null},"def":{"name":"param","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Avram::Uploadable | String","visibility":"Public","body":"@param || value.to_s"}},{"id":"param_key:String-instance-method","html_id":"param_key:String-instance-method","name":"param_key","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","args_html":" : <a href=\"../String.html\">String</a>","location":{"filename":"src/avram/attribute.cr","line_number":5,"url":null},"def":{"name":"param_key","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@param_key"}},{"id":"permitted-instance-method","html_id":"permitted-instance-method","name":"permitted","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/attribute.cr","line_number":15,"url":null},"def":{"name":"permitted","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@_permitted || (@_permitted = (Avram::PermittedAttribute(T).new(name: @name, param: @param, value: @value, param_key: @param_key).tap do |attribute|\n  errors.each do |error|\n    attribute.add_error(error)\n  end\nend))"}},{"id":"reset_errors-instance-method","html_id":"reset_errors-instance-method","name":"reset_errors","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/attribute.cr","line_number":38,"url":null},"def":{"name":"reset_errors","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@errors = [] of String"}},{"id":"valid?:Bool-instance-method","html_id":"valid?:Bool-instance-method","name":"valid?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","args_html":" : <a href=\"../Bool.html\">Bool</a>","location":{"filename":"src/avram/attribute.cr","line_number":62,"url":null},"def":{"name":"valid?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"errors.empty?"}},{"id":"value:T?-instance-method","html_id":"value:T?-instance-method","name":"value","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : T?","args_html":" : T?","location":{"filename":"src/avram/attribute.cr","line_number":46,"url":null},"def":{"name":"value","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"T | ::Nil","visibility":"Public","body":"ensure_no_blank(@value)"}},{"id":"value=(value:T?)-instance-method","html_id":"value=(value:T?)-instance-method","name":"value=","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"T | ::Nil"}],"args_string":"(value : T?)","args_html":"(value : T?)","location":{"filename":"src/avram/attribute.cr","line_number":4,"url":null},"def":{"name":"value=","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"T | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@value = value"}}],"macros":[],"types":[{"html_id":"avram/Avram/Attribute/ErrorMessage","path":"Avram/Attribute/ErrorMessage.html","kind":"alias","full_name":"Avram::Attribute::ErrorMessage","name":"ErrorMessage","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":true,"aliased":"(Avram::CallableErrorMessage | Proc(String, String, String) | String)","aliased_html":"<a href=\"../../Avram/CallableErrorMessage.html\">Avram::CallableErrorMessage</a> | <a href=\"../../String.html\">String</a>, <a href=\"../../String.html\">String</a> -> <a href=\"../../String.html\">String</a> | <a href=\"../../String.html\">String</a>","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Avram/Attribute","kind":"class","full_name":"Avram::Attribute(T)","name":"Attribute"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"avram/Avram/Attribute/Nothing","path":"Avram/Attribute/Nothing.html","kind":"class","full_name":"Avram::Attribute::Nothing","name":"Nothing","abstract":false,"superclass":{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Avram/Attribute","kind":"class","full_name":"Avram::Attribute(T)","name":"Attribute"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]},{"html_id":"avram/Avram/AvramError","path":"Avram/AvramError.html","kind":"class","full_name":"Avram::AvramError","name":"AvramError","abstract":false,"superclass":{"html_id":"avram/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"avram/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"avram/Avram/ConnectionError","kind":"class","full_name":"Avram::ConnectionError","name":"ConnectionError"},{"html_id":"avram/Avram/FailedMigration","kind":"class","full_name":"Avram::FailedMigration","name":"FailedMigration"},{"html_id":"avram/Avram/FailedOperation","kind":"class","full_name":"Avram::FailedOperation","name":"FailedOperation"},{"html_id":"avram/Avram/ImpossibleValidation","kind":"class","full_name":"Avram::ImpossibleValidation","name":"ImpossibleValidation"},{"html_id":"avram/Avram/InvalidDatabaseNameError","kind":"class","full_name":"Avram::InvalidDatabaseNameError","name":"InvalidDatabaseNameError"},{"html_id":"avram/Avram/InvalidOperationError","kind":"class","full_name":"Avram::InvalidOperationError","name":"InvalidOperationError"},{"html_id":"avram/Avram/InvalidQueryError","kind":"class","full_name":"Avram::InvalidQueryError","name":"InvalidQueryError"},{"html_id":"avram/Avram/LazyLoadError","kind":"class","full_name":"Avram::LazyLoadError","name":"LazyLoadError"},{"html_id":"avram/Avram/PGClientNotInstalledError","kind":"class","full_name":"Avram::PGClientNotInstalledError","name":"PGClientNotInstalledError"},{"html_id":"avram/Avram/PGNotRunningError","kind":"class","full_name":"Avram::PGNotRunningError","name":"PGNotRunningError"},{"html_id":"avram/Avram/RecordNotFoundError","kind":"class","full_name":"Avram::RecordNotFoundError","name":"RecordNotFoundError"},{"html_id":"avram/Avram/Rollback","kind":"class","full_name":"Avram::Rollback","name":"Rollback"},{"html_id":"avram/Avram/SchemaMismatchError","kind":"class","full_name":"Avram::SchemaMismatchError","name":"SchemaMismatchError"},{"html_id":"avram/Avram/UnsupportedQueryError","kind":"class","full_name":"Avram::UnsupportedQueryError","name":"UnsupportedQueryError"}],"including_types":[],"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":"Generic Avram exception class.","summary":"<p>Generic Avram exception class.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"avram/Avram/BaseQueryTemplate","path":"Avram/BaseQueryTemplate.html","kind":"class","full_name":"Avram::BaseQueryTemplate","name":"BaseQueryTemplate","abstract":false,"superclass":{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[{"id":"setup(type,columns,associations,*args,**named_args)-macro","html_id":"setup(type,columns,associations,*args,**named_args)-macro","name":"setup","doc":null,"summary":null,"abstract":false,"args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":""},{"name":"columns","doc":null,"default_value":"","external_name":"columns","restriction":""},{"name":"associations","doc":null,"default_value":"","external_name":"associations","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(type, columns, associations, *args, **named_args)","location":{"filename":"src/avram/base_query_template.cr","line_number":2,"url":null},"def":{"name":"setup","args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":""},{"name":"columns","doc":null,"default_value":"","external_name":"columns","restriction":""},{"name":"associations","doc":null,"default_value":"","external_name":"associations","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"named_args","doc":null,"default_value":"","external_name":"named_args","restriction":""},"splat_index":3,"block_arg":null,"visibility":"Public","body":"    class ::\n{{ type }}\n::BaseQuery\n      private class Nothing\n      \nend\n\n      def_clone\n      include Avram::Queryable(\n{{ type }}\n)\n\n      \n{% if type.resolve.has_constant?(\"PRIMARY_KEY_NAME\") %}\n        include Avram::PrimaryKeyQueryable({{ type }})\n      {% end %}\n\n\n      macro generate_criteria_method(name, type)\n        def \n\\{\n{ name }}\n          \n\\{\n{ type }}.adapter.criteria(self, \"#{table_name}.\n\\{\n{ name }}\")\n        \nend\n      \nend\n\n      def update(\n          \n{% for column in columns %}\n            {{ column[:name] }} : {{ column[:type] }} | Nothing{% if column[:nilable] %} | Nil{% end %} = Nothing.new,\n          {% end %}\n\n        ) : Int64\n\n        _changes = \n{} of Symbol => String?\n\n        \n{% for column in columns %}\n          if {{ column[:name] }}.nil?\n            _changes[:{{ column[:name] }}] = nil\n          elsif {{ column[:name] }}.is_a?(Nothing)\n            nil\n          else\n            value = {{ column[:name] }}.not_nil!.class.adapter.to_db({{ column[:name] }}).to_s\n            _changes[:{{ column[:name] }}] = value\n          end\n        {% end %}\n\n\n        database.exec(\n          query.statement_for_update(_changes, return_columns: false),\n          args: query.args_for_update(_changes)\n        ).rows_affected\n      \nend\n\n      \n{% for column in columns %}\n        def {{ column[:name] }}(value)\n          {{ column[:name] }}.eq(value)\n        end\n\n        generate_criteria_method({{ column[:name] }}, {{ column[:type] }})\n\n        macro inherited\n          generate_criteria_method({{ column[:name] }}, {{ column[:type] }})\n        end\n      {% end %}\n\n\n      \n{% for assoc in associations %}\n        def join_{{ assoc[:assoc_name] }}\n          inner_join_{{ assoc[:assoc_name] }}\n        end\n\n        {% for join_type in [\"Inner\", \"Left\", \"Right\", \"Full\"] %}\n          def {{ join_type.downcase.id }}_join_{{ assoc[:assoc_name] }}\n            {% if assoc[:relationship_type] == (:belongs_to) %}\n              join(\n                Avram::Join::{{ join_type.id }}.new(\n                  from: table_name,\n                  to: {{ assoc[:type] }}::TABLE_NAME,\n                  primary_key: {{ assoc[:foreign_key].id.symbolize }},\n                  foreign_key: {{ assoc[:type] }}::PRIMARY_KEY_NAME\n                )\n              )\n            {% else %}{% if assoc[:relationship_type] == (:has_one) %}\n              join(\n                Avram::Join::{{ join_type.id }}.new(\n                  from: table_name,\n                  to: {{ assoc[:type] }}::TABLE_NAME,\n                  foreign_key: {{ assoc[:foreign_key].id.symbolize }},\n                  primary_key: primary_key_name\n                )\n              )\n            {% else %}{% if assoc[:through] %}\n              {{ join_type.downcase.id }}_join_{{ assoc[:through].first.id }}\n                .__yield_where_{{ assoc[:through].first.id }} do |join_query|\n                  join_query.{{ join_type.downcase.id }}_join_{{ assoc[:through][1].id }}\n                end\n            {% else %}\n              join(\n                Avram::Join::{{ join_type.id }}.new(\n                  from: table_name,\n                  to: {{ assoc[:type] }}::TABLE_NAME,\n                  foreign_key: {{ assoc[:foreign_key] }},\n                  primary_key: primary_key_name\n                )\n              )\n            {% end %}{% end %}{% end %}\n          end\n        {% end %}\n\n\n        def where_{{ assoc[:assoc_name] }}(assoc_query : {{ assoc[:type] }}::BaseQuery, auto_inner_join : Bool = true)\n          if auto_inner_join\n            join_{{ assoc[:assoc_name] }}.merge_query(assoc_query.query)\n          else\n            merge_query(assoc_query.query)\n          end\n        end\n\n        # :nodoc:\n        # Used internally for has_many through queries\n        def __yield_where_{{ assoc[:assoc_name] }}\n          assoc_query = yield {{ assoc[:type] }}::BaseQuery.new\n          merge_query(assoc_query.query)\n        end\n\n        def {{ assoc[:assoc_name] }}\n          \\{% raise <<-ERROR\n            The methods for querying associations have changed\n\n              * They are now prefixed with 'where_'.\n              * The query is no longer yielded. You must pass it explicitly.\n\n            Example:\n\n              where_{{ assoc[:assoc_name] }}({{ assoc[:type] }}Query.new.some_condition)\n            ERROR\n          %}\n          yield # This is not used. Just there so it works with blocks.\n        end\n      {% end %}\n\n    \nend\n  \n"}}],"types":[]},{"html_id":"avram/Avram/BetweenCriteria","path":"Avram/BetweenCriteria.html","kind":"module","full_name":"Avram::BetweenCriteria(T, V)","name":"BetweenCriteria","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"avram/Float64/Lucky/Criteria","kind":"class","full_name":"Float64::Lucky::Criteria(T, V)","name":"Criteria"},{"html_id":"avram/Int16/Lucky/Criteria","kind":"class","full_name":"Int16::Lucky::Criteria(T, V)","name":"Criteria"},{"html_id":"avram/Int32/Lucky/Criteria","kind":"class","full_name":"Int32::Lucky::Criteria(T, V)","name":"Criteria"},{"html_id":"avram/Int64/Lucky/Criteria","kind":"class","full_name":"Int64::Lucky::Criteria(T, V)","name":"Criteria"},{"html_id":"avram/Time/Lucky/Criteria","kind":"class","full_name":"Time::Lucky::Criteria(T, V)","name":"Criteria"}],"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"avram/Avram/Box","path":"Avram/Box.html","kind":"class","full_name":"Avram::Box","name":"Box","abstract":true,"superclass":{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"avram/Avram/CallableErrorMessage","path":"Avram/CallableErrorMessage.html","kind":"module","full_name":"Avram::CallableErrorMessage","name":"CallableErrorMessage","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"call(attribute_name,attribute_value)-instance-method","html_id":"call(attribute_name,attribute_value)-instance-method","name":"call","doc":null,"summary":null,"abstract":true,"args":[{"name":"attribute_name","doc":null,"default_value":"","external_name":"attribute_name","restriction":""},{"name":"attribute_value","doc":null,"default_value":"","external_name":"attribute_value","restriction":""}],"args_string":"(attribute_name, attribute_value)","args_html":"(attribute_name, attribute_value)","location":{"filename":"src/avram/validations/callable_error_message.cr","line_number":2,"url":null},"def":{"name":"call","args":[{"name":"attribute_name","doc":null,"default_value":"","external_name":"attribute_name","restriction":""},{"name":"attribute_value","doc":null,"default_value":"","external_name":"attribute_value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}}],"macros":[],"types":[]},{"html_id":"avram/Avram/Callbacks","path":"Avram/Callbacks.html","kind":"module","full_name":"Avram::Callbacks","name":"Callbacks","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"avram/Avram/DeleteOperation","kind":"class","full_name":"Avram::DeleteOperation(T)","name":"DeleteOperation"},{"html_id":"avram/Avram/Operation","kind":"class","full_name":"Avram::Operation","name":"Operation"},{"html_id":"avram/Avram/SaveOperation","kind":"class","full_name":"Avram::SaveOperation(T)","name":"SaveOperation"}],"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[{"id":"after_commit(if_if=nil,unless_unless=nil,&block)-macro","html_id":"after_commit(if_if=nil,unless_unless=nil,&amp;block)-macro","name":"after_commit","doc":"Run the given block after save and after successful transaction commit\n\nThe newly saved record will be passed to the method.\n\n```\nclass SaveComment < Comment::SaveOperation\n  after_commit do |comment|\n    NewCommentNotificationEmail.new(comment, to: comment.author!).deliver_now\n  end\nend\n```","summary":"<p>Run the given block after save and after successful transaction commit</p>","abstract":false,"args":[{"name":"_if","doc":null,"default_value":"nil","external_name":"if","restriction":""},{"name":"_unless","doc":null,"default_value":"nil","external_name":"unless","restriction":""}],"args_string":"(if _if = <span class=\"n\">nil</span>, unless _unless = <span class=\"n\">nil</span>, &block)","location":{"filename":"src/avram/callbacks.cr","line_number":462,"url":null},"def":{"name":"after_commit","args":[{"name":"_if","doc":null,"default_value":"nil","external_name":"if","restriction":""},{"name":"_unless","doc":null,"default_value":"nil","external_name":"unless","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":""},"visibility":"Public","body":"    \n{% if (_if != nil) && (_unless != nil) %}\n      {% raise(\"Your after_commit callbacks should only specify `if` or `unless`, but not both.\") %}\n    {% end %}\n\n    \n{% if _if.is_a?(SymbolLiteral) || _if.is_a?(NilLiteral) %}{% else %}\n      conditional_error_for_block_callbacks(:after_commit, :if)\n    {% end %}\n\n    \n{% if _unless.is_a?(SymbolLiteral) || _unless.is_a?(NilLiteral) %}{% else %}\n      conditional_error_for_block_callbacks(:after_commit, :unless)\n    {% end %}\n\n    \n{% if block.args.size != 1\n  raise(\"The 'after_commit' callback requires exactly 1 block arg to be passed.\\nExample:\\n  after_commit do |saved_user|\\n    some_method(saved_user)\\n  end\")\nend %}\n\n    def after_commit(\n%object\n : T)\n      \n{% if @type.methods.map(&.name).includes?((:after_commit).id) %}\n        previous_def\n      {% else %}\n        super\n      {% end %}\n\n\n      \n{% if _if %}\n      if {{ _if.id }}\n        {{ block.args.first }} = %object\n        {{ block.body }}\n      end\n      {% else %}{% if _unless %}\n      unless {{ _unless.id }}\n        {{ block.args.first }} = %object\n        {{ block.body }}\n      end\n      {% else %}\n        {{ block.args.first }} = %object\n        {{ block.body }}\n      {% end %}{% end %}\n\n    \nend\n  \n"}},{"id":"after_commit(method_name,if_if=nil,unless_unless=nil)-macro","html_id":"after_commit(method_name,if_if=nil,unless_unless=nil)-macro","name":"after_commit","doc":"Run the given method after save and after successful transaction commit\n\nOptionally you can pass an `if` or `unless` argument which allows you to\nrun this conditionally. The symbol should reference a method you've defined\nthat returns a truthy/falsey value\n\nThe newly saved record will be passed to the method.\n\n```\nclass SaveComment < Comment::SaveOperation\n  after_commit notify_post_author\n\n  private def notify_post_author(comment : Comment)\n    NewCommentNotificationEmail.new(comment, to: comment.author!).deliver_now\n  end\nend\n```\n","summary":"<p>Run the given method after save and after successful transaction commit</p>","abstract":false,"args":[{"name":"method_name","doc":null,"default_value":"","external_name":"method_name","restriction":""},{"name":"_if","doc":null,"default_value":"nil","external_name":"if","restriction":""},{"name":"_unless","doc":null,"default_value":"nil","external_name":"unless","restriction":""}],"args_string":"(method_name, if _if = <span class=\"n\">nil</span>, unless _unless = <span class=\"n\">nil</span>)","location":{"filename":"src/avram/callbacks.cr","line_number":439,"url":null},"def":{"name":"after_commit","args":[{"name":"method_name","doc":null,"default_value":"","external_name":"method_name","restriction":""},{"name":"_if","doc":null,"default_value":"nil","external_name":"if","restriction":""},{"name":"_unless","doc":null,"default_value":"nil","external_name":"unless","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    \n{% if _if.is_a?(SymbolLiteral) || _if.is_a?(NilLiteral) %}{% else %}\n      conditional_error_for_inline_callbacks(:after_commit, {{ method_name }}, :if)\n    {% end %}\n\n    \n{% if _unless.is_a?(SymbolLiteral) || _unless.is_a?(NilLiteral) %}{% else %}\n      conditional_error_for_inline_callbacks(:after_commit, {{ method_name }}, :unless)\n    {% end %}\n\n    after_commit(if: \n{{ _if }}\n, unless: \n{{ _unless }}\n) do |object|\n      \n{{ method_name.id }}\n(object)\n    \nend\n  \n"}},{"id":"after_completed(&block)-macro","html_id":"after_completed(&amp;block)-macro","name":"after_completed","doc":"Run the given block after save and after successful transaction commit\nThis is the only SaveOperation callback that runs when no changes\nare made to an existing record.\n\nThe record will be passed to the method.\n\n```\nclass SaveComment < Comment::SaveOperation\n  after_completed do |comment|\n  end\nend\n```","summary":"<p>Run the given block after save and after successful transaction commit This is the only SaveOperation callback that runs when no changes are made to an existing record.</p>","abstract":false,"args":[],"args_string":"(&block)","location":{"filename":"src/avram/callbacks.cr","line_number":549,"url":null},"def":{"name":"after_completed","args":[],"double_splat":null,"splat_index":null,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":""},"visibility":"Public","body":"    \n{% raise(\"after_completed has been removed\\n\\nThe after_save and after_commit callbacks are called even if no changes were made\\n\\nTry this...\\n\\n  ▸ after_commit #{block.id}\") %}\n\n  \n"}},{"id":"after_completed(method_name)-macro","html_id":"after_completed(method_name)-macro","name":"after_completed","doc":"Run the given method after the SaveOperation has completed everything.\nDuring normal operations, this runs after the `after_commit`.\nThis is the only SaveOperation callback that runs when no changes\nare made to an existing record.\n\nThe record will be passed to the method.\n\n```\nclass SaveComment < Comment::SaveOperation\n  after_completed pass_info_to_author\n\n  private def pass_info_to_author(comment : Comment)\n    SaveAuthor\n  end\nend\n```\n","summary":"<p>Run the given method after the SaveOperation has completed everything.</p>","abstract":false,"args":[{"name":"method_name","doc":null,"default_value":"","external_name":"method_name","restriction":""}],"args_string":"(method_name)","location":{"filename":"src/avram/callbacks.cr","line_number":524,"url":null},"def":{"name":"after_completed","args":[{"name":"method_name","doc":null,"default_value":"","external_name":"method_name","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    \n{% raise(\"after_completed has been removed\\n\\nThe after_save and after_commit callbacks are called even if no changes were made\\n\\nTry this...\\n\\n  ▸ after_commit #{method_name.id}\") %}\n\n  \n"}},{"id":"after_delete(if_if=nil,unless_unless=nil,&block)-macro","html_id":"after_delete(if_if=nil,unless_unless=nil,&amp;block)-macro","name":"after_delete","doc":null,"summary":null,"abstract":false,"args":[{"name":"_if","doc":null,"default_value":"nil","external_name":"if","restriction":""},{"name":"_unless","doc":null,"default_value":"nil","external_name":"unless","restriction":""}],"args_string":"(if _if = <span class=\"n\">nil</span>, unless _unless = <span class=\"n\">nil</span>, &block)","location":{"filename":"src/avram/callbacks.cr","line_number":323,"url":null},"def":{"name":"after_delete","args":[{"name":"_if","doc":null,"default_value":"nil","external_name":"if","restriction":""},{"name":"_unless","doc":null,"default_value":"nil","external_name":"unless","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":""},"visibility":"Public","body":"    \n{% if (_if != nil) && (_unless != nil) %}\n      {% raise(\"Your after_delete callbacks should only specify `if` or `unless`, but not both.\") %}\n    {% end %}\n\n    \n{% if _if.is_a?(SymbolLiteral) || _if.is_a?(NilLiteral) %}{% else %}\n      conditional_error_for_block_callbacks(:after_delete, :if)\n    {% end %}\n\n    \n{% if _unless.is_a?(SymbolLiteral) || _unless.is_a?(NilLiteral) %}{% else %}\n      conditional_error_for_block_callbacks(:after_delete, :unless)\n    {% end %}\n\n    \n{% if block.args.size != 1\n  raise(\"The 'after_delete' callback requires exactly 1 block arg to be passed.\\nExample:\\n  after_delete do |deleted_user|\\n    some_method(deleted_user)\\n  end\")\nend %}\n\n    def after_delete(\n%object\n : T)\n      \n{% if @type.methods.map(&.name).includes?((:after_delete).id) %}\n        previous_def\n      {% else %}\n        super\n      {% end %}\n\n\n      \n{% if _if %}\n      if {{ _if.id }}\n        {{ block.args.first }} = %object\n        {{ block.body }}\n      end\n      {% else %}{% if _unless %}\n      unless {{ _unless.id }}\n        {{ block.args.first }} = %object\n        {{ block.body }}\n      end\n      {% else %}\n        {{ block.args.first }} = %object\n        {{ block.body }}\n      {% end %}{% end %}\n\n    \nend\n  \n"}},{"id":"after_delete(method_name,if_if=nil,unless_unless=nil)-macro","html_id":"after_delete(method_name,if_if=nil,unless_unless=nil)-macro","name":"after_delete","doc":"Same as `after_save` but with a different name","summary":"<p>Same as <code><a href=\"../Avram/Callbacks.html#after_save(if_if=nil,unless_unless=nil,&block)-macro\">after_save</a></code> but with a different name</p>","abstract":false,"args":[{"name":"method_name","doc":null,"default_value":"","external_name":"method_name","restriction":""},{"name":"_if","doc":null,"default_value":"nil","external_name":"if","restriction":""},{"name":"_unless","doc":null,"default_value":"nil","external_name":"unless","restriction":""}],"args_string":"(method_name, if _if = <span class=\"n\">nil</span>, unless _unless = <span class=\"n\">nil</span>)","location":{"filename":"src/avram/callbacks.cr","line_number":243,"url":null},"def":{"name":"after_delete","args":[{"name":"method_name","doc":null,"default_value":"","external_name":"method_name","restriction":""},{"name":"_if","doc":null,"default_value":"nil","external_name":"if","restriction":""},{"name":"_unless","doc":null,"default_value":"nil","external_name":"unless","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    \n{% if _if.is_a?(SymbolLiteral) || _if.is_a?(NilLiteral) %}{% else %}\n      conditional_error_for_inline_callbacks(:after_delete, {{ method_name }}, :if)\n    {% end %}\n\n    \n{% if _unless.is_a?(SymbolLiteral) || _unless.is_a?(NilLiteral) %}{% else %}\n      conditional_error_for_inline_callbacks(:after_delete, {{ method_name }}, :unless)\n    {% end %}\n\n    after_delete(if: \n{{ _if }}\n, unless: \n{{ _unless }}\n) do |object|\n      \n{{ method_name.id }}\n(object)\n    \nend\n  \n"}},{"id":"after_run(&block)-macro","html_id":"after_run(&amp;block)-macro","name":"after_run","doc":"Run the given block after the operation runs\n\nThe return value from `run` will be passed to this block.\n\n```\nclass GenerateReport < Avram::Operation\n  after_run do |value|\n    value == \"some report\"\n  end\n\n  def run\n    \"some report\"\n  end\nend\n```","summary":"<p>Run the given block after the operation runs</p>","abstract":false,"args":[],"args_string":"(&block)","location":{"filename":"src/avram/callbacks.cr","line_number":399,"url":null},"def":{"name":"after_run","args":[],"double_splat":null,"splat_index":null,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":""},"visibility":"Public","body":"    \n{% if block.args.size != 1\n  raise(\"The 'after_run' callback requires exactly 1 block arg to be passed.\\nExample:\\n  after_run { |value| some_method(value) }\")\nend %}\n\n    def after_run(\n%object\n)\n      \n{% if @type.methods.map(&.name).includes?((:after_run).id) %}\n        previous_def\n      {% else %}\n        super\n      {% end %}\n\n\n      \n{{ block.args.first }}\n = \n%object\n\n      \n{{ block.body }}\n\n    \nend\n  \n"}},{"id":"after_run(method_name)-macro","html_id":"after_run(method_name)-macro","name":"after_run","doc":"Run the given method after `run` is called on an `Operation`.\nThe return value of the `run` method is passed to `method_name`.\n\n```\nafter_run :log_entry\n\nprivate def log_entry(value)\n  log_stuff(value)\nend\n```","summary":"<p>Run the given method after <code>run</code> is called on an <code><a href=\"../Avram/Operation.html\">Operation</a></code>.</p>","abstract":false,"args":[{"name":"method_name","doc":null,"default_value":"","external_name":"method_name","restriction":""}],"args_string":"(method_name)","location":{"filename":"src/avram/callbacks.cr","line_number":378,"url":null},"def":{"name":"after_run","args":[{"name":"method_name","doc":null,"default_value":"","external_name":"method_name","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    after_run do |object|\n      \n{{ method_name.id }}\n(object)\n    \nend\n  \n"}},{"id":"after_save(if_if=nil,unless_unless=nil,&block)-macro","html_id":"after_save(if_if=nil,unless_unless=nil,&amp;block)-macro","name":"after_save","doc":"Run the given block after save, but before transaction is committed\n\nOptionally you can pass an `if` or `unless` argument which allows you to\nrun this conditionally. The symbol should reference a method you've defined\nthat returns a truthy/falsey value\n\nThis is a great place to do other database saves because if something goes\nwrong the whole transaction would be rolled back.\n\nThe newly saved record will be passed to the method.\n\n```\nclass SaveComment < Comment::SaveOperation\n  after_save do |comment|\n    SavePost.update!(comment.post!, updated_at: Time.utc)\n  end\nend\n```\n\n> This is *not* a good place to do things like send messages, enqueue\n> background jobs, or charge payments. Since the transaction could be rolled\n> back the record may not be persisted to the database.\n> Instead use `after_commit`","summary":"<p>Run the given block after save, but before transaction is committed</p>","abstract":false,"args":[{"name":"_if","doc":null,"default_value":"nil","external_name":"if","restriction":""},{"name":"_unless","doc":null,"default_value":"nil","external_name":"unless","restriction":""}],"args_string":"(if _if = <span class=\"n\">nil</span>, unless _unless = <span class=\"n\">nil</span>, &block)","location":{"filename":"src/avram/callbacks.cr","line_number":278,"url":null},"def":{"name":"after_save","args":[{"name":"_if","doc":null,"default_value":"nil","external_name":"if","restriction":""},{"name":"_unless","doc":null,"default_value":"nil","external_name":"unless","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":""},"visibility":"Public","body":"    \n{% if (_if != nil) && (_unless != nil) %}\n      {% raise(\"Your after_save callbacks should only specify `if` or `unless`, but not both.\") %}\n    {% end %}\n\n    \n{% if _if.is_a?(SymbolLiteral) || _if.is_a?(NilLiteral) %}{% else %}\n      conditional_error_for_block_callbacks(:after_save, :if)\n    {% end %}\n\n    \n{% if _unless.is_a?(SymbolLiteral) || _unless.is_a?(NilLiteral) %}{% else %}\n      conditional_error_for_block_callbacks(:after_save, :unless)\n    {% end %}\n\n    \n{% if block.args.size != 1\n  raise(\"The 'after_save' callback requires exactly 1 block arg to be passed.\\nExample:\\n  after_save do |saved_user|\\n    some_method(saved_user)\\n  end\")\nend %}\n\n    def after_save(\n%object\n : T)\n      \n{% if @type.methods.map(&.name).includes?((:after_save).id) %}\n        previous_def\n      {% else %}\n        super\n      {% end %}\n\n\n      \n{% if _if %}\n      if {{ _if.id }}\n        {{ block.args.first }} = %object\n        {{ block.body }}\n      end\n      {% else %}{% if _unless %}\n      unless {{ _unless.id }}\n        {{ block.args.first }} = %object\n        {{ block.body }}\n      end\n      {% else %}\n        {{ block.args.first }} = %object\n        {{ block.body }}\n      {% end %}{% end %}\n\n    \nend\n  \n"}},{"id":"after_save(method_name,if_if=nil,unless_unless=nil)-macro","html_id":"after_save(method_name,if_if=nil,unless_unless=nil)-macro","name":"after_save","doc":"Run the given method after save, but before transaction is committed\n\nOptionally you can pass an `if` or `unless` argument which allows you to\nrun this conditionally. The symbol should reference a method you've defined\nthat returns a truthy/falsey value\n\nThis is a great place to do other database saves because if something goes\nwrong the whole transaction would be rolled back.\n\nThe newly saved record will be passed to the method.\n\n```\nclass SaveComment < Comment::SaveOperation\n  after_save touch_post\n\n  private def touch_post(comment : Comment)\n    SavePost.update!(comment.post!, updated_at: Time.utc)\n  end\nend\n```\n\n> This is *not* a good place to do things like send messages, enqueue\n> background jobs, or charge payments. Since the transaction could be rolled\n> back the record may not be persisted to the database.\n> Instead use `after_commit`","summary":"<p>Run the given method after save, but before transaction is committed</p>","abstract":false,"args":[{"name":"method_name","doc":null,"default_value":"","external_name":"method_name","restriction":""},{"name":"_if","doc":null,"default_value":"nil","external_name":"if","restriction":""},{"name":"_unless","doc":null,"default_value":"nil","external_name":"unless","restriction":""}],"args_string":"(method_name, if _if = <span class=\"n\">nil</span>, unless _unless = <span class=\"n\">nil</span>)","location":{"filename":"src/avram/callbacks.cr","line_number":230,"url":null},"def":{"name":"after_save","args":[{"name":"method_name","doc":null,"default_value":"","external_name":"method_name","restriction":""},{"name":"_if","doc":null,"default_value":"nil","external_name":"if","restriction":""},{"name":"_unless","doc":null,"default_value":"nil","external_name":"unless","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    \n{% if _if.is_a?(SymbolLiteral) || _if.is_a?(NilLiteral) %}{% else %}\n      conditional_error_for_inline_callbacks(:after_save, {{ method_name }}, :if)\n    {% end %}\n\n    \n{% if _unless.is_a?(SymbolLiteral) || _unless.is_a?(NilLiteral) %}{% else %}\n      conditional_error_for_inline_callbacks(:after_save, {{ method_name }}, :unless)\n    {% end %}\n\n    after_save(if: \n{{ _if }}\n, unless: \n{{ _unless }}\n) do |object|\n      \n{{ method_name.id }}\n(object)\n    \nend\n  \n"}},{"id":"before_delete(if_if=nil,unless_unless=nil)-macro","html_id":"before_delete(if_if=nil,unless_unless=nil)-macro","name":"before_delete","doc":null,"summary":null,"abstract":false,"args":[{"name":"_if","doc":null,"default_value":"nil","external_name":"if","restriction":""},{"name":"_unless","doc":null,"default_value":"nil","external_name":"unless","restriction":""}],"args_string":"(if _if = <span class=\"n\">nil</span>, unless _unless = <span class=\"n\">nil</span>)","location":{"filename":"src/avram/callbacks.cr","line_number":154,"url":null},"def":{"name":"before_delete","args":[{"name":"_if","doc":null,"default_value":"nil","external_name":"if","restriction":""},{"name":"_unless","doc":null,"default_value":"nil","external_name":"unless","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    \n{% if (_if != nil) && (_unless != nil) %}\n      {% raise(\"Your before_delete callbacks should only specify `if` or `unless`, but not both.\") %}\n    {% end %}\n\n    \n{% if _if.is_a?(SymbolLiteral) || _if.is_a?(NilLiteral) %}{% else %}\n      conditional_error_for_block_callbacks(:before_delete, :if)\n    {% end %}\n\n    \n{% if _unless.is_a?(SymbolLiteral) || _unless.is_a?(NilLiteral) %}{% else %}\n      conditional_error_for_block_callbacks(:before_delete, :unless)\n    {% end %}\n\n\n    def before_delete\n      \n{% if @type.methods.map(&.name).includes?((:before_delete).id) %}\n        previous_def\n      {% else %}\n        super\n      {% end %}\n\n\n      \n{% if _if %}\n      if {{ _if.id }}\n        {{ yield }}\n      end\n      {% else %}{% if _unless %}\n      unless {{ _unless.id }}\n        {{ yield }}\n      end\n      {% else %}\n        {{ yield }}\n      {% end %}{% end %}\n\n    \nend\n  \n"}},{"id":"before_delete(method_name,if_if=nil,unless_unless=nil)-macro","html_id":"before_delete(method_name,if_if=nil,unless_unless=nil)-macro","name":"before_delete","doc":"Same as `before_save`, but with a different name","summary":"<p>Same as <code><a href=\"../Avram/Callbacks.html#before_save(if_if=nil,unless_unless=nil)-macro\">before_save</a></code>, but with a different name</p>","abstract":false,"args":[{"name":"method_name","doc":null,"default_value":"","external_name":"method_name","restriction":""},{"name":"_if","doc":null,"default_value":"nil","external_name":"if","restriction":""},{"name":"_unless","doc":null,"default_value":"nil","external_name":"unless","restriction":""}],"args_string":"(method_name, if _if = <span class=\"n\">nil</span>, unless _unless = <span class=\"n\">nil</span>)","location":{"filename":"src/avram/callbacks.cr","line_number":76,"url":null},"def":{"name":"before_delete","args":[{"name":"method_name","doc":null,"default_value":"","external_name":"method_name","restriction":""},{"name":"_if","doc":null,"default_value":"nil","external_name":"if","restriction":""},{"name":"_unless","doc":null,"default_value":"nil","external_name":"unless","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    \n{% if _if.is_a?(SymbolLiteral) || _if.is_a?(NilLiteral) %}{% else %}\n      conditional_error_for_inline_callbacks(:before_delete, {{ method_name }}, :if)\n    {% end %}\n\n    \n{% if _unless.is_a?(SymbolLiteral) || _unless.is_a?(NilLiteral) %}{% else %}\n      conditional_error_for_inline_callbacks(:before_delete, {{ method_name }}, :unless)\n    {% end %}\n\n    before_delete(if: \n{{ _if }}\n, unless: \n{{ _unless }}\n) do\n      \n{{ method_name.id }}\n\n    \nend\n  \n"}},{"id":"before_run-macro","html_id":"before_run-macro","name":"before_run","doc":"Run the given block before `run` is called on an `Operation`.\n\n```\nbefore_run do\n  validate_required data\nend\n```","summary":"<p>Run the given block before <code>run</code> is called on an <code><a href=\"../Avram/Operation.html\">Operation</a></code>.</p>","abstract":false,"args":[],"args_string":"","location":{"filename":"src/avram/callbacks.cr","line_number":193,"url":null},"def":{"name":"before_run","args":[],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    def before_run\n      \n{% if @type.methods.map(&.name).includes?((:before_run).id) %}\n        previous_def\n      {% else %}\n        super\n      {% end %}\n\n\n      \n{{ yield }}\n\n    \nend\n  \n"}},{"id":"before_run(method_name)-macro","html_id":"before_run(method_name)-macro","name":"before_run","doc":"Run the given method before `run` is called on an `Operation`.\n\n```\nbefore_run :validate_inputs\n\nprivate def validate_inputs\n  validate_required data\nend\n```","summary":"<p>Run the given method before <code>run</code> is called on an <code><a href=\"../Avram/Operation.html\">Operation</a></code>.</p>","abstract":false,"args":[{"name":"method_name","doc":null,"default_value":"","external_name":"method_name","restriction":""}],"args_string":"(method_name)","location":{"filename":"src/avram/callbacks.cr","line_number":97,"url":null},"def":{"name":"before_run","args":[{"name":"method_name","doc":null,"default_value":"","external_name":"method_name","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    before_run do\n      \n{{ method_name.id }}\n\n    \nend\n  \n"}},{"id":"before_save(if_if=nil,unless_unless=nil)-macro","html_id":"before_save(if_if=nil,unless_unless=nil)-macro","name":"before_save","doc":"Run the given block before saving or creating for `SaveOperation`\n\nThis runs before saving and before the database transaction is started.\nYou can set defaults, validate, or perform any other setup necessary for\nsaving.\n\nOptionally you can pass an `if` or `unless` argument which allows you to\nrun this conditionally. The symbol should reference a method you've defined\nthat returns a truthy/falsey value\n\n```\nbefore_save(unless: :skip_callback?) do\n  validate_required name, age\nend\n\nprivate def skip_callback?\n  false\nend\n```","summary":"<p>Run the given block before saving or creating for <code><a href=\"../Avram/SaveOperation.html\">SaveOperation</a></code></p>","abstract":false,"args":[{"name":"_if","doc":null,"default_value":"nil","external_name":"if","restriction":""},{"name":"_unless","doc":null,"default_value":"nil","external_name":"unless","restriction":""}],"args_string":"(if _if = <span class=\"n\">nil</span>, unless _unless = <span class=\"n\">nil</span>)","location":{"filename":"src/avram/callbacks.cr","line_number":122,"url":null},"def":{"name":"before_save","args":[{"name":"_if","doc":null,"default_value":"nil","external_name":"if","restriction":""},{"name":"_unless","doc":null,"default_value":"nil","external_name":"unless","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    \n{% if (_if != nil) && (_unless != nil) %}\n      {% raise(\"Your before_save callbacks should only specify `if` or `unless`, but not both.\") %}\n    {% end %}\n\n    \n{% if _if.is_a?(SymbolLiteral) || _if.is_a?(NilLiteral) %}{% else %}\n      conditional_error_for_block_callbacks(:before_save, :if)\n    {% end %}\n\n    \n{% if _unless.is_a?(SymbolLiteral) || _unless.is_a?(NilLiteral) %}{% else %}\n      conditional_error_for_block_callbacks(:before_save, :unless)\n    {% end %}\n\n\n    def before_save\n      \n{% if @type.methods.map(&.name).includes?((:before_save).id) %}\n        previous_def\n      {% else %}\n        super\n      {% end %}\n\n\n      \n{% if _if %}\n      if {{ _if.id }}\n        {{ yield }}\n      end\n      {% else %}{% if _unless %}\n      unless {{ _unless.id }}\n        {{ yield }}\n      end\n      {% else %}\n        {{ yield }}\n      {% end %}{% end %}\n\n    \nend\n  \n"}},{"id":"before_save(method_name,if_if=nil,unless_unless=nil)-macro","html_id":"before_save(method_name,if_if=nil,unless_unless=nil)-macro","name":"before_save","doc":"Run the given method before saving or creating for `SaveOperation`\n\nThis runs before saving and before the database transaction is started.\nYou can set defaults, validate, or perform any other setup necessary for\nsaving.\n\nOptionally you can pass an `if` or `unless` argument which allows you to\nrun this conditionally. The symbol should reference a method you've defined\nthat returns a truthy/falsey value\n\n```\nbefore_save :run_validations\nbefore_save :validate_can_internet, unless: :too_cool_for_school?\n\nprivate def run_validations\n  validate_required name, age\nend\n\nprivate def validate_can_internet\n  validate_size_of age, min: 13\nend\n\nprivate def too_cool_for_school?\n  [true, false].sample\nend\n```","summary":"<p>Run the given method before saving or creating for <code><a href=\"../Avram/SaveOperation.html\">SaveOperation</a></code></p>","abstract":false,"args":[{"name":"method_name","doc":null,"default_value":"","external_name":"method_name","restriction":""},{"name":"_if","doc":null,"default_value":"nil","external_name":"if","restriction":""},{"name":"_unless","doc":null,"default_value":"nil","external_name":"unless","restriction":""}],"args_string":"(method_name, if _if = <span class=\"n\">nil</span>, unless _unless = <span class=\"n\">nil</span>)","location":{"filename":"src/avram/callbacks.cr","line_number":63,"url":null},"def":{"name":"before_save","args":[{"name":"method_name","doc":null,"default_value":"","external_name":"method_name","restriction":""},{"name":"_if","doc":null,"default_value":"nil","external_name":"if","restriction":""},{"name":"_unless","doc":null,"default_value":"nil","external_name":"unless","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    \n{% if _if.is_a?(SymbolLiteral) || _if.is_a?(NilLiteral) %}{% else %}\n      conditional_error_for_inline_callbacks(:before_save, {{ method_name }}, :if)\n    {% end %}\n\n    \n{% if _unless.is_a?(SymbolLiteral) || _unless.is_a?(NilLiteral) %}{% else %}\n      conditional_error_for_inline_callbacks(:before_save, {{ method_name }}, :unless)\n    {% end %}\n\n    before_save(if: \n{{ _if }}\n, unless: \n{{ _unless }}\n) do\n      \n{{ method_name.id }}\n\n    \nend\n  \n"}},{"id":"conditional_error_for_block_callbacks(callback,condition)-macro","html_id":"conditional_error_for_block_callbacks(callback,condition)-macro","name":"conditional_error_for_block_callbacks","doc":null,"summary":null,"abstract":false,"args":[{"name":"callback","doc":null,"default_value":"","external_name":"callback","restriction":""},{"name":"condition","doc":null,"default_value":"","external_name":"condition","restriction":""}],"args_string":"(callback, condition)","location":{"filename":"src/avram/callbacks.cr","line_number":19,"url":null},"def":{"name":"conditional_error_for_block_callbacks","args":[{"name":"callback","doc":null,"default_value":"","external_name":"callback","restriction":""},{"name":"condition","doc":null,"default_value":"","external_name":"condition","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    \n\\{%\n    \nraise <<-ERROR\n    You must pass a Symbol to `\n{{ condition.id }}\n` in \n{{ @type }}\n. The Symbol will reference a method you define.\n\n    Try this...\n\n      \n{{ callback.id }}\n(\n{{ condition.id }}\n: :check_condition?) do\n        # your callback block\n      end\n\n      def check_condition?\n        # return your bool value here\n      end\n    ERROR\n  %}\n  \n"}}],"types":[]},{"html_id":"avram/Avram/Connection","path":"Avram/Connection.html","kind":"class","full_name":"Avram::Connection","name":"Connection","abstract":false,"superclass":{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":"Handles the connection to the DB.","summary":"<p>Handles the connection to the DB.</p>","class_methods":[],"constructors":[{"id":"new(connection_string:String,database_class:Avram::Database.class)-class-method","html_id":"new(connection_string:String,database_class:Avram::Database.class)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"connection_string","doc":null,"default_value":"","external_name":"connection_string","restriction":"String"},{"name":"database_class","doc":null,"default_value":"","external_name":"database_class","restriction":"Avram::Database.class"}],"args_string":"(connection_string : String, database_class : <span class=\"t\">Avram</span><span class=\"t\">::</span><span class=\"t\">Database</span>.<span class=\"k\">class</span>)","args_html":"(connection_string : <a href=\"../String.html\">String</a>, database_class : <span class=\"t\">Avram</span><span class=\"t\">::</span><span class=\"t\">Database</span>.<span class=\"k\">class</span>)","location":{"filename":"src/avram/connection.cr","line_number":3,"url":null},"def":{"name":"new","args":[{"name":"connection_string","doc":null,"default_value":"","external_name":"connection_string","restriction":"String"},{"name":"database_class","doc":null,"default_value":"","external_name":"database_class","restriction":"Avram::Database.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(connection_string, database_class)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"open:DB::Database-instance-method","html_id":"open:DB::Database-instance-method","name":"open","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : DB::Database","args_html":" : DB::Database","location":{"filename":"src/avram/connection.cr","line_number":6,"url":null},"def":{"name":"open","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"DB::Database","visibility":"Public","body":"try_connection!"}},{"id":"try_connection!-instance-method","html_id":"try_connection!-instance-method","name":"try_connection!","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/connection.cr","line_number":10,"url":null},"def":{"name":"try_connection!","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"begin\n  DB.open(@connection_string)\nrescue DB::ConnectionRefused\n  raise(ConnectionError.new(connection_uri, database_class: @database_class))\nend"}}],"macros":[],"types":[]},{"html_id":"avram/Avram/ConnectionError","path":"Avram/ConnectionError.html","kind":"class","full_name":"Avram::ConnectionError","name":"ConnectionError","abstract":false,"superclass":{"html_id":"avram/Avram/AvramError","kind":"class","full_name":"Avram::AvramError","name":"AvramError"},"ancestors":[{"html_id":"avram/Avram/AvramError","kind":"class","full_name":"Avram::AvramError","name":"AvramError"},{"html_id":"avram/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[{"id":"DEFAULT_PG_PORT","name":"DEFAULT_PG_PORT","value":"5432","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(connection_details:URI,database_class:Avram::Database.class)-class-method","html_id":"new(connection_details:URI,database_class:Avram::Database.class)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"connection_details","doc":null,"default_value":"","external_name":"connection_details","restriction":"URI"},{"name":"database_class","doc":null,"default_value":"","external_name":"database_class","restriction":"Avram::Database.class"}],"args_string":"(connection_details : URI, database_class : <span class=\"t\">Avram</span><span class=\"t\">::</span><span class=\"t\">Database</span>.<span class=\"k\">class</span>)","args_html":"(connection_details : URI, database_class : <span class=\"t\">Avram</span><span class=\"t\">::</span><span class=\"t\">Database</span>.<span class=\"k\">class</span>)","location":{"filename":"src/avram/errors.cr","line_number":78,"url":null},"def":{"name":"new","args":[{"name":"connection_details","doc":null,"default_value":"","external_name":"connection_details","restriction":"URI"},{"name":"database_class","doc":null,"default_value":"","external_name":"database_class","restriction":"Avram::Database.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(connection_details, database_class)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[],"macros":[],"types":[]},{"html_id":"avram/Avram/Credentials","path":"Avram/Credentials.html","kind":"class","full_name":"Avram::Credentials","name":"Credentials","abstract":false,"superclass":{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(database:String,hostname:String?=nil,username:String?=nil,password:String?=nil,port:Int32?=nil,query:String?=nil)-class-method","html_id":"new(database:String,hostname:String?=nil,username:String?=nil,password:String?=nil,port:Int32?=nil,query:String?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"database","doc":null,"default_value":"","external_name":"database","restriction":"String"},{"name":"hostname","doc":null,"default_value":"nil","external_name":"hostname","restriction":"String | ::Nil"},{"name":"username","doc":null,"default_value":"nil","external_name":"username","restriction":"String | ::Nil"},{"name":"password","doc":null,"default_value":"nil","external_name":"password","restriction":"String | ::Nil"},{"name":"port","doc":null,"default_value":"nil","external_name":"port","restriction":"Int32 | ::Nil"},{"name":"query","doc":null,"default_value":"nil","external_name":"query","restriction":"String | ::Nil"}],"args_string":"(database : String, hostname : String? = <span class=\"n\">nil</span>, username : String? = <span class=\"n\">nil</span>, password : String? = <span class=\"n\">nil</span>, port : Int32? = <span class=\"n\">nil</span>, query : String? = <span class=\"n\">nil</span>)","args_html":"(database : <a href=\"../String.html\">String</a>, hostname : <a href=\"../String.html\">String</a>? = <span class=\"n\">nil</span>, username : <a href=\"../String.html\">String</a>? = <span class=\"n\">nil</span>, password : <a href=\"../String.html\">String</a>? = <span class=\"n\">nil</span>, port : <a href=\"../Int32.html\">Int32</a>? = <span class=\"n\">nil</span>, query : <a href=\"../String.html\">String</a>? = <span class=\"n\">nil</span>)","location":{"filename":"src/avram/credentials.cr","line_number":4,"url":null},"def":{"name":"new","args":[{"name":"database","doc":null,"default_value":"","external_name":"database","restriction":"String"},{"name":"hostname","doc":null,"default_value":"nil","external_name":"hostname","restriction":"String | ::Nil"},{"name":"username","doc":null,"default_value":"nil","external_name":"username","restriction":"String | ::Nil"},{"name":"password","doc":null,"default_value":"nil","external_name":"password","restriction":"String | ::Nil"},{"name":"port","doc":null,"default_value":"nil","external_name":"port","restriction":"Int32 | ::Nil"},{"name":"query","doc":null,"default_value":"nil","external_name":"query","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(database, hostname, username, password, port, query)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"parse(connection_url:String):Credentials-class-method","html_id":"parse(connection_url:String):Credentials-class-method","name":"parse","doc":"Parse a postgres connection string URL. This may come from an\nenvironment variable.\n\n```\nAvram::Credentials.parse(ENV[\"DB_URL\"])\n```","summary":"<p>Parse a postgres connection string URL.</p>","abstract":false,"args":[{"name":"connection_url","doc":null,"default_value":"","external_name":"connection_url","restriction":"String"}],"args_string":"(connection_url : String) : Credentials","args_html":"(connection_url : <a href=\"../String.html\">String</a>) : <a href=\"../Avram/Credentials.html\">Credentials</a>","location":{"filename":"src/avram/credentials.cr","line_number":39,"url":null},"def":{"name":"parse","args":[{"name":"connection_url","doc":null,"default_value":"","external_name":"connection_url","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Credentials","visibility":"Public","body":"uri = URI.parse(connection_url)\nnew(database: uri.path.to_s, hostname: uri.host, username: uri.user, password: uri.password, port: uri.port, query: uri.query)\n"}},{"id":"parse?(connection_url:String?):Credentials?-class-method","html_id":"parse?(connection_url:String?):Credentials?-class-method","name":"parse?","doc":"Parse a postgres connection string URL. This may come from an\nenvironment variable.\nReturns `nil` if no `connection_url` is provided.\n\n```\nAvram::Credentials.parse?(ENV[\"DB_URL\"]?)\n```","summary":"<p>Parse a postgres connection string URL.</p>","abstract":false,"args":[{"name":"connection_url","doc":null,"default_value":"","external_name":"connection_url","restriction":"String | ::Nil"}],"args_string":"(connection_url : String?) : Credentials?","args_html":"(connection_url : <a href=\"../String.html\">String</a>?) : <a href=\"../Avram/Credentials.html\">Credentials</a>?","location":{"filename":"src/avram/credentials.cr","line_number":28,"url":null},"def":{"name":"parse?","args":[{"name":"connection_url","doc":null,"default_value":"","external_name":"connection_url","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Credentials | ::Nil","visibility":"Public","body":"if connection_url.nil?\n  return nil\nend\nparse(connection_url.as(String))\n"}},{"id":"void:Credentials-class-method","html_id":"void:Credentials-class-method","name":"void","doc":"Used when you need to configure credentials,\nbut no database connection is made.","summary":"<p>Used when you need to configure credentials, but no database connection is made.</p>","abstract":false,"args":[],"args_string":" : Credentials","args_html":" : <a href=\"../Avram/Credentials.html\">Credentials</a>","location":{"filename":"src/avram/credentials.cr","line_number":17,"url":null},"def":{"name":"void","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Credentials","visibility":"Public","body":"new(database: \"unused\")"}}],"instance_methods":[{"id":"database:String-instance-method","html_id":"database:String-instance-method","name":"database","doc":"The name of the database you want to connect to","summary":"<p>The name of the database you want to connect to</p>","abstract":false,"args":[],"args_string":" : String","args_html":" : <a href=\"../String.html\">String</a>","location":{"filename":"src/avram/credentials.cr","line_number":52,"url":null},"def":{"name":"database","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@database = @database.strip\nif @database.starts_with?('/')\n  @database = @database[1..-1]\nend\nif @database.empty?\n  raise(InvalidDatabaseNameError.new(\"The database name specified was blank. Be sure to set a value.\"))\nend\n@database\n"}},{"id":"hostname:String?-instance-method","html_id":"hostname:String?-instance-method","name":"hostname","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","args_html":" : <a href=\"../String.html\">String</a>?","location":{"filename":"src/avram/credentials.cr","line_number":63,"url":null},"def":{"name":"hostname","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String | ::Nil","visibility":"Public","body":"@hostname.try(&.strip).presence"}},{"id":"password:String?-instance-method","html_id":"password:String?-instance-method","name":"password","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","args_html":" : <a href=\"../String.html\">String</a>?","location":{"filename":"src/avram/credentials.cr","line_number":71,"url":null},"def":{"name":"password","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String | ::Nil","visibility":"Public","body":"@password.try(&.strip).presence"}},{"id":"port:Int32?-instance-method","html_id":"port:Int32?-instance-method","name":"port","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32?","args_html":" : <a href=\"../Int32.html\">Int32</a>?","location":{"filename":"src/avram/credentials.cr","line_number":75,"url":null},"def":{"name":"port","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32 | ::Nil","visibility":"Public","body":"@port"}},{"id":"query:String?-instance-method","html_id":"query:String?-instance-method","name":"query","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","args_html":" : <a href=\"../String.html\">String</a>?","location":{"filename":"src/avram/credentials.cr","line_number":79,"url":null},"def":{"name":"query","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String | ::Nil","visibility":"Public","body":"@query.try(&.strip).presence"}},{"id":"url:String-instance-method","html_id":"url:String-instance-method","name":"url","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","args_html":" : <a href=\"../String.html\">String</a>","location":{"filename":"src/avram/credentials.cr","line_number":2,"url":null},"def":{"name":"url","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@url"}},{"id":"url_without_query_params:String-instance-method","html_id":"url_without_query_params:String-instance-method","name":"url_without_query_params","doc":"Returns the postgres connection string without\nany query params.","summary":"<p>Returns the postgres connection string without any query params.</p>","abstract":false,"args":[],"args_string":" : String","args_html":" : <a href=\"../String.html\">String</a>","location":{"filename":"src/avram/credentials.cr","line_number":85,"url":null},"def":{"name":"url_without_query_params","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"url.sub(\"?#{@query}\", \"\")"}},{"id":"username:String?-instance-method","html_id":"username:String?-instance-method","name":"username","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","args_html":" : <a href=\"../String.html\">String</a>?","location":{"filename":"src/avram/credentials.cr","line_number":67,"url":null},"def":{"name":"username","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String | ::Nil","visibility":"Public","body":"@username.try(&.strip).presence"}}],"macros":[],"types":[]},{"html_id":"avram/Avram/Criteria","path":"Avram/Criteria.html","kind":"class","full_name":"Avram::Criteria(T, V)","name":"Criteria","abstract":false,"superclass":{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"avram/Bool/Lucky/Criteria","kind":"class","full_name":"Bool::Lucky::Criteria(T, V)","name":"Criteria"},{"html_id":"avram/Float64/Lucky/Criteria","kind":"class","full_name":"Float64::Lucky::Criteria(T, V)","name":"Criteria"},{"html_id":"avram/Int16/Lucky/Criteria","kind":"class","full_name":"Int16::Lucky::Criteria(T, V)","name":"Criteria"},{"html_id":"avram/Int32/Lucky/Criteria","kind":"class","full_name":"Int32::Lucky::Criteria(T, V)","name":"Criteria"},{"html_id":"avram/Int64/Lucky/Criteria","kind":"class","full_name":"Int64::Lucky::Criteria(T, V)","name":"Criteria"},{"html_id":"avram/JSON/Any/Lucky/Criteria","kind":"class","full_name":"JSON::Any::Lucky::Criteria(T, V)","name":"Criteria"},{"html_id":"avram/String/Lucky/Criteria","kind":"class","full_name":"String::Lucky::Criteria(T, V)","name":"Criteria"},{"html_id":"avram/Time/Lucky/Criteria","kind":"class","full_name":"Time::Lucky::Criteria(T, V)","name":"Criteria"},{"html_id":"avram/UUID/Lucky/Criteria","kind":"class","full_name":"UUID::Lucky::Criteria(T, V)","name":"Criteria"}],"including_types":[],"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(rows:T,column:Symbol|String)-class-method","html_id":"new(rows:T,column:Symbol|String)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"rows","doc":null,"default_value":"","external_name":"rows","restriction":"T"},{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":"Symbol | String"}],"args_string":"(rows : T, column : Symbol | String)","args_html":"(rows : T, column : Symbol | <a href=\"../String.html\">String</a>)","location":{"filename":"src/avram/criteria.cr","line_number":5,"url":null},"def":{"name":"new","args":[{"name":"rows","doc":null,"default_value":"","external_name":"rows","restriction":"T"},{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":"Symbol | String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = Criteria(T, V).allocate\n_.initialize(rows, column)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"asc_order(null_sorting:Avram::OrderBy::NullSorting=:default):T-instance-method","html_id":"asc_order(null_sorting:Avram::OrderBy::NullSorting=:default):T-instance-method","name":"asc_order","doc":null,"summary":null,"abstract":false,"args":[{"name":"null_sorting","doc":null,"default_value":":default","external_name":"null_sorting","restriction":"Avram::OrderBy::NullSorting"}],"args_string":"(null_sorting : Avram::OrderBy::NullSorting = <span class=\"n\">:default</span>) : T","args_html":"(null_sorting : <a href=\"../Avram/OrderBy/NullSorting.html\">Avram::OrderBy::NullSorting</a> = <span class=\"n\">:default</span>) : T","location":{"filename":"src/avram/criteria.cr","line_number":13,"url":null},"def":{"name":"asc_order","args":[{"name":"null_sorting","doc":null,"default_value":":default","external_name":"null_sorting","restriction":"Avram::OrderBy::NullSorting"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"T","visibility":"Public","body":"rows.order_by(Avram::OrderBy.new(column, :asc, null_sorting))"}},{"id":"column-instance-method","html_id":"column-instance-method","name":"column","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/criteria.cr","line_number":2,"url":null},"def":{"name":"column","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@column"}},{"id":"column=(column)-instance-method","html_id":"column=(column)-instance-method","name":"column=","doc":null,"summary":null,"abstract":false,"args":[{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":""}],"args_string":"(column)","args_html":"(column)","location":{"filename":"src/avram/criteria.cr","line_number":2,"url":null},"def":{"name":"column=","args":[{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@column = column"}},{"id":"desc_order(null_sorting:Avram::OrderBy::NullSorting=:default):T-instance-method","html_id":"desc_order(null_sorting:Avram::OrderBy::NullSorting=:default):T-instance-method","name":"desc_order","doc":null,"summary":null,"abstract":false,"args":[{"name":"null_sorting","doc":null,"default_value":":default","external_name":"null_sorting","restriction":"Avram::OrderBy::NullSorting"}],"args_string":"(null_sorting : Avram::OrderBy::NullSorting = <span class=\"n\">:default</span>) : T","args_html":"(null_sorting : <a href=\"../Avram/OrderBy/NullSorting.html\">Avram::OrderBy::NullSorting</a> = <span class=\"n\">:default</span>) : T","location":{"filename":"src/avram/criteria.cr","line_number":9,"url":null},"def":{"name":"desc_order","args":[{"name":"null_sorting","doc":null,"default_value":":default","external_name":"null_sorting","restriction":"Avram::OrderBy::NullSorting"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"T","visibility":"Public","body":"rows.order_by(Avram::OrderBy.new(column, :desc, null_sorting))"}},{"id":"eq(value):T-instance-method","html_id":"eq(value):T-instance-method","name":"eq","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(value) : T","args_html":"(value) : T","location":{"filename":"src/avram/criteria.cr","line_number":17,"url":null},"def":{"name":"eq","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"T","visibility":"Public","body":"check_just_nil!(typeof(value))\ncheck_nilable!(value)\nperform_eq(value)\n"}},{"id":"gt(value):T-instance-method","html_id":"gt(value):T-instance-method","name":"gt","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(value) : T","args_html":"(value) : T","location":{"filename":"src/avram/criteria.cr","line_number":111,"url":null},"def":{"name":"gt","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"T","visibility":"Public","body":"add_clause(Avram::Where::GreaterThan.new(column, V.adapter.to_db!(value)))"}},{"id":"gte(value):T-instance-method","html_id":"gte(value):T-instance-method","name":"gte","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(value) : T","args_html":"(value) : T","location":{"filename":"src/avram/criteria.cr","line_number":115,"url":null},"def":{"name":"gte","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"T","visibility":"Public","body":"add_clause(Avram::Where::GreaterThanOrEqualTo.new(column, V.adapter.to_db!(value)))"}},{"id":"in(values):T-instance-method","html_id":"in(values):T-instance-method","name":"in","doc":null,"summary":null,"abstract":false,"args":[{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":""}],"args_string":"(values) : T","args_html":"(values) : T","location":{"filename":"src/avram/criteria.cr","line_number":147,"url":null},"def":{"name":"in","args":[{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"T","visibility":"Public","body":"values = values.map do |value|\n  V.adapter.to_db!(value)\nend\nadd_clause(Avram::Where::In.new(column, values))\n"}},{"id":"is_nil:T-instance-method","html_id":"is_nil:T-instance-method","name":"is_nil","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : T","args_html":" : T","location":{"filename":"src/avram/criteria.cr","line_number":97,"url":null},"def":{"name":"is_nil","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"T","visibility":"Public","body":"add_clause(Avram::Where::Null.new(column))"}},{"id":"is_not_nil:T-instance-method","html_id":"is_not_nil:T-instance-method","name":"is_not_nil","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : T","args_html":" : T","location":{"filename":"src/avram/criteria.cr","line_number":101,"url":null},"def":{"name":"is_not_nil","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"T","visibility":"Public","body":"not()\nis_nil\n"}},{"id":"lt(value):T-instance-method","html_id":"lt(value):T-instance-method","name":"lt","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(value) : T","args_html":"(value) : T","location":{"filename":"src/avram/criteria.cr","line_number":119,"url":null},"def":{"name":"lt","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"T","visibility":"Public","body":"add_clause(Avram::Where::LessThan.new(column, V.adapter.to_db!(value)))"}},{"id":"lte(value):T-instance-method","html_id":"lte(value):T-instance-method","name":"lte","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(value) : T","args_html":"(value) : T","location":{"filename":"src/avram/criteria.cr","line_number":123,"url":null},"def":{"name":"lte","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"T","visibility":"Public","body":"add_clause(Avram::Where::LessThanOrEqualTo.new(column, V.adapter.to_db!(value)))"}},{"id":"nilable_eq(value):T-instance-method","html_id":"nilable_eq(value):T-instance-method","name":"nilable_eq","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(value) : T","args_html":"(value) : T","location":{"filename":"src/avram/criteria.cr","line_number":87,"url":null},"def":{"name":"nilable_eq","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"T","visibility":"Public","body":"check_just_nil!(typeof(value))\nif value.nil?\n  is_nil\nelse\n  perform_eq(value)\nend\n"}},{"id":"not:Avram::Criteria-instance-method","html_id":"not:Avram::Criteria-instance-method","name":"not","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Avram::Criteria","args_html":" : <a href=\"../Avram/Criteria.html\">Avram::Criteria</a>","location":{"filename":"src/avram/criteria.cr","line_number":106,"url":null},"def":{"name":"not","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Avram::Criteria","visibility":"Public","body":"@negate_next_criteria = true\nself\n"}},{"id":"rows-instance-method","html_id":"rows-instance-method","name":"rows","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/criteria.cr","line_number":2,"url":null},"def":{"name":"rows","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@rows"}},{"id":"rows=(rows)-instance-method","html_id":"rows=(rows)-instance-method","name":"rows=","doc":null,"summary":null,"abstract":false,"args":[{"name":"rows","doc":null,"default_value":"","external_name":"rows","restriction":""}],"args_string":"(rows)","args_html":"(rows)","location":{"filename":"src/avram/criteria.cr","line_number":2,"url":null},"def":{"name":"rows=","args":[{"name":"rows","doc":null,"default_value":"","external_name":"rows","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@rows = rows"}},{"id":"select_average:Float64?-instance-method","html_id":"select_average:Float64?-instance-method","name":"select_average","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Float64?","args_html":" : <a href=\"../Float64.html\">Float64</a>?","location":{"filename":"src/avram/criteria.cr","line_number":135,"url":null},"def":{"name":"select_average","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Float64 | ::Nil","visibility":"Public","body":"(rows.exec_scalar(&.select_average(column)).as(PG::Numeric | Nil)).try(&.to_f64)"}},{"id":"select_average!:Float64-instance-method","html_id":"select_average!:Float64-instance-method","name":"select_average!","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Float64","args_html":" : <a href=\"../Float64.html\">Float64</a>","location":{"filename":"src/avram/criteria.cr","line_number":139,"url":null},"def":{"name":"select_average!","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Float64","visibility":"Public","body":"select_average || 0_f64"}},{"id":"select_max:V?-instance-method","html_id":"select_max:V?-instance-method","name":"select_max","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : V?","args_html":" : V?","location":{"filename":"src/avram/criteria.cr","line_number":131,"url":null},"def":{"name":"select_max","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"V | Nil","visibility":"Public","body":"rows.exec_scalar(&.select_max(column)).as(V | Nil)"}},{"id":"select_min:V?-instance-method","html_id":"select_min:V?-instance-method","name":"select_min","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : V?","args_html":" : V?","location":{"filename":"src/avram/criteria.cr","line_number":127,"url":null},"def":{"name":"select_min","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"V | Nil","visibility":"Public","body":"rows.exec_scalar(&.select_min(column)).as(V | Nil)"}},{"id":"select_sum-instance-method","html_id":"select_sum-instance-method","name":"select_sum","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/criteria.cr","line_number":143,"url":null},"def":{"name":"select_sum","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"rows.exec_scalar(&.select_sum(column))"}}],"macros":[],"types":[]},{"html_id":"avram/Avram/Database","path":"Avram/Database.html","kind":"class","full_name":"Avram::Database","name":"Database","abstract":true,"superclass":{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":null,"summary":null,"class_methods":[{"id":"credentials-class-method","html_id":"credentials-class-method","name":"credentials","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/database.cr","line_number":115,"url":null},"def":{"name":"credentials","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"settings.credentials"}},{"id":"database_info:DatabaseInfo-class-method","html_id":"database_info:DatabaseInfo-class-method","name":"database_info","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : DatabaseInfo","args_html":" : <a href=\"../Avram/Database/DatabaseInfo.html\">DatabaseInfo</a>","location":{"filename":"src/avram/database.cr","line_number":44,"url":null},"def":{"name":"database_info","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"DatabaseInfo","visibility":"Public","body":"@@database_info || (@@database_info = DatabaseInfo.load(self))"}},{"id":"delete-class-method","html_id":"delete-class-method","name":"delete","doc":"Run a SQL `DELETE` on all tables in the database","summary":"<p>Run a SQL <code>DELETE</code> on all tables in the database</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/database.cr","line_number":38,"url":null},"def":{"name":"delete","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"new.delete"}},{"id":"exec(query,*args_,args:Array?=nil,queryable:String?=nil,**named_args)-class-method","html_id":"exec(query,*args_,args:Array?=nil,queryable:String?=nil,**named_args)-class-method","name":"exec","doc":"Same as crystal-db's `DB::QueryMethods#exec` but with instrumentation","summary":"<p>Same as crystal-db's <code>DB::QueryMethods#exec</code> but with instrumentation</p>","abstract":false,"args":[{"name":"query","doc":null,"default_value":"","external_name":"query","restriction":""},{"name":"args_","doc":null,"default_value":"","external_name":"args_","restriction":""},{"name":"args","doc":null,"default_value":"nil","external_name":"args","restriction":"Array | ::Nil"},{"name":"queryable","doc":null,"default_value":"nil","external_name":"queryable","restriction":"String | ::Nil"}],"args_string":"(query, *args_, args : Array? = <span class=\"n\">nil</span>, queryable : String? = <span class=\"n\">nil</span>, **named_args)","args_html":"(query, *args_, args : <a href=\"../Array.html\">Array</a>? = <span class=\"n\">nil</span>, queryable : <a href=\"../String.html\">String</a>? = <span class=\"n\">nil</span>, **named_args)","location":{"filename":"src/avram/database.cr","line_number":63,"url":null},"def":{"name":"exec","args":[{"name":"query","doc":null,"default_value":"","external_name":"query","restriction":""},{"name":"args_","doc":null,"default_value":"","external_name":"args_","restriction":""},{"name":"args","doc":null,"default_value":"nil","external_name":"args","restriction":"Array | ::Nil"},{"name":"queryable","doc":null,"default_value":"nil","external_name":"queryable","restriction":"String | ::Nil"}],"double_splat":{"name":"named_args","doc":null,"default_value":"","external_name":"named_args","restriction":""},"splat_index":1,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"new.exec(query, *args_, args: args, queryable: queryable)"}},{"id":"query(query,*args_,args:Array?=nil,queryable:String?=nil,**named_args,&)-class-method","html_id":"query(query,*args_,args:Array?=nil,queryable:String?=nil,**named_args,&)-class-method","name":"query","doc":"Same as crystal-db's `DB::QueryMethods#:query` but with instrumentation","summary":"<p>Same as crystal-db's <code>DB::QueryMethods#:query</code> but with instrumentation</p>","abstract":false,"args":[{"name":"query","doc":null,"default_value":"","external_name":"query","restriction":""},{"name":"args_","doc":null,"default_value":"","external_name":"args_","restriction":""},{"name":"args","doc":null,"default_value":"nil","external_name":"args","restriction":"Array | ::Nil"},{"name":"queryable","doc":null,"default_value":"nil","external_name":"queryable","restriction":"String | ::Nil"}],"args_string":"(query, *args_, args : Array? = <span class=\"n\">nil</span>, queryable : String? = <span class=\"n\">nil</span>, **named_args, &)","args_html":"(query, *args_, args : <a href=\"../Array.html\">Array</a>? = <span class=\"n\">nil</span>, queryable : <a href=\"../String.html\">String</a>? = <span class=\"n\">nil</span>, **named_args, &)","location":{"filename":"src/avram/database.cr","line_number":80,"url":null},"def":{"name":"query","args":[{"name":"query","doc":null,"default_value":"","external_name":"query","restriction":""},{"name":"args_","doc":null,"default_value":"","external_name":"args_","restriction":""},{"name":"args","doc":null,"default_value":"nil","external_name":"args","restriction":"Array | ::Nil"},{"name":"queryable","doc":null,"default_value":"nil","external_name":"queryable","restriction":"String | ::Nil"}],"double_splat":{"name":"named_args","doc":null,"default_value":"","external_name":"named_args","restriction":""},"splat_index":1,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"new.query(query, *args_, args: args, queryable: queryable) do |*yield_args|\n  yield *yield_args\nend"}},{"id":"query(query,*args_,args:Array?=nil,queryable:String?=nil,**named_args)-class-method","html_id":"query(query,*args_,args:Array?=nil,queryable:String?=nil,**named_args)-class-method","name":"query","doc":"Same as crystal-db's `DB::QueryMethods#query` but with instrumentation","summary":"<p>Same as crystal-db's <code>DB::QueryMethods#query</code> but with instrumentation</p>","abstract":false,"args":[{"name":"query","doc":null,"default_value":"","external_name":"query","restriction":""},{"name":"args_","doc":null,"default_value":"","external_name":"args_","restriction":""},{"name":"args","doc":null,"default_value":"nil","external_name":"args","restriction":"Array | ::Nil"},{"name":"queryable","doc":null,"default_value":"nil","external_name":"queryable","restriction":"String | ::Nil"}],"args_string":"(query, *args_, args : Array? = <span class=\"n\">nil</span>, queryable : String? = <span class=\"n\">nil</span>, **named_args)","args_html":"(query, *args_, args : <a href=\"../Array.html\">Array</a>? = <span class=\"n\">nil</span>, queryable : <a href=\"../String.html\">String</a>? = <span class=\"n\">nil</span>, **named_args)","location":{"filename":"src/avram/database.cr","line_number":63,"url":null},"def":{"name":"query","args":[{"name":"query","doc":null,"default_value":"","external_name":"query","restriction":""},{"name":"args_","doc":null,"default_value":"","external_name":"args_","restriction":""},{"name":"args","doc":null,"default_value":"nil","external_name":"args","restriction":"Array | ::Nil"},{"name":"queryable","doc":null,"default_value":"nil","external_name":"queryable","restriction":"String | ::Nil"}],"double_splat":{"name":"named_args","doc":null,"default_value":"","external_name":"named_args","restriction":""},"splat_index":1,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"new.query(query, *args_, args: args, queryable: queryable)"}},{"id":"query_all(query,*args_,args:Array?=nil,queryable:String?=nil,**named_args)-class-method","html_id":"query_all(query,*args_,args:Array?=nil,queryable:String?=nil,**named_args)-class-method","name":"query_all","doc":"Same as crystal-db's `DB::QueryMethods#query_all` but with instrumentation","summary":"<p>Same as crystal-db's <code>DB::QueryMethods#query_all</code> but with instrumentation</p>","abstract":false,"args":[{"name":"query","doc":null,"default_value":"","external_name":"query","restriction":""},{"name":"args_","doc":null,"default_value":"","external_name":"args_","restriction":""},{"name":"args","doc":null,"default_value":"nil","external_name":"args","restriction":"Array | ::Nil"},{"name":"queryable","doc":null,"default_value":"nil","external_name":"queryable","restriction":"String | ::Nil"}],"args_string":"(query, *args_, args : Array? = <span class=\"n\">nil</span>, queryable : String? = <span class=\"n\">nil</span>, **named_args)","args_html":"(query, *args_, args : <a href=\"../Array.html\">Array</a>? = <span class=\"n\">nil</span>, queryable : <a href=\"../String.html\">String</a>? = <span class=\"n\">nil</span>, **named_args)","location":{"filename":"src/avram/database.cr","line_number":63,"url":null},"def":{"name":"query_all","args":[{"name":"query","doc":null,"default_value":"","external_name":"query","restriction":""},{"name":"args_","doc":null,"default_value":"","external_name":"args_","restriction":""},{"name":"args","doc":null,"default_value":"nil","external_name":"args","restriction":"Array | ::Nil"},{"name":"queryable","doc":null,"default_value":"nil","external_name":"queryable","restriction":"String | ::Nil"}],"double_splat":{"name":"named_args","doc":null,"default_value":"","external_name":"named_args","restriction":""},"splat_index":1,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"new.query_all(query, *args_, args: args, queryable: queryable)"}},{"id":"query_all(query,*args_,args:Array?=nil,queryable:String?=nil,**named_args,&)-class-method","html_id":"query_all(query,*args_,args:Array?=nil,queryable:String?=nil,**named_args,&)-class-method","name":"query_all","doc":"Same as crystal-db's `DB::QueryMethods#:query_all` but with instrumentation","summary":"<p>Same as crystal-db's <code>DB::QueryMethods#:query_all</code> but with instrumentation</p>","abstract":false,"args":[{"name":"query","doc":null,"default_value":"","external_name":"query","restriction":""},{"name":"args_","doc":null,"default_value":"","external_name":"args_","restriction":""},{"name":"args","doc":null,"default_value":"nil","external_name":"args","restriction":"Array | ::Nil"},{"name":"queryable","doc":null,"default_value":"nil","external_name":"queryable","restriction":"String | ::Nil"}],"args_string":"(query, *args_, args : Array? = <span class=\"n\">nil</span>, queryable : String? = <span class=\"n\">nil</span>, **named_args, &)","args_html":"(query, *args_, args : <a href=\"../Array.html\">Array</a>? = <span class=\"n\">nil</span>, queryable : <a href=\"../String.html\">String</a>? = <span class=\"n\">nil</span>, **named_args, &)","location":{"filename":"src/avram/database.cr","line_number":80,"url":null},"def":{"name":"query_all","args":[{"name":"query","doc":null,"default_value":"","external_name":"query","restriction":""},{"name":"args_","doc":null,"default_value":"","external_name":"args_","restriction":""},{"name":"args","doc":null,"default_value":"nil","external_name":"args","restriction":"Array | ::Nil"},{"name":"queryable","doc":null,"default_value":"nil","external_name":"queryable","restriction":"String | ::Nil"}],"double_splat":{"name":"named_args","doc":null,"default_value":"","external_name":"named_args","restriction":""},"splat_index":1,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"new.query_all(query, *args_, args: args, queryable: queryable) do |*yield_args|\n  yield *yield_args\nend"}},{"id":"query_each(query,*args_,args:Array?=nil,queryable:String?=nil,**named_args,&)-class-method","html_id":"query_each(query,*args_,args:Array?=nil,queryable:String?=nil,**named_args,&)-class-method","name":"query_each","doc":"Same as crystal-db's `DB::QueryMethods#:query_each` but with instrumentation","summary":"<p>Same as crystal-db's <code>DB::QueryMethods#:query_each</code> but with instrumentation</p>","abstract":false,"args":[{"name":"query","doc":null,"default_value":"","external_name":"query","restriction":""},{"name":"args_","doc":null,"default_value":"","external_name":"args_","restriction":""},{"name":"args","doc":null,"default_value":"nil","external_name":"args","restriction":"Array | ::Nil"},{"name":"queryable","doc":null,"default_value":"nil","external_name":"queryable","restriction":"String | ::Nil"}],"args_string":"(query, *args_, args : Array? = <span class=\"n\">nil</span>, queryable : String? = <span class=\"n\">nil</span>, **named_args, &)","args_html":"(query, *args_, args : <a href=\"../Array.html\">Array</a>? = <span class=\"n\">nil</span>, queryable : <a href=\"../String.html\">String</a>? = <span class=\"n\">nil</span>, **named_args, &)","location":{"filename":"src/avram/database.cr","line_number":80,"url":null},"def":{"name":"query_each","args":[{"name":"query","doc":null,"default_value":"","external_name":"query","restriction":""},{"name":"args_","doc":null,"default_value":"","external_name":"args_","restriction":""},{"name":"args","doc":null,"default_value":"nil","external_name":"args","restriction":"Array | ::Nil"},{"name":"queryable","doc":null,"default_value":"nil","external_name":"queryable","restriction":"String | ::Nil"}],"double_splat":{"name":"named_args","doc":null,"default_value":"","external_name":"named_args","restriction":""},"splat_index":1,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"new.query_each(query, *args_, args: args, queryable: queryable) do |*yield_args|\n  yield *yield_args\nend"}},{"id":"query_each(query,*args_,args:Array?=nil,queryable:String?=nil,**named_args)-class-method","html_id":"query_each(query,*args_,args:Array?=nil,queryable:String?=nil,**named_args)-class-method","name":"query_each","doc":"Same as crystal-db's `DB::QueryMethods#query_each` but with instrumentation","summary":"<p>Same as crystal-db's <code>DB::QueryMethods#query_each</code> but with instrumentation</p>","abstract":false,"args":[{"name":"query","doc":null,"default_value":"","external_name":"query","restriction":""},{"name":"args_","doc":null,"default_value":"","external_name":"args_","restriction":""},{"name":"args","doc":null,"default_value":"nil","external_name":"args","restriction":"Array | ::Nil"},{"name":"queryable","doc":null,"default_value":"nil","external_name":"queryable","restriction":"String | ::Nil"}],"args_string":"(query, *args_, args : Array? = <span class=\"n\">nil</span>, queryable : String? = <span class=\"n\">nil</span>, **named_args)","args_html":"(query, *args_, args : <a href=\"../Array.html\">Array</a>? = <span class=\"n\">nil</span>, queryable : <a href=\"../String.html\">String</a>? = <span class=\"n\">nil</span>, **named_args)","location":{"filename":"src/avram/database.cr","line_number":63,"url":null},"def":{"name":"query_each","args":[{"name":"query","doc":null,"default_value":"","external_name":"query","restriction":""},{"name":"args_","doc":null,"default_value":"","external_name":"args_","restriction":""},{"name":"args","doc":null,"default_value":"nil","external_name":"args","restriction":"Array | ::Nil"},{"name":"queryable","doc":null,"default_value":"nil","external_name":"queryable","restriction":"String | ::Nil"}],"double_splat":{"name":"named_args","doc":null,"default_value":"","external_name":"named_args","restriction":""},"splat_index":1,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"new.query_each(query, *args_, args: args, queryable: queryable)"}},{"id":"query_one(query,*args_,args:Array?=nil,queryable:String?=nil,**named_args,&)-class-method","html_id":"query_one(query,*args_,args:Array?=nil,queryable:String?=nil,**named_args,&)-class-method","name":"query_one","doc":"Same as crystal-db's `DB::QueryMethods#:query_one` but with instrumentation","summary":"<p>Same as crystal-db's <code>DB::QueryMethods#:query_one</code> but with instrumentation</p>","abstract":false,"args":[{"name":"query","doc":null,"default_value":"","external_name":"query","restriction":""},{"name":"args_","doc":null,"default_value":"","external_name":"args_","restriction":""},{"name":"args","doc":null,"default_value":"nil","external_name":"args","restriction":"Array | ::Nil"},{"name":"queryable","doc":null,"default_value":"nil","external_name":"queryable","restriction":"String | ::Nil"}],"args_string":"(query, *args_, args : Array? = <span class=\"n\">nil</span>, queryable : String? = <span class=\"n\">nil</span>, **named_args, &)","args_html":"(query, *args_, args : <a href=\"../Array.html\">Array</a>? = <span class=\"n\">nil</span>, queryable : <a href=\"../String.html\">String</a>? = <span class=\"n\">nil</span>, **named_args, &)","location":{"filename":"src/avram/database.cr","line_number":80,"url":null},"def":{"name":"query_one","args":[{"name":"query","doc":null,"default_value":"","external_name":"query","restriction":""},{"name":"args_","doc":null,"default_value":"","external_name":"args_","restriction":""},{"name":"args","doc":null,"default_value":"nil","external_name":"args","restriction":"Array | ::Nil"},{"name":"queryable","doc":null,"default_value":"nil","external_name":"queryable","restriction":"String | ::Nil"}],"double_splat":{"name":"named_args","doc":null,"default_value":"","external_name":"named_args","restriction":""},"splat_index":1,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"new.query_one(query, *args_, args: args, queryable: queryable) do |*yield_args|\n  yield *yield_args\nend"}},{"id":"query_one(query,*args_,args:Array?=nil,queryable:String?=nil,**named_args)-class-method","html_id":"query_one(query,*args_,args:Array?=nil,queryable:String?=nil,**named_args)-class-method","name":"query_one","doc":"Same as crystal-db's `DB::QueryMethods#query_one` but with instrumentation","summary":"<p>Same as crystal-db's <code>DB::QueryMethods#query_one</code> but with instrumentation</p>","abstract":false,"args":[{"name":"query","doc":null,"default_value":"","external_name":"query","restriction":""},{"name":"args_","doc":null,"default_value":"","external_name":"args_","restriction":""},{"name":"args","doc":null,"default_value":"nil","external_name":"args","restriction":"Array | ::Nil"},{"name":"queryable","doc":null,"default_value":"nil","external_name":"queryable","restriction":"String | ::Nil"}],"args_string":"(query, *args_, args : Array? = <span class=\"n\">nil</span>, queryable : String? = <span class=\"n\">nil</span>, **named_args)","args_html":"(query, *args_, args : <a href=\"../Array.html\">Array</a>? = <span class=\"n\">nil</span>, queryable : <a href=\"../String.html\">String</a>? = <span class=\"n\">nil</span>, **named_args)","location":{"filename":"src/avram/database.cr","line_number":63,"url":null},"def":{"name":"query_one","args":[{"name":"query","doc":null,"default_value":"","external_name":"query","restriction":""},{"name":"args_","doc":null,"default_value":"","external_name":"args_","restriction":""},{"name":"args","doc":null,"default_value":"nil","external_name":"args","restriction":"Array | ::Nil"},{"name":"queryable","doc":null,"default_value":"nil","external_name":"queryable","restriction":"String | ::Nil"}],"double_splat":{"name":"named_args","doc":null,"default_value":"","external_name":"named_args","restriction":""},"splat_index":1,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"new.query_one(query, *args_, args: args, queryable: queryable)"}},{"id":"rollback-class-method","html_id":"rollback-class-method","name":"rollback","doc":"Rollback the current transaction","summary":"<p>Rollback the current transaction</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/database.cr","line_number":28,"url":null},"def":{"name":"rollback","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"new.rollback"}},{"id":"run(&)-class-method","html_id":"run(&)-class-method","name":"run","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"(&)","args_html":"(&)","location":{"filename":"src/avram/database.cr","line_number":123,"url":null},"def":{"name":"run","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"new.run do |*yield_args|\n  yield *yield_args\nend"}},{"id":"scalar(query,*args_,args:Array?=nil,queryable:String?=nil,**named_args)-class-method","html_id":"scalar(query,*args_,args:Array?=nil,queryable:String?=nil,**named_args)-class-method","name":"scalar","doc":"Same as crystal-db's `DB::QueryMethods#scalar` but with instrumentation","summary":"<p>Same as crystal-db's <code>DB::QueryMethods#scalar</code> but with instrumentation</p>","abstract":false,"args":[{"name":"query","doc":null,"default_value":"","external_name":"query","restriction":""},{"name":"args_","doc":null,"default_value":"","external_name":"args_","restriction":""},{"name":"args","doc":null,"default_value":"nil","external_name":"args","restriction":"Array | ::Nil"},{"name":"queryable","doc":null,"default_value":"nil","external_name":"queryable","restriction":"String | ::Nil"}],"args_string":"(query, *args_, args : Array? = <span class=\"n\">nil</span>, queryable : String? = <span class=\"n\">nil</span>, **named_args)","args_html":"(query, *args_, args : <a href=\"../Array.html\">Array</a>? = <span class=\"n\">nil</span>, queryable : <a href=\"../String.html\">String</a>? = <span class=\"n\">nil</span>, **named_args)","location":{"filename":"src/avram/database.cr","line_number":63,"url":null},"def":{"name":"scalar","args":[{"name":"query","doc":null,"default_value":"","external_name":"query","restriction":""},{"name":"args_","doc":null,"default_value":"","external_name":"args_","restriction":""},{"name":"args","doc":null,"default_value":"nil","external_name":"args","restriction":"Array | ::Nil"},{"name":"queryable","doc":null,"default_value":"nil","external_name":"queryable","restriction":"String | ::Nil"}],"double_splat":{"name":"named_args","doc":null,"default_value":"","external_name":"named_args","restriction":""},"splat_index":1,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"new.scalar(query, *args_, args: args, queryable: queryable)"}},{"id":"transaction(&)-class-method","html_id":"transaction(&)-class-method","name":"transaction","doc":"Wrap the block in a database transaction\n\n```\nAppDatabase.transaction do\n  # Create, read, update\n  # Force a rollback with AppDatabase.rollback\nend\n```","summary":"<p>Wrap the block in a database transaction</p>","abstract":false,"args":[],"args_string":"(&)","args_html":"(&)","location":{"filename":"src/avram/database.cr","line_number":56,"url":null},"def":{"name":"transaction","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"new.transaction do |*yield_args|\n  yield *yield_args\nend"}},{"id":"transactions-class-method","html_id":"transactions-class-method","name":"transactions","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/database.cr","line_number":6,"url":null},"def":{"name":"transactions","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@transactions"}},{"id":"truncate-class-method","html_id":"truncate-class-method","name":"truncate","doc":"Run a SQL `TRUNCATE` on all tables in the database","summary":"<p>Run a SQL <code>TRUNCATE</code> on all tables in the database</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/database.cr","line_number":33,"url":null},"def":{"name":"truncate","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"new.truncate"}}],"constructors":[],"instance_methods":[{"id":"exec(query,*args_,args:Array?=nil,queryable:String?=nil,**named_args)-instance-method","html_id":"exec(query,*args_,args:Array?=nil,queryable:String?=nil,**named_args)-instance-method","name":"exec","doc":"Same as crystal-db's `DB::QueryMethods#exec` but with instrumentation","summary":"<p>Same as crystal-db's <code>DB::QueryMethods#exec</code> but with instrumentation</p>","abstract":false,"args":[{"name":"query","doc":null,"default_value":"","external_name":"query","restriction":""},{"name":"args_","doc":null,"default_value":"","external_name":"args_","restriction":""},{"name":"args","doc":null,"default_value":"nil","external_name":"args","restriction":"Array | ::Nil"},{"name":"queryable","doc":null,"default_value":"nil","external_name":"queryable","restriction":"String | ::Nil"}],"args_string":"(query, *args_, args : Array? = <span class=\"n\">nil</span>, queryable : String? = <span class=\"n\">nil</span>, **named_args)","args_html":"(query, *args_, args : <a href=\"../Array.html\">Array</a>? = <span class=\"n\">nil</span>, queryable : <a href=\"../String.html\">String</a>? = <span class=\"n\">nil</span>, **named_args)","location":{"filename":"src/avram/database.cr","line_number":63,"url":null},"def":{"name":"exec","args":[{"name":"query","doc":null,"default_value":"","external_name":"query","restriction":""},{"name":"args_","doc":null,"default_value":"","external_name":"args_","restriction":""},{"name":"args","doc":null,"default_value":"nil","external_name":"args","restriction":"Array | ::Nil"},{"name":"queryable","doc":null,"default_value":"nil","external_name":"queryable","restriction":"String | ::Nil"}],"double_splat":{"name":"named_args","doc":null,"default_value":"","external_name":"named_args","restriction":""},"splat_index":1,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"publish_query_event(query, args_, args, queryable) do\n  run do |db|\n    db.exec(query, *args_, args: args)\n  end\nend"}},{"id":"publish_query_event(query,args_,args,queryable,&)-instance-method","html_id":"publish_query_event(query,args_,args,queryable,&)-instance-method","name":"publish_query_event","doc":null,"summary":null,"abstract":false,"args":[{"name":"query","doc":null,"default_value":"","external_name":"query","restriction":""},{"name":"args_","doc":null,"default_value":"","external_name":"args_","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""},{"name":"queryable","doc":null,"default_value":"","external_name":"queryable","restriction":""}],"args_string":"(query, args_, args, queryable, &)","args_html":"(query, args_, args, queryable, &)","location":{"filename":"src/avram/database.cr","line_number":100,"url":null},"def":{"name":"publish_query_event","args":[{"name":"query","doc":null,"default_value":"","external_name":"query","restriction":""},{"name":"args_","doc":null,"default_value":"","external_name":"args_","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""},{"name":"queryable","doc":null,"default_value":"","external_name":"queryable","restriction":""}],"double_splat":null,"splat_index":null,"yields":0,"block_arg":null,"return_type":"","visibility":"Public","body":"begin\n  logging_args = (DB::EnumerableConcat.build(args_, args)).to_s\n  Avram::Events::QueryEvent.publish(query: query, args: logging_args, queryable: queryable) do\n    yield\n  end\nrescue e : PQ::PQError\n  Avram::Events::FailedQueryEvent.publish(error_message: e.message.to_s, query: query, queryable: queryable, args: logging_args)\n  raise(e)\nend"}},{"id":"query(query,*args_,args:Array?=nil,queryable:String?=nil,**named_args)-instance-method","html_id":"query(query,*args_,args:Array?=nil,queryable:String?=nil,**named_args)-instance-method","name":"query","doc":"Same as crystal-db's `DB::QueryMethods#query` but with instrumentation","summary":"<p>Same as crystal-db's <code>DB::QueryMethods#query</code> but with instrumentation</p>","abstract":false,"args":[{"name":"query","doc":null,"default_value":"","external_name":"query","restriction":""},{"name":"args_","doc":null,"default_value":"","external_name":"args_","restriction":""},{"name":"args","doc":null,"default_value":"nil","external_name":"args","restriction":"Array | ::Nil"},{"name":"queryable","doc":null,"default_value":"nil","external_name":"queryable","restriction":"String | ::Nil"}],"args_string":"(query, *args_, args : Array? = <span class=\"n\">nil</span>, queryable : String? = <span class=\"n\">nil</span>, **named_args)","args_html":"(query, *args_, args : <a href=\"../Array.html\">Array</a>? = <span class=\"n\">nil</span>, queryable : <a href=\"../String.html\">String</a>? = <span class=\"n\">nil</span>, **named_args)","location":{"filename":"src/avram/database.cr","line_number":63,"url":null},"def":{"name":"query","args":[{"name":"query","doc":null,"default_value":"","external_name":"query","restriction":""},{"name":"args_","doc":null,"default_value":"","external_name":"args_","restriction":""},{"name":"args","doc":null,"default_value":"nil","external_name":"args","restriction":"Array | ::Nil"},{"name":"queryable","doc":null,"default_value":"nil","external_name":"queryable","restriction":"String | ::Nil"}],"double_splat":{"name":"named_args","doc":null,"default_value":"","external_name":"named_args","restriction":""},"splat_index":1,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"publish_query_event(query, args_, args, queryable) do\n  run do |db|\n    db.query(query, *args_, args: args)\n  end\nend"}},{"id":"query(query,*args_,args:Array?=nil,queryable:String?=nil,**named_args,&)-instance-method","html_id":"query(query,*args_,args:Array?=nil,queryable:String?=nil,**named_args,&)-instance-method","name":"query","doc":"Same as crystal-db's `DB::QueryMethods#:query` but with instrumentation","summary":"<p>Same as crystal-db's <code>DB::QueryMethods#:query</code> but with instrumentation</p>","abstract":false,"args":[{"name":"query","doc":null,"default_value":"","external_name":"query","restriction":""},{"name":"args_","doc":null,"default_value":"","external_name":"args_","restriction":""},{"name":"args","doc":null,"default_value":"nil","external_name":"args","restriction":"Array | ::Nil"},{"name":"queryable","doc":null,"default_value":"nil","external_name":"queryable","restriction":"String | ::Nil"}],"args_string":"(query, *args_, args : Array? = <span class=\"n\">nil</span>, queryable : String? = <span class=\"n\">nil</span>, **named_args, &)","args_html":"(query, *args_, args : <a href=\"../Array.html\">Array</a>? = <span class=\"n\">nil</span>, queryable : <a href=\"../String.html\">String</a>? = <span class=\"n\">nil</span>, **named_args, &)","location":{"filename":"src/avram/database.cr","line_number":80,"url":null},"def":{"name":"query","args":[{"name":"query","doc":null,"default_value":"","external_name":"query","restriction":""},{"name":"args_","doc":null,"default_value":"","external_name":"args_","restriction":""},{"name":"args","doc":null,"default_value":"nil","external_name":"args","restriction":"Array | ::Nil"},{"name":"queryable","doc":null,"default_value":"nil","external_name":"queryable","restriction":"String | ::Nil"}],"double_splat":{"name":"named_args","doc":null,"default_value":"","external_name":"named_args","restriction":""},"splat_index":1,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"publish_query_event(query, args_, args, queryable) do\n  run do |db|\n    db.query(query, *args_, args: args) do |*yield_args|\n      yield *yield_args\n    end\n  end\nend"}},{"id":"query_all(query,*args_,args:Array?=nil,queryable:String?=nil,**named_args)-instance-method","html_id":"query_all(query,*args_,args:Array?=nil,queryable:String?=nil,**named_args)-instance-method","name":"query_all","doc":"Same as crystal-db's `DB::QueryMethods#query_all` but with instrumentation","summary":"<p>Same as crystal-db's <code>DB::QueryMethods#query_all</code> but with instrumentation</p>","abstract":false,"args":[{"name":"query","doc":null,"default_value":"","external_name":"query","restriction":""},{"name":"args_","doc":null,"default_value":"","external_name":"args_","restriction":""},{"name":"args","doc":null,"default_value":"nil","external_name":"args","restriction":"Array | ::Nil"},{"name":"queryable","doc":null,"default_value":"nil","external_name":"queryable","restriction":"String | ::Nil"}],"args_string":"(query, *args_, args : Array? = <span class=\"n\">nil</span>, queryable : String? = <span class=\"n\">nil</span>, **named_args)","args_html":"(query, *args_, args : <a href=\"../Array.html\">Array</a>? = <span class=\"n\">nil</span>, queryable : <a href=\"../String.html\">String</a>? = <span class=\"n\">nil</span>, **named_args)","location":{"filename":"src/avram/database.cr","line_number":63,"url":null},"def":{"name":"query_all","args":[{"name":"query","doc":null,"default_value":"","external_name":"query","restriction":""},{"name":"args_","doc":null,"default_value":"","external_name":"args_","restriction":""},{"name":"args","doc":null,"default_value":"nil","external_name":"args","restriction":"Array | ::Nil"},{"name":"queryable","doc":null,"default_value":"nil","external_name":"queryable","restriction":"String | ::Nil"}],"double_splat":{"name":"named_args","doc":null,"default_value":"","external_name":"named_args","restriction":""},"splat_index":1,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"publish_query_event(query, args_, args, queryable) do\n  run do |db|\n    db.query_all(query, *args_, args: args)\n  end\nend"}},{"id":"query_all(query,*args_,args:Array?=nil,queryable:String?=nil,**named_args,&)-instance-method","html_id":"query_all(query,*args_,args:Array?=nil,queryable:String?=nil,**named_args,&)-instance-method","name":"query_all","doc":"Same as crystal-db's `DB::QueryMethods#:query_all` but with instrumentation","summary":"<p>Same as crystal-db's <code>DB::QueryMethods#:query_all</code> but with instrumentation</p>","abstract":false,"args":[{"name":"query","doc":null,"default_value":"","external_name":"query","restriction":""},{"name":"args_","doc":null,"default_value":"","external_name":"args_","restriction":""},{"name":"args","doc":null,"default_value":"nil","external_name":"args","restriction":"Array | ::Nil"},{"name":"queryable","doc":null,"default_value":"nil","external_name":"queryable","restriction":"String | ::Nil"}],"args_string":"(query, *args_, args : Array? = <span class=\"n\">nil</span>, queryable : String? = <span class=\"n\">nil</span>, **named_args, &)","args_html":"(query, *args_, args : <a href=\"../Array.html\">Array</a>? = <span class=\"n\">nil</span>, queryable : <a href=\"../String.html\">String</a>? = <span class=\"n\">nil</span>, **named_args, &)","location":{"filename":"src/avram/database.cr","line_number":80,"url":null},"def":{"name":"query_all","args":[{"name":"query","doc":null,"default_value":"","external_name":"query","restriction":""},{"name":"args_","doc":null,"default_value":"","external_name":"args_","restriction":""},{"name":"args","doc":null,"default_value":"nil","external_name":"args","restriction":"Array | ::Nil"},{"name":"queryable","doc":null,"default_value":"nil","external_name":"queryable","restriction":"String | ::Nil"}],"double_splat":{"name":"named_args","doc":null,"default_value":"","external_name":"named_args","restriction":""},"splat_index":1,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"publish_query_event(query, args_, args, queryable) do\n  run do |db|\n    db.query_all(query, *args_, args: args) do |*yield_args|\n      yield *yield_args\n    end\n  end\nend"}},{"id":"query_each(query,*args_,args:Array?=nil,queryable:String?=nil,**named_args)-instance-method","html_id":"query_each(query,*args_,args:Array?=nil,queryable:String?=nil,**named_args)-instance-method","name":"query_each","doc":"Same as crystal-db's `DB::QueryMethods#query_each` but with instrumentation","summary":"<p>Same as crystal-db's <code>DB::QueryMethods#query_each</code> but with instrumentation</p>","abstract":false,"args":[{"name":"query","doc":null,"default_value":"","external_name":"query","restriction":""},{"name":"args_","doc":null,"default_value":"","external_name":"args_","restriction":""},{"name":"args","doc":null,"default_value":"nil","external_name":"args","restriction":"Array | ::Nil"},{"name":"queryable","doc":null,"default_value":"nil","external_name":"queryable","restriction":"String | ::Nil"}],"args_string":"(query, *args_, args : Array? = <span class=\"n\">nil</span>, queryable : String? = <span class=\"n\">nil</span>, **named_args)","args_html":"(query, *args_, args : <a href=\"../Array.html\">Array</a>? = <span class=\"n\">nil</span>, queryable : <a href=\"../String.html\">String</a>? = <span class=\"n\">nil</span>, **named_args)","location":{"filename":"src/avram/database.cr","line_number":63,"url":null},"def":{"name":"query_each","args":[{"name":"query","doc":null,"default_value":"","external_name":"query","restriction":""},{"name":"args_","doc":null,"default_value":"","external_name":"args_","restriction":""},{"name":"args","doc":null,"default_value":"nil","external_name":"args","restriction":"Array | ::Nil"},{"name":"queryable","doc":null,"default_value":"nil","external_name":"queryable","restriction":"String | ::Nil"}],"double_splat":{"name":"named_args","doc":null,"default_value":"","external_name":"named_args","restriction":""},"splat_index":1,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"publish_query_event(query, args_, args, queryable) do\n  run do |db|\n    db.query_each(query, *args_, args: args)\n  end\nend"}},{"id":"query_each(query,*args_,args:Array?=nil,queryable:String?=nil,**named_args,&)-instance-method","html_id":"query_each(query,*args_,args:Array?=nil,queryable:String?=nil,**named_args,&)-instance-method","name":"query_each","doc":"Same as crystal-db's `DB::QueryMethods#:query_each` but with instrumentation","summary":"<p>Same as crystal-db's <code>DB::QueryMethods#:query_each</code> but with instrumentation</p>","abstract":false,"args":[{"name":"query","doc":null,"default_value":"","external_name":"query","restriction":""},{"name":"args_","doc":null,"default_value":"","external_name":"args_","restriction":""},{"name":"args","doc":null,"default_value":"nil","external_name":"args","restriction":"Array | ::Nil"},{"name":"queryable","doc":null,"default_value":"nil","external_name":"queryable","restriction":"String | ::Nil"}],"args_string":"(query, *args_, args : Array? = <span class=\"n\">nil</span>, queryable : String? = <span class=\"n\">nil</span>, **named_args, &)","args_html":"(query, *args_, args : <a href=\"../Array.html\">Array</a>? = <span class=\"n\">nil</span>, queryable : <a href=\"../String.html\">String</a>? = <span class=\"n\">nil</span>, **named_args, &)","location":{"filename":"src/avram/database.cr","line_number":80,"url":null},"def":{"name":"query_each","args":[{"name":"query","doc":null,"default_value":"","external_name":"query","restriction":""},{"name":"args_","doc":null,"default_value":"","external_name":"args_","restriction":""},{"name":"args","doc":null,"default_value":"nil","external_name":"args","restriction":"Array | ::Nil"},{"name":"queryable","doc":null,"default_value":"nil","external_name":"queryable","restriction":"String | ::Nil"}],"double_splat":{"name":"named_args","doc":null,"default_value":"","external_name":"named_args","restriction":""},"splat_index":1,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"publish_query_event(query, args_, args, queryable) do\n  run do |db|\n    db.query_each(query, *args_, args: args) do |*yield_args|\n      yield *yield_args\n    end\n  end\nend"}},{"id":"query_one(query,*args_,args:Array?=nil,queryable:String?=nil,**named_args)-instance-method","html_id":"query_one(query,*args_,args:Array?=nil,queryable:String?=nil,**named_args)-instance-method","name":"query_one","doc":"Same as crystal-db's `DB::QueryMethods#query_one` but with instrumentation","summary":"<p>Same as crystal-db's <code>DB::QueryMethods#query_one</code> but with instrumentation</p>","abstract":false,"args":[{"name":"query","doc":null,"default_value":"","external_name":"query","restriction":""},{"name":"args_","doc":null,"default_value":"","external_name":"args_","restriction":""},{"name":"args","doc":null,"default_value":"nil","external_name":"args","restriction":"Array | ::Nil"},{"name":"queryable","doc":null,"default_value":"nil","external_name":"queryable","restriction":"String | ::Nil"}],"args_string":"(query, *args_, args : Array? = <span class=\"n\">nil</span>, queryable : String? = <span class=\"n\">nil</span>, **named_args)","args_html":"(query, *args_, args : <a href=\"../Array.html\">Array</a>? = <span class=\"n\">nil</span>, queryable : <a href=\"../String.html\">String</a>? = <span class=\"n\">nil</span>, **named_args)","location":{"filename":"src/avram/database.cr","line_number":63,"url":null},"def":{"name":"query_one","args":[{"name":"query","doc":null,"default_value":"","external_name":"query","restriction":""},{"name":"args_","doc":null,"default_value":"","external_name":"args_","restriction":""},{"name":"args","doc":null,"default_value":"nil","external_name":"args","restriction":"Array | ::Nil"},{"name":"queryable","doc":null,"default_value":"nil","external_name":"queryable","restriction":"String | ::Nil"}],"double_splat":{"name":"named_args","doc":null,"default_value":"","external_name":"named_args","restriction":""},"splat_index":1,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"publish_query_event(query, args_, args, queryable) do\n  run do |db|\n    db.query_one(query, *args_, args: args)\n  end\nend"}},{"id":"query_one(query,*args_,args:Array?=nil,queryable:String?=nil,**named_args,&)-instance-method","html_id":"query_one(query,*args_,args:Array?=nil,queryable:String?=nil,**named_args,&)-instance-method","name":"query_one","doc":"Same as crystal-db's `DB::QueryMethods#:query_one` but with instrumentation","summary":"<p>Same as crystal-db's <code>DB::QueryMethods#:query_one</code> but with instrumentation</p>","abstract":false,"args":[{"name":"query","doc":null,"default_value":"","external_name":"query","restriction":""},{"name":"args_","doc":null,"default_value":"","external_name":"args_","restriction":""},{"name":"args","doc":null,"default_value":"nil","external_name":"args","restriction":"Array | ::Nil"},{"name":"queryable","doc":null,"default_value":"nil","external_name":"queryable","restriction":"String | ::Nil"}],"args_string":"(query, *args_, args : Array? = <span class=\"n\">nil</span>, queryable : String? = <span class=\"n\">nil</span>, **named_args, &)","args_html":"(query, *args_, args : <a href=\"../Array.html\">Array</a>? = <span class=\"n\">nil</span>, queryable : <a href=\"../String.html\">String</a>? = <span class=\"n\">nil</span>, **named_args, &)","location":{"filename":"src/avram/database.cr","line_number":80,"url":null},"def":{"name":"query_one","args":[{"name":"query","doc":null,"default_value":"","external_name":"query","restriction":""},{"name":"args_","doc":null,"default_value":"","external_name":"args_","restriction":""},{"name":"args","doc":null,"default_value":"nil","external_name":"args","restriction":"Array | ::Nil"},{"name":"queryable","doc":null,"default_value":"nil","external_name":"queryable","restriction":"String | ::Nil"}],"double_splat":{"name":"named_args","doc":null,"default_value":"","external_name":"named_args","restriction":""},"splat_index":1,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"publish_query_event(query, args_, args, queryable) do\n  run do |db|\n    db.query_one(query, *args_, args: args) do |*yield_args|\n      yield *yield_args\n    end\n  end\nend"}},{"id":"scalar(query,*args_,args:Array?=nil,queryable:String?=nil,**named_args)-instance-method","html_id":"scalar(query,*args_,args:Array?=nil,queryable:String?=nil,**named_args)-instance-method","name":"scalar","doc":"Same as crystal-db's `DB::QueryMethods#scalar` but with instrumentation","summary":"<p>Same as crystal-db's <code>DB::QueryMethods#scalar</code> but with instrumentation</p>","abstract":false,"args":[{"name":"query","doc":null,"default_value":"","external_name":"query","restriction":""},{"name":"args_","doc":null,"default_value":"","external_name":"args_","restriction":""},{"name":"args","doc":null,"default_value":"nil","external_name":"args","restriction":"Array | ::Nil"},{"name":"queryable","doc":null,"default_value":"nil","external_name":"queryable","restriction":"String | ::Nil"}],"args_string":"(query, *args_, args : Array? = <span class=\"n\">nil</span>, queryable : String? = <span class=\"n\">nil</span>, **named_args)","args_html":"(query, *args_, args : <a href=\"../Array.html\">Array</a>? = <span class=\"n\">nil</span>, queryable : <a href=\"../String.html\">String</a>? = <span class=\"n\">nil</span>, **named_args)","location":{"filename":"src/avram/database.cr","line_number":63,"url":null},"def":{"name":"scalar","args":[{"name":"query","doc":null,"default_value":"","external_name":"query","restriction":""},{"name":"args_","doc":null,"default_value":"","external_name":"args_","restriction":""},{"name":"args","doc":null,"default_value":"nil","external_name":"args","restriction":"Array | ::Nil"},{"name":"queryable","doc":null,"default_value":"nil","external_name":"queryable","restriction":"String | ::Nil"}],"double_splat":{"name":"named_args","doc":null,"default_value":"","external_name":"named_args","restriction":""},"splat_index":1,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"publish_query_event(query, args_, args, queryable) do\n  run do |db|\n    db.scalar(query, *args_, args: args)\n  end\nend"}}],"macros":[],"types":[{"html_id":"avram/Avram/Database/ColumnInfo","path":"Avram/Database/ColumnInfo.html","kind":"struct","full_name":"Avram::Database::ColumnInfo","name":"ColumnInfo","abstract":false,"superclass":{"html_id":"avram/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"avram/DB/Mappable","kind":"module","full_name":"DB::Mappable","name":"Mappable"},{"html_id":"avram/DB/Serializable","kind":"module","full_name":"DB::Serializable","name":"Serializable"},{"html_id":"avram/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"avram/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[{"html_id":"avram/DB/Mappable","kind":"module","full_name":"DB::Mappable","name":"Mappable"},{"html_id":"avram/DB/Serializable","kind":"module","full_name":"DB::Serializable","name":"Serializable"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Avram/Database","kind":"class","full_name":"Avram::Database","name":"Database"},"doc":null,"summary":null,"class_methods":[{"id":"from_rs(rs:DB::ResultSet)-class-method","html_id":"from_rs(rs:DB::ResultSet)-class-method","name":"from_rs","doc":null,"summary":null,"abstract":false,"args":[{"name":"rs","doc":null,"default_value":"","external_name":"rs","restriction":"::DB::ResultSet"}],"args_string":"(rs : DB::ResultSet)","args_html":"(rs : DB::ResultSet)","location":{"filename":"src/avram/database/column_info.cr","line_number":3,"url":null},"def":{"name":"from_rs","args":[{"name":"rs","doc":null,"default_value":"","external_name":"rs","restriction":"::DB::ResultSet"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"begin\n  objs = Array(self).new\n  rs.each do\n    objs << (self.new(rs))\n  end\n  objs\nensure\n  rs.close\nend"}}],"constructors":[{"id":"new(rs:DB::ResultSet)-class-method","html_id":"new(rs:DB::ResultSet)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"rs","doc":null,"default_value":"","external_name":"rs","restriction":"::DB::ResultSet"}],"args_string":"(rs : DB::ResultSet)","args_html":"(rs : DB::ResultSet)","location":{"filename":"src/avram/database/column_info.cr","line_number":3,"url":null},"def":{"name":"new","args":[{"name":"rs","doc":null,"default_value":"","external_name":"rs","restriction":"::DB::ResultSet"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"instance = allocate\ninstance.initialize(__set_for_db_serializable: rs)\nif instance.responds_to?(:finalize)\n  GC.add_finalizer(instance)\nend\ninstance\n"}}],"instance_methods":[{"id":"column_default:String?-instance-method","html_id":"column_default:String?-instance-method","name":"column_default","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","args_html":" : <a href=\"../../String.html\">String</a>?","location":{"filename":"src/avram/database/column_info.cr","line_number":11,"url":null},"def":{"name":"column_default","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String | ::Nil","visibility":"Public","body":"@column_default"}},{"id":"column_default=(column_default:String?)-instance-method","html_id":"column_default=(column_default:String?)-instance-method","name":"column_default=","doc":null,"summary":null,"abstract":false,"args":[{"name":"column_default","doc":null,"default_value":"","external_name":"column_default","restriction":"String | ::Nil"}],"args_string":"(column_default : String?)","args_html":"(column_default : <a href=\"../../String.html\">String</a>?)","location":{"filename":"src/avram/database/column_info.cr","line_number":11,"url":null},"def":{"name":"column_default=","args":[{"name":"column_default","doc":null,"default_value":"","external_name":"column_default","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@column_default = column_default"}},{"id":"column_name:String-instance-method","html_id":"column_name:String-instance-method","name":"column_name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","args_html":" : <a href=\"../../String.html\">String</a>","location":{"filename":"src/avram/database/column_info.cr","line_number":9,"url":null},"def":{"name":"column_name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@column_name"}},{"id":"column_name=(column_name:String)-instance-method","html_id":"column_name=(column_name:String)-instance-method","name":"column_name=","doc":null,"summary":null,"abstract":false,"args":[{"name":"column_name","doc":null,"default_value":"","external_name":"column_name","restriction":"String"}],"args_string":"(column_name : String)","args_html":"(column_name : <a href=\"../../String.html\">String</a>)","location":{"filename":"src/avram/database/column_info.cr","line_number":9,"url":null},"def":{"name":"column_name=","args":[{"name":"column_name","doc":null,"default_value":"","external_name":"column_name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@column_name = column_name"}},{"id":"data_type:String-instance-method","html_id":"data_type:String-instance-method","name":"data_type","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","args_html":" : <a href=\"../../String.html\">String</a>","location":{"filename":"src/avram/database/column_info.cr","line_number":12,"url":null},"def":{"name":"data_type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@data_type"}},{"id":"data_type=(data_type:String)-instance-method","html_id":"data_type=(data_type:String)-instance-method","name":"data_type=","doc":null,"summary":null,"abstract":false,"args":[{"name":"data_type","doc":null,"default_value":"","external_name":"data_type","restriction":"String"}],"args_string":"(data_type : String)","args_html":"(data_type : <a href=\"../../String.html\">String</a>)","location":{"filename":"src/avram/database/column_info.cr","line_number":12,"url":null},"def":{"name":"data_type=","args":[{"name":"data_type","doc":null,"default_value":"","external_name":"data_type","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@data_type = data_type"}},{"id":"is_nullable:String-instance-method","html_id":"is_nullable:String-instance-method","name":"is_nullable","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","args_html":" : <a href=\"../../String.html\">String</a>","location":{"filename":"src/avram/database/column_info.cr","line_number":10,"url":null},"def":{"name":"is_nullable","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@is_nullable"}},{"id":"is_nullable=(is_nullable:String)-instance-method","html_id":"is_nullable=(is_nullable:String)-instance-method","name":"is_nullable=","doc":null,"summary":null,"abstract":false,"args":[{"name":"is_nullable","doc":null,"default_value":"","external_name":"is_nullable","restriction":"String"}],"args_string":"(is_nullable : String)","args_html":"(is_nullable : <a href=\"../../String.html\">String</a>)","location":{"filename":"src/avram/database/column_info.cr","line_number":10,"url":null},"def":{"name":"is_nullable=","args":[{"name":"is_nullable","doc":null,"default_value":"","external_name":"is_nullable","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@is_nullable = is_nullable"}},{"id":"nilable?-instance-method","html_id":"nilable?-instance-method","name":"nilable?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/database/column_info.cr","line_number":14,"url":null},"def":{"name":"nilable?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"is_nullable == \"YES\""}},{"id":"table-instance-method","html_id":"table-instance-method","name":"table","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/database/column_info.cr","line_number":18,"url":null},"def":{"name":"table","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"TableInfo.new(table_name, table_type, table_schema)"}},{"id":"table_catalog:String-instance-method","html_id":"table_catalog:String-instance-method","name":"table_catalog","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","args_html":" : <a href=\"../../String.html\">String</a>","location":{"filename":"src/avram/database/column_info.cr","line_number":5,"url":null},"def":{"name":"table_catalog","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@table_catalog"}},{"id":"table_catalog=(table_catalog:String)-instance-method","html_id":"table_catalog=(table_catalog:String)-instance-method","name":"table_catalog=","doc":null,"summary":null,"abstract":false,"args":[{"name":"table_catalog","doc":null,"default_value":"","external_name":"table_catalog","restriction":"String"}],"args_string":"(table_catalog : String)","args_html":"(table_catalog : <a href=\"../../String.html\">String</a>)","location":{"filename":"src/avram/database/column_info.cr","line_number":5,"url":null},"def":{"name":"table_catalog=","args":[{"name":"table_catalog","doc":null,"default_value":"","external_name":"table_catalog","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@table_catalog = table_catalog"}},{"id":"table_name:String-instance-method","html_id":"table_name:String-instance-method","name":"table_name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","args_html":" : <a href=\"../../String.html\">String</a>","location":{"filename":"src/avram/database/column_info.cr","line_number":7,"url":null},"def":{"name":"table_name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@table_name"}},{"id":"table_name=(table_name:String)-instance-method","html_id":"table_name=(table_name:String)-instance-method","name":"table_name=","doc":null,"summary":null,"abstract":false,"args":[{"name":"table_name","doc":null,"default_value":"","external_name":"table_name","restriction":"String"}],"args_string":"(table_name : String)","args_html":"(table_name : <a href=\"../../String.html\">String</a>)","location":{"filename":"src/avram/database/column_info.cr","line_number":7,"url":null},"def":{"name":"table_name=","args":[{"name":"table_name","doc":null,"default_value":"","external_name":"table_name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@table_name = table_name"}},{"id":"table_schema:String-instance-method","html_id":"table_schema:String-instance-method","name":"table_schema","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","args_html":" : <a href=\"../../String.html\">String</a>","location":{"filename":"src/avram/database/column_info.cr","line_number":6,"url":null},"def":{"name":"table_schema","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@table_schema"}},{"id":"table_schema=(table_schema:String)-instance-method","html_id":"table_schema=(table_schema:String)-instance-method","name":"table_schema=","doc":null,"summary":null,"abstract":false,"args":[{"name":"table_schema","doc":null,"default_value":"","external_name":"table_schema","restriction":"String"}],"args_string":"(table_schema : String)","args_html":"(table_schema : <a href=\"../../String.html\">String</a>)","location":{"filename":"src/avram/database/column_info.cr","line_number":6,"url":null},"def":{"name":"table_schema=","args":[{"name":"table_schema","doc":null,"default_value":"","external_name":"table_schema","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@table_schema = table_schema"}},{"id":"table_type:String-instance-method","html_id":"table_type:String-instance-method","name":"table_type","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","args_html":" : <a href=\"../../String.html\">String</a>","location":{"filename":"src/avram/database/column_info.cr","line_number":8,"url":null},"def":{"name":"table_type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@table_type"}},{"id":"table_type=(table_type:String)-instance-method","html_id":"table_type=(table_type:String)-instance-method","name":"table_type=","doc":null,"summary":null,"abstract":false,"args":[{"name":"table_type","doc":null,"default_value":"","external_name":"table_type","restriction":"String"}],"args_string":"(table_type : String)","args_html":"(table_type : <a href=\"../../String.html\">String</a>)","location":{"filename":"src/avram/database/column_info.cr","line_number":8,"url":null},"def":{"name":"table_type=","args":[{"name":"table_type","doc":null,"default_value":"","external_name":"table_type","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@table_type = table_type"}}],"macros":[],"types":[]},{"html_id":"avram/Avram/Database/DatabaseCleaner","path":"Avram/Database/DatabaseCleaner.html","kind":"class","full_name":"Avram::Database::DatabaseCleaner","name":"DatabaseCleaner","abstract":false,"superclass":{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Avram/Database","kind":"class","full_name":"Avram::Database","name":"Database"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(database)-class-method","html_id":"new(database)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"database","doc":null,"default_value":"","external_name":"database","restriction":""}],"args_string":"(database)","args_html":"(database)","location":{"filename":"src/avram/database.cr","line_number":189,"url":null},"def":{"name":"new","args":[{"name":"database","doc":null,"default_value":"","external_name":"database","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(database)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"delete-instance-method","html_id":"delete-instance-method","name":"delete","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/database.cr","line_number":205,"url":null},"def":{"name":"delete","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if table_names.empty?\n  return\nend\ntable_names.each do |t|\n  statement = (\"DELETE FROM #{t}\")\n  database.exec(statement)\nend\n"}},{"id":"truncate-instance-method","html_id":"truncate-instance-method","name":"truncate","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/database.cr","line_number":198,"url":null},"def":{"name":"truncate","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if table_names.empty?\n  return\nend\nstatement = (\"TRUNCATE TABLE #{table_names.map do |name|\n  name\nend.join(\", \")} RESTART IDENTITY CASCADE;\")\ndatabase.exec(statement)\n"}}],"macros":[],"types":[]},{"html_id":"avram/Avram/Database/DatabaseInfo","path":"Avram/Database/DatabaseInfo.html","kind":"struct","full_name":"Avram::Database::DatabaseInfo","name":"DatabaseInfo","abstract":false,"superclass":{"html_id":"avram/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"avram/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"avram/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[{"id":"SQL_QUERY","name":"SQL_QUERY","value":"\"  SELECT columns.table_name,\\n        tables.table_type,\\n        columns.table_schema,\\n        columns.table_catalog,\\n        columns.column_name,\\n        columns.is_nullable,\\n        columns.column_default,\\n        columns.data_type\\n  FROM information_schema.columns as columns\\n  JOIN information_schema.tables as tables\\n    ON tables.table_name = columns.table_name\\n    AND tables.table_catalog = columns.table_catalog\\n    AND tables.table_schema = columns.table_schema\\n  WHERE columns.table_schema='public';\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Avram/Database","kind":"class","full_name":"Avram::Database","name":"Database"},"doc":null,"summary":null,"class_methods":[{"id":"load(database:Avram::Database.class)-class-method","html_id":"load(database:Avram::Database.class)-class-method","name":"load","doc":null,"summary":null,"abstract":false,"args":[{"name":"database","doc":null,"default_value":"","external_name":"database","restriction":"Avram::Database.class"}],"args_string":"(database : <span class=\"t\">Avram</span><span class=\"t\">::</span><span class=\"t\">Database</span>.<span class=\"k\">class</span>)","args_html":"(database : <span class=\"t\">Avram</span><span class=\"t\">::</span><span class=\"t\">Database</span>.<span class=\"k\">class</span>)","location":{"filename":"src/avram/database/database_info.cr","line_number":20,"url":null},"def":{"name":"load","args":[{"name":"database","doc":null,"default_value":"","external_name":"database","restriction":"Avram::Database.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"column_infos = database.query(SQL_QUERY) do |rs|\n  ColumnInfo.from_rs(rs)\nend\ngrouped = column_infos.group_by(&.table)\ngrouped.each do |table, columns|\n  columns.each do |c|\n    table.columns << c\n  end\nend\ntable_infos = grouped.keys\nnew(table_infos)\n"}}],"constructors":[{"id":"new(table_infos)-class-method","html_id":"new(table_infos)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"table_infos","doc":null,"default_value":"","external_name":"table_infos","restriction":""}],"args_string":"(table_infos)","args_html":"(table_infos)","location":{"filename":"src/avram/database/database_info.cr","line_number":33,"url":null},"def":{"name":"new","args":[{"name":"table_infos","doc":null,"default_value":"","external_name":"table_infos","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(table_infos)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"table(name:String):TableInfo?-instance-method","html_id":"table(name:String):TableInfo?-instance-method","name":"table","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"args_string":"(name : String) : TableInfo?","args_html":"(name : <a href=\"../../String.html\">String</a>) : <a href=\"../../Avram/Database/TableInfo.html\">TableInfo</a>?","location":{"filename":"src/avram/database/database_info.cr","line_number":44,"url":null},"def":{"name":"table","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"TableInfo | ::Nil","visibility":"Public","body":"table_infos.find do |__arg2|\n  __arg2.table_name == name\nend"}},{"id":"table?(name:String)-instance-method","html_id":"table?(name:String)-instance-method","name":"table?","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"args_string":"(name : String)","args_html":"(name : <a href=\"../../String.html\">String</a>)","location":{"filename":"src/avram/database/database_info.cr","line_number":36,"url":null},"def":{"name":"table?","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"table_names.includes?(name)"}},{"id":"table_infos:Array(TableInfo)-instance-method","html_id":"table_infos:Array(TableInfo)-instance-method","name":"table_infos","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(TableInfo)","args_html":" : <a href=\"../../Array.html\">Array</a>(<a href=\"../../Avram/Database/TableInfo.html\">TableInfo</a>)","location":{"filename":"src/avram/database/database_info.cr","line_number":31,"url":null},"def":{"name":"table_infos","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(TableInfo)","visibility":"Public","body":"@table_infos"}},{"id":"table_infos=(table_infos:Array(TableInfo))-instance-method","html_id":"table_infos=(table_infos:Array(TableInfo))-instance-method","name":"table_infos=","doc":null,"summary":null,"abstract":false,"args":[{"name":"table_infos","doc":null,"default_value":"","external_name":"table_infos","restriction":"Array(TableInfo)"}],"args_string":"(table_infos : Array(TableInfo))","args_html":"(table_infos : <a href=\"../../Array.html\">Array</a>(<a href=\"../../Avram/Database/TableInfo.html\">TableInfo</a>))","location":{"filename":"src/avram/database/database_info.cr","line_number":31,"url":null},"def":{"name":"table_infos=","args":[{"name":"table_infos","doc":null,"default_value":"","external_name":"table_infos","restriction":"Array(TableInfo)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@table_infos = table_infos"}},{"id":"table_names-instance-method","html_id":"table_names-instance-method","name":"table_names","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/database/database_info.cr","line_number":40,"url":null},"def":{"name":"table_names","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"table_infos.map(&.table_name)"}}],"macros":[],"types":[]},{"html_id":"avram/Avram/Database/FiberId","path":"Avram/Database/FiberId.html","kind":"alias","full_name":"Avram::Database::FiberId","name":"FiberId","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":true,"aliased":"UInt64","aliased_html":"UInt64","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Avram/Database","kind":"class","full_name":"Avram::Database","name":"Database"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"avram/Avram/Database/TableInfo","path":"Avram/Database/TableInfo.html","kind":"struct","full_name":"Avram::Database::TableInfo","name":"TableInfo","abstract":false,"superclass":{"html_id":"avram/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"avram/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"avram/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Avram/Database","kind":"class","full_name":"Avram::Database","name":"Database"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(table_name,table_type,table_schema)-class-method","html_id":"new(table_name,table_type,table_schema)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"table_name","doc":null,"default_value":"","external_name":"table_name","restriction":""},{"name":"table_type","doc":null,"default_value":"","external_name":"table_type","restriction":""},{"name":"table_schema","doc":null,"default_value":"","external_name":"table_schema","restriction":""}],"args_string":"(table_name, table_type, table_schema)","args_html":"(table_name, table_type, table_schema)","location":{"filename":"src/avram/database/table_info.cr","line_number":8,"url":null},"def":{"name":"new","args":[{"name":"table_name","doc":null,"default_value":"","external_name":"table_name","restriction":""},{"name":"table_type","doc":null,"default_value":"","external_name":"table_type","restriction":""},{"name":"table_schema","doc":null,"default_value":"","external_name":"table_schema","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(table_name, table_type, table_schema)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"column(name:String):ColumnInfo?-instance-method","html_id":"column(name:String):ColumnInfo?-instance-method","name":"column","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"args_string":"(name : String) : ColumnInfo?","args_html":"(name : <a href=\"../../String.html\">String</a>) : <a href=\"../../Avram/Database/ColumnInfo.html\">ColumnInfo</a>?","location":{"filename":"src/avram/database/table_info.cr","line_number":31,"url":null},"def":{"name":"column","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"ColumnInfo | ::Nil","visibility":"Public","body":"columns.find do |__arg1|\n  __arg1.column_name == name\nend"}},{"id":"column?(name:String)-instance-method","html_id":"column?(name:String)-instance-method","name":"column?","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"args_string":"(name : String)","args_html":"(name : <a href=\"../../String.html\">String</a>)","location":{"filename":"src/avram/database/table_info.cr","line_number":23,"url":null},"def":{"name":"column?","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"column_names.includes?(name)"}},{"id":"column_names-instance-method","html_id":"column_names-instance-method","name":"column_names","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/database/table_info.cr","line_number":27,"url":null},"def":{"name":"column_names","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"columns.map(&.column_name)"}},{"id":"columns:Array(Avram::Database::ColumnInfo)-instance-method","html_id":"columns:Array(Avram::Database::ColumnInfo)-instance-method","name":"columns","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(Avram::Database::ColumnInfo)","args_html":" : <a href=\"../../Array.html\">Array</a>(<a href=\"../../Avram/Database/ColumnInfo.html\">Avram::Database::ColumnInfo</a>)","location":{"filename":"src/avram/database/table_info.cr","line_number":6,"url":null},"def":{"name":"columns","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@columns"}},{"id":"migrations_table?-instance-method","html_id":"migrations_table?-instance-method","name":"migrations_table?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/database/table_info.cr","line_number":35,"url":null},"def":{"name":"migrations_table?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"table_name == \"migrations\""}},{"id":"table?-instance-method","html_id":"table?-instance-method","name":"table?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/database/table_info.cr","line_number":15,"url":null},"def":{"name":"table?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"table_type == \"BASE TABLE\""}},{"id":"table_name:String-instance-method","html_id":"table_name:String-instance-method","name":"table_name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","args_html":" : <a href=\"../../String.html\">String</a>","location":{"filename":"src/avram/database/table_info.cr","line_number":3,"url":null},"def":{"name":"table_name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@table_name"}},{"id":"table_schema:String-instance-method","html_id":"table_schema:String-instance-method","name":"table_schema","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","args_html":" : <a href=\"../../String.html\">String</a>","location":{"filename":"src/avram/database/table_info.cr","line_number":5,"url":null},"def":{"name":"table_schema","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@table_schema"}},{"id":"table_type:String-instance-method","html_id":"table_type:String-instance-method","name":"table_type","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","args_html":" : <a href=\"../../String.html\">String</a>","location":{"filename":"src/avram/database/table_info.cr","line_number":4,"url":null},"def":{"name":"table_type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@table_type"}},{"id":"view?-instance-method","html_id":"view?-instance-method","name":"view?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/database/table_info.cr","line_number":19,"url":null},"def":{"name":"view?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"table_type == \"VIEW\""}}],"macros":[],"types":[]}]},{"html_id":"avram/Avram/DatabaseValidations","path":"Avram/DatabaseValidations.html","kind":"module","full_name":"Avram::DatabaseValidations(T)","name":"DatabaseValidations","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"avram/Avram/SaveOperation","kind":"class","full_name":"Avram::SaveOperation(T)","name":"SaveOperation"}],"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"avram/Avram/DefineAttribute","path":"Avram/DefineAttribute.html","kind":"module","full_name":"Avram::DefineAttribute","name":"DefineAttribute","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"avram/Avram/DeleteOperation","kind":"class","full_name":"Avram::DeleteOperation(T)","name":"DeleteOperation"},{"html_id":"avram/Avram/Operation","kind":"class","full_name":"Avram::Operation","name":"Operation"},{"html_id":"avram/Avram/SaveOperation","kind":"class","full_name":"Avram::SaveOperation(T)","name":"SaveOperation"}],"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"attributes-instance-method","html_id":"attributes-instance-method","name":"attributes","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/define_attribute.cr","line_number":35,"url":null},"def":{"name":"attributes","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"[] of Avram::PermittedAttribute(Nil)"}}],"macros":[{"id":"attribute(type_declaration)-macro","html_id":"attribute(type_declaration)-macro","name":"attribute","doc":null,"summary":null,"abstract":false,"args":[{"name":"type_declaration","doc":null,"default_value":"","external_name":"type_declaration","restriction":""}],"args_string":"(type_declaration)","location":{"filename":"src/avram/define_attribute.cr","line_number":37,"url":null},"def":{"name":"attribute","args":[{"name":"type_declaration","doc":null,"default_value":"","external_name":"type_declaration","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    \n{% if type_declaration.type.is_a?(Union) %}\n      {% if type_declaration.value.is_a?(Nop) %}\n        {% default_value = \"\" %}\n      {% else %}\n        {% default_value = \"= #{type_declaration.value}\" %}\n      {% end %}\n      {% raise(\"`attribute` in #{@type} must not be called with a type union or nilable type but was called with #{type_declaration.type}\\nIf you were attempting to create a nilable attribute, all attributes are considered nilable by default.\\n\\nTry this...\\n\\n  attribute #{type_declaration.var} : #{type_declaration.type.types.first} #{default_value.id}\\n\\nRead more on attributes: https://luckyframework.org/guides/database/validating-saving\") %}\n    {% end %}\n\n\n    \n{% ATTRIBUTES << type_declaration %}\n\n\n    \n{% type = type_declaration.type %}\n\n    \n{% name = type_declaration.var %}\n\n    \n{% default_value = if type_declaration.value.is_a?(Nop)\n  nil\nelse\n  type_declaration.value\nend %}\n\n    @_\n{{ name }}\n : Avram::Attribute(\n{{ type }}\n)?\n\n    \nensure_base_attributes_method_is_present\n\n    def attributes\n      ([\n{{ name }}\n] + previous_def + super).uniq\n    \nend\n\n    def \n{{ name }}\n\n      _\n{{ name }}\n.permitted\n    \nend\n\n    private def _\n{{ name }}\n\n      @_\n{{ name }}\n ||= Avram::Attribute(\n{{ type }}\n).new(\n        name: \n{{ name.id.symbolize }}\n,\n        value: \n{{ default_value }}\n,\n        param_key: self.class.param_key\n      ).tap do |attribute|\n        attribute.extract(params)\n      \nend\n    \nend\n  \n"}},{"id":"ensure_base_attributes_method_is_present-macro","html_id":"ensure_base_attributes_method_is_present-macro","name":"ensure_base_attributes_method_is_present","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","location":{"filename":"src/avram/define_attribute.cr","line_number":2,"url":null},"def":{"name":"ensure_base_attributes_method_is_present","args":[],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    \n{% if !(@type.methods.map(&.name).includes?((:attributes).id)) %}\n      def attributes\n        [] of Avram::PermittedAttribute(Nil)\n      end\n    {% end %}\n\n  \n"}},{"id":"file_attribute(key)-macro","html_id":"file_attribute(key)-macro","name":"file_attribute","doc":null,"summary":null,"abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":""}],"args_string":"(key)","location":{"filename":"src/avram/define_attribute.cr","line_number":91,"url":null},"def":{"name":"file_attribute","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    \n{% if key.is_a?(SymbolLiteral) %}{% else %}\n      {% raise(\"file_attribute must be declared with a Symbol\") %}\n    {% end %}\n\n\n    attribute \n{{ key.id }}\n : Avram::Uploadable\n  \n"}},{"id":"inherit_attributes-macro","html_id":"inherit_attributes-macro","name":"inherit_attributes","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","location":{"filename":"src/avram/define_attribute.cr","line_number":18,"url":null},"def":{"name":"inherit_attributes","args":[],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    \n\\{% if\n !@type.constant(:ATTRIBUTES) %}\n      ATTRIBUTES = [] of Nil\n    \n\\{% end\n %}\n\n\n    \n\\{% if\n !@type.ancestors.first.abstract? %}\n      \n\\{% for\n attribute in @type.ancestors.first.constant :ATTRIBUTES %}\n        \n\\{% \nATTRIBUTES << type_declaration %}\n      \n\\{% end\n %}\n    \n\\{% end\n %}\n\n    macro inherited\n      inherit_attributes\n    \nend\n  \n"}}],"types":[]},{"html_id":"avram/Avram/DeleteOperation","path":"Avram/DeleteOperation.html","kind":"class","full_name":"Avram::DeleteOperation(T)","name":"DeleteOperation","abstract":true,"superclass":{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"avram/Avram/InheritColumnAttributes","kind":"module","full_name":"Avram::InheritColumnAttributes","name":"InheritColumnAttributes"},{"html_id":"avram/Avram/Callbacks","kind":"module","full_name":"Avram::Callbacks","name":"Callbacks"},{"html_id":"avram/Avram/ParamKeyOverride","kind":"module","full_name":"Avram::ParamKeyOverride","name":"ParamKeyOverride"},{"html_id":"avram/Avram/OperationErrors","kind":"module","full_name":"Avram::OperationErrors","name":"OperationErrors"},{"html_id":"avram/Avram/Validations","kind":"module","full_name":"Avram::Validations","name":"Validations"},{"html_id":"avram/Avram/DefineAttribute","kind":"module","full_name":"Avram::DefineAttribute","name":"DefineAttribute"},{"html_id":"avram/Avram/NeedyInitializerAndDeleteMethods","kind":"module","full_name":"Avram::NeedyInitializerAndDeleteMethods","name":"NeedyInitializerAndDeleteMethods"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[{"id":"ATTRIBUTES","name":"ATTRIBUTES","value":"[] of Nil","doc":null,"summary":null},{"id":"OPERATION_NEEDS","name":"OPERATION_NEEDS","value":"[] of Nil","doc":null,"summary":null}],"included_modules":[{"html_id":"avram/Avram/Callbacks","kind":"module","full_name":"Avram::Callbacks","name":"Callbacks"},{"html_id":"avram/Avram/DefineAttribute","kind":"module","full_name":"Avram::DefineAttribute","name":"DefineAttribute"},{"html_id":"avram/Avram/InheritColumnAttributes","kind":"module","full_name":"Avram::InheritColumnAttributes","name":"InheritColumnAttributes"},{"html_id":"avram/Avram/NeedyInitializerAndDeleteMethods","kind":"module","full_name":"Avram::NeedyInitializerAndDeleteMethods","name":"NeedyInitializerAndDeleteMethods"},{"html_id":"avram/Avram/OperationErrors","kind":"module","full_name":"Avram::OperationErrors","name":"OperationErrors"},{"html_id":"avram/Avram/ParamKeyOverride","kind":"module","full_name":"Avram::ParamKeyOverride","name":"ParamKeyOverride"},{"html_id":"avram/Avram/Validations","kind":"module","full_name":"Avram::Validations","name":"Validations"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":null,"summary":null,"class_methods":[{"id":"param_key-class-method","html_id":"param_key-class-method","name":"param_key","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/delete_operation.cr","line_number":33,"url":null},"def":{"name":"param_key","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"T.name.underscore"}}],"constructors":[],"instance_methods":[{"id":"after_delete(_record:T)-instance-method","html_id":"after_delete(_record:T)-instance-method","name":"after_delete","doc":null,"summary":null,"abstract":false,"args":[{"name":"_record","doc":null,"default_value":"","external_name":"_record","restriction":"T"}],"args_string":"(_record : T)","args_html":"(_record : T)","location":{"filename":"src/avram/delete_operation.cr","line_number":83,"url":null},"def":{"name":"after_delete","args":[{"name":"_record","doc":null,"default_value":"","external_name":"_record","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"before_delete-instance-method","html_id":"before_delete-instance-method","name":"before_delete","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/delete_operation.cr","line_number":81,"url":null},"def":{"name":"before_delete","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"custom_errors-instance-method","html_id":"custom_errors-instance-method","name":"custom_errors","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"custom_errors","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@custom_errors"}},{"id":"delete:Bool-instance-method","html_id":"delete:Bool-instance-method","name":"delete","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","args_html":" : <a href=\"../Bool.html\">Bool</a>","location":{"filename":"src/avram/delete_operation.cr","line_number":37,"url":null},"def":{"name":"delete","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"before_delete\nif valid?\n  result = delete_or_soft_delete(@record)\n  @record = result\n  after_delete(@record)\n  publish_delete_success_event\n  mark_as_deleted\nelse\n  publish_delete_failed_event\n  mark_as_failed\nend\n"}},{"id":"delete!-instance-method","html_id":"delete!-instance-method","name":"delete!","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/delete_operation.cr","line_number":52,"url":null},"def":{"name":"delete!","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if delete\n  @record\nelse\n  raise(Avram::InvalidOperationError.new(operation: self))\nend"}},{"id":"deleted?-instance-method","html_id":"deleted?-instance-method","name":"deleted?","doc":"Returns true if the operation has run and saved the record successfully","summary":"<p>Returns true if the operation has run and saved the record successfully</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/delete_operation.cr","line_number":72,"url":null},"def":{"name":"deleted?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"delete_status == DeleteStatus::Deleted"}},{"id":"mark_as_deleted-instance-method","html_id":"mark_as_deleted-instance-method","name":"mark_as_deleted","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/delete_operation.cr","line_number":66,"url":null},"def":{"name":"mark_as_deleted","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.delete_status = DeleteStatus::Deleted\ntrue\n"}},{"id":"mark_as_failed-instance-method","html_id":"mark_as_failed-instance-method","name":"mark_as_failed","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/delete_operation.cr","line_number":76,"url":null},"def":{"name":"mark_as_failed","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.delete_status = DeleteStatus::DeleteFailed\nfalse\n"}},{"id":"valid?-instance-method","html_id":"valid?-instance-method","name":"valid?","doc":"Returns `true` if all attributes are valid,\nand there's no custom errors","summary":"<p>Returns <code>true</code> if all attributes are valid, and there's no custom errors</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/delete_operation.cr","line_number":62,"url":null},"def":{"name":"valid?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"custom_errors.empty? && attributes.all?(&.valid?)"}}],"macros":[{"id":"param_key(key)-macro","html_id":"param_key(key)-macro","name":"param_key","doc":null,"summary":null,"abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":""}],"args_string":"(key)","location":null,"def":{"name":"param_key","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"      def self.param_key\n        \n{{ key.id.stringify }}\n\n      \nend\n    \n"}}],"types":[{"html_id":"avram/Avram/DeleteOperation/DeleteStatus","path":"Avram/DeleteOperation/DeleteStatus.html","kind":"enum","full_name":"Avram::DeleteOperation::DeleteStatus","name":"DeleteStatus","abstract":false,"superclass":null,"ancestors":[{"html_id":"avram/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"avram/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"avram/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":true,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[{"id":"Deleted","name":"Deleted","value":"0","doc":null,"summary":null},{"id":"DeleteFailed","name":"DeleteFailed","value":"1","doc":null,"summary":null},{"id":"Unperformed","name":"Unperformed","value":"2","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Avram/DeleteOperation","kind":"class","full_name":"Avram::DeleteOperation(T)","name":"DeleteOperation"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"delete_failed?-instance-method","html_id":"delete_failed?-instance-method","name":"delete_failed?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/delete_operation.cr","line_number":20,"url":null},"def":{"name":"delete_failed?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == DeleteFailed"}},{"id":"deleted?-instance-method","html_id":"deleted?-instance-method","name":"deleted?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/delete_operation.cr","line_number":19,"url":null},"def":{"name":"deleted?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Deleted"}},{"id":"unperformed?-instance-method","html_id":"unperformed?-instance-method","name":"unperformed?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/delete_operation.cr","line_number":21,"url":null},"def":{"name":"unperformed?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Unperformed"}}],"macros":[],"types":[]}]},{"html_id":"avram/Avram/DeleteOperationTemplate","path":"Avram/DeleteOperationTemplate.html","kind":"class","full_name":"Avram::DeleteOperationTemplate","name":"DeleteOperationTemplate","abstract":false,"superclass":{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[{"id":"setup(type,columns,*args,**named_args)-macro","html_id":"setup(type,columns,*args,**named_args)-macro","name":"setup","doc":null,"summary":null,"abstract":false,"args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":""},{"name":"columns","doc":null,"default_value":"","external_name":"columns","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(type, columns, *args, **named_args)","location":{"filename":"src/avram/delete_operation_template.cr","line_number":2,"url":null},"def":{"name":"setup","args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":""},{"name":"columns","doc":null,"default_value":"","external_name":"columns","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"named_args","doc":null,"default_value":"","external_name":"named_args","restriction":""},"splat_index":2,"block_arg":null,"visibility":"Public","body":"    def delete_operation_class : ::\n{{ type }}\n::DeleteOperation.class\n      ::\n{{ type }}\n::DeleteOperation\n    \nend\n\n    class ::\n{{ type }}\n::DeleteOperation < Avram::DeleteOperation(\n{{ type }}\n)\n\n      add_column_attributes(\n{{ columns }}\n)\n    \nend\n  \n"}}],"types":[]},{"html_id":"avram/Avram/Events","path":"Avram/Events.html","kind":"module","full_name":"Avram::Events","name":"Events","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"avram/Avram/Events/DeleteFailedEvent","path":"Avram/Events/DeleteFailedEvent.html","kind":"class","full_name":"Avram::Events::DeleteFailedEvent","name":"DeleteFailedEvent","abstract":false,"superclass":{"html_id":"avram/Pulsar/Event","kind":"class","full_name":"Pulsar::Event","name":"Event"},"ancestors":[{"html_id":"avram/Pulsar/Event","kind":"class","full_name":"Pulsar::Event","name":"Event"},{"html_id":"avram/Pulsar/BaseEvent","kind":"class","full_name":"Pulsar::BaseEvent","name":"BaseEvent"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Avram/Events","kind":"module","full_name":"Avram::Events","name":"Events"},"doc":null,"summary":null,"class_methods":[{"id":"logged_events-class-method","html_id":"logged_events-class-method","name":"logged_events","doc":"Used by `Pulsar::SpecHelper` to test for logged events","summary":"<p>Used by <code>Pulsar::SpecHelper</code> to test for logged events</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"logged_events","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@logged_events"}},{"id":"logged_events=(logged_events)-class-method","html_id":"logged_events=(logged_events)-class-method","name":"logged_events=","doc":"Used by `Pulsar::SpecHelper` to test for logged events","summary":"<p>Used by <code>Pulsar::SpecHelper</code> to test for logged events</p>","abstract":false,"args":[{"name":"logged_events","doc":null,"default_value":"","external_name":"logged_events","restriction":""}],"args_string":"(logged_events)","args_html":"(logged_events)","location":null,"def":{"name":"logged_events=","args":[{"name":"logged_events","doc":null,"default_value":"","external_name":"logged_events","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@logged_events = logged_events"}}],"constructors":[{"id":"new(operation_class:String,errors:Hash(Symbol,Array(String)))-class-method","html_id":"new(operation_class:String,errors:Hash(Symbol,Array(String)))-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"operation_class","doc":null,"default_value":"","external_name":"operation_class","restriction":"String"},{"name":"errors","doc":null,"default_value":"","external_name":"errors","restriction":"Hash(Symbol, Array(String))"}],"args_string":"(operation_class : String, errors : Hash(Symbol, Array(String)))","args_html":"(operation_class : <a href=\"../../String.html\">String</a>, errors : Hash(Symbol, <a href=\"../../Array.html\">Array</a>(<a href=\"../../String.html\">String</a>)))","location":{"filename":"src/avram/events/delete_failed_event.cr","line_number":4,"url":null},"def":{"name":"new","args":[{"name":"operation_class","doc":null,"default_value":"","external_name":"operation_class","restriction":"String"},{"name":"errors","doc":null,"default_value":"","external_name":"errors","restriction":"Hash(Symbol, Array(String))"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(operation_class, errors)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"error_messages_as_string-instance-method","html_id":"error_messages_as_string-instance-method","name":"error_messages_as_string","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/events/delete_failed_event.cr","line_number":10,"url":null},"def":{"name":"error_messages_as_string","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"String.build do |msg|\n  errors.each do |key, messages|\n    msg << \"#{key} #{messages.join(\", \")}\"\n  end\nend"}},{"id":"errors:Hash(Symbol,Array(String))-instance-method","html_id":"errors:Hash(Symbol,Array(String))-instance-method","name":"errors","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Hash(Symbol, Array(String))","args_html":" : Hash(Symbol, <a href=\"../../Array.html\">Array</a>(<a href=\"../../String.html\">String</a>))","location":{"filename":"src/avram/events/delete_failed_event.cr","line_number":2,"url":null},"def":{"name":"errors","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@errors"}},{"id":"operation_class:String-instance-method","html_id":"operation_class:String-instance-method","name":"operation_class","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","args_html":" : <a href=\"../../String.html\">String</a>","location":{"filename":"src/avram/events/delete_failed_event.cr","line_number":2,"url":null},"def":{"name":"operation_class","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@operation_class"}},{"id":"started_at:Time-instance-method","html_id":"started_at:Time-instance-method","name":"started_at","doc":"When the event started","summary":"<p>When the event started</p>","abstract":false,"args":[],"args_string":" : Time","args_html":" : <a href=\"../../Time.html\">Time</a>","location":null,"def":{"name":"started_at","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Time","visibility":"Public","body":"@started_at"}}],"macros":[],"types":[]},{"html_id":"avram/Avram/Events/DeleteSuccessEvent","path":"Avram/Events/DeleteSuccessEvent.html","kind":"class","full_name":"Avram::Events::DeleteSuccessEvent","name":"DeleteSuccessEvent","abstract":false,"superclass":{"html_id":"avram/Pulsar/Event","kind":"class","full_name":"Pulsar::Event","name":"Event"},"ancestors":[{"html_id":"avram/Pulsar/Event","kind":"class","full_name":"Pulsar::Event","name":"Event"},{"html_id":"avram/Pulsar/BaseEvent","kind":"class","full_name":"Pulsar::BaseEvent","name":"BaseEvent"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Avram/Events","kind":"module","full_name":"Avram::Events","name":"Events"},"doc":null,"summary":null,"class_methods":[{"id":"logged_events-class-method","html_id":"logged_events-class-method","name":"logged_events","doc":"Used by `Pulsar::SpecHelper` to test for logged events","summary":"<p>Used by <code>Pulsar::SpecHelper</code> to test for logged events</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"logged_events","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@logged_events"}},{"id":"logged_events=(logged_events)-class-method","html_id":"logged_events=(logged_events)-class-method","name":"logged_events=","doc":"Used by `Pulsar::SpecHelper` to test for logged events","summary":"<p>Used by <code>Pulsar::SpecHelper</code> to test for logged events</p>","abstract":false,"args":[{"name":"logged_events","doc":null,"default_value":"","external_name":"logged_events","restriction":""}],"args_string":"(logged_events)","args_html":"(logged_events)","location":null,"def":{"name":"logged_events=","args":[{"name":"logged_events","doc":null,"default_value":"","external_name":"logged_events","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@logged_events = logged_events"}}],"constructors":[{"id":"new(operation_class:String)-class-method","html_id":"new(operation_class:String)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"operation_class","doc":null,"default_value":"","external_name":"operation_class","restriction":"String"}],"args_string":"(operation_class : String)","args_html":"(operation_class : <a href=\"../../String.html\">String</a>)","location":{"filename":"src/avram/events/delete_success_event.cr","line_number":4,"url":null},"def":{"name":"new","args":[{"name":"operation_class","doc":null,"default_value":"","external_name":"operation_class","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(operation_class)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"operation_class:String-instance-method","html_id":"operation_class:String-instance-method","name":"operation_class","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","args_html":" : <a href=\"../../String.html\">String</a>","location":{"filename":"src/avram/events/delete_success_event.cr","line_number":2,"url":null},"def":{"name":"operation_class","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@operation_class"}},{"id":"started_at:Time-instance-method","html_id":"started_at:Time-instance-method","name":"started_at","doc":"When the event started","summary":"<p>When the event started</p>","abstract":false,"args":[],"args_string":" : Time","args_html":" : <a href=\"../../Time.html\">Time</a>","location":null,"def":{"name":"started_at","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Time","visibility":"Public","body":"@started_at"}}],"macros":[],"types":[]},{"html_id":"avram/Avram/Events/FailedQueryEvent","path":"Avram/Events/FailedQueryEvent.html","kind":"class","full_name":"Avram::Events::FailedQueryEvent","name":"FailedQueryEvent","abstract":false,"superclass":{"html_id":"avram/Pulsar/Event","kind":"class","full_name":"Pulsar::Event","name":"Event"},"ancestors":[{"html_id":"avram/Pulsar/Event","kind":"class","full_name":"Pulsar::Event","name":"Event"},{"html_id":"avram/Pulsar/BaseEvent","kind":"class","full_name":"Pulsar::BaseEvent","name":"BaseEvent"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Avram/Events","kind":"module","full_name":"Avram::Events","name":"Events"},"doc":null,"summary":null,"class_methods":[{"id":"logged_events-class-method","html_id":"logged_events-class-method","name":"logged_events","doc":"Used by `Pulsar::SpecHelper` to test for logged events","summary":"<p>Used by <code>Pulsar::SpecHelper</code> to test for logged events</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"logged_events","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@logged_events"}},{"id":"logged_events=(logged_events)-class-method","html_id":"logged_events=(logged_events)-class-method","name":"logged_events=","doc":"Used by `Pulsar::SpecHelper` to test for logged events","summary":"<p>Used by <code>Pulsar::SpecHelper</code> to test for logged events</p>","abstract":false,"args":[{"name":"logged_events","doc":null,"default_value":"","external_name":"logged_events","restriction":""}],"args_string":"(logged_events)","args_html":"(logged_events)","location":null,"def":{"name":"logged_events=","args":[{"name":"logged_events","doc":null,"default_value":"","external_name":"logged_events","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@logged_events = logged_events"}}],"constructors":[{"id":"new(error_message:String,query:String,args:String?,queryable:String?=nil)-class-method","html_id":"new(error_message:String,query:String,args:String?,queryable:String?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"error_message","doc":null,"default_value":"","external_name":"error_message","restriction":"String"},{"name":"query","doc":null,"default_value":"","external_name":"query","restriction":"String"},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"String | ::Nil"},{"name":"queryable","doc":null,"default_value":"nil","external_name":"queryable","restriction":"String | ::Nil"}],"args_string":"(error_message : String, query : String, args : String?, queryable : String? = <span class=\"n\">nil</span>)","args_html":"(error_message : <a href=\"../../String.html\">String</a>, query : <a href=\"../../String.html\">String</a>, args : <a href=\"../../String.html\">String</a>?, queryable : <a href=\"../../String.html\">String</a>? = <span class=\"n\">nil</span>)","location":{"filename":"src/avram/events/failed_query_event.cr","line_number":4,"url":null},"def":{"name":"new","args":[{"name":"error_message","doc":null,"default_value":"","external_name":"error_message","restriction":"String"},{"name":"query","doc":null,"default_value":"","external_name":"query","restriction":"String"},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"String | ::Nil"},{"name":"queryable","doc":null,"default_value":"nil","external_name":"queryable","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(error_message, query, args, queryable)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"args:String?-instance-method","html_id":"args:String?-instance-method","name":"args","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","args_html":" : <a href=\"../../String.html\">String</a>?","location":{"filename":"src/avram/events/failed_query_event.cr","line_number":2,"url":null},"def":{"name":"args","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@args"}},{"id":"error_message:String-instance-method","html_id":"error_message:String-instance-method","name":"error_message","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","args_html":" : <a href=\"../../String.html\">String</a>","location":{"filename":"src/avram/events/failed_query_event.cr","line_number":2,"url":null},"def":{"name":"error_message","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@error_message"}},{"id":"query:String-instance-method","html_id":"query:String-instance-method","name":"query","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","args_html":" : <a href=\"../../String.html\">String</a>","location":{"filename":"src/avram/events/failed_query_event.cr","line_number":2,"url":null},"def":{"name":"query","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@query"}},{"id":"queryable:String?-instance-method","html_id":"queryable:String?-instance-method","name":"queryable","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","args_html":" : <a href=\"../../String.html\">String</a>?","location":{"filename":"src/avram/events/failed_query_event.cr","line_number":2,"url":null},"def":{"name":"queryable","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@queryable"}},{"id":"started_at:Time-instance-method","html_id":"started_at:Time-instance-method","name":"started_at","doc":"When the event started","summary":"<p>When the event started</p>","abstract":false,"args":[],"args_string":" : Time","args_html":" : <a href=\"../../Time.html\">Time</a>","location":null,"def":{"name":"started_at","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Time","visibility":"Public","body":"@started_at"}}],"macros":[],"types":[]},{"html_id":"avram/Avram/Events/QueryEvent","path":"Avram/Events/QueryEvent.html","kind":"class","full_name":"Avram::Events::QueryEvent","name":"QueryEvent","abstract":false,"superclass":{"html_id":"avram/Pulsar/TimedEvent","kind":"class","full_name":"Pulsar::TimedEvent","name":"TimedEvent"},"ancestors":[{"html_id":"avram/Pulsar/TimedEvent","kind":"class","full_name":"Pulsar::TimedEvent","name":"TimedEvent"},{"html_id":"avram/Pulsar/BaseEvent","kind":"class","full_name":"Pulsar::BaseEvent","name":"BaseEvent"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Avram/Events","kind":"module","full_name":"Avram::Events","name":"Events"},"doc":null,"summary":null,"class_methods":[{"id":"logged_events-class-method","html_id":"logged_events-class-method","name":"logged_events","doc":"Used by `Pulsar::SpecHelper` to test for logged events","summary":"<p>Used by <code>Pulsar::SpecHelper</code> to test for logged events</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"logged_events","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@logged_events"}},{"id":"logged_events=(logged_events)-class-method","html_id":"logged_events=(logged_events)-class-method","name":"logged_events=","doc":"Used by `Pulsar::SpecHelper` to test for logged events","summary":"<p>Used by <code>Pulsar::SpecHelper</code> to test for logged events</p>","abstract":false,"args":[{"name":"logged_events","doc":null,"default_value":"","external_name":"logged_events","restriction":""}],"args_string":"(logged_events)","args_html":"(logged_events)","location":null,"def":{"name":"logged_events=","args":[{"name":"logged_events","doc":null,"default_value":"","external_name":"logged_events","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@logged_events = logged_events"}}],"constructors":[{"id":"new(query:String,args:String?,queryable:String?=nil)-class-method","html_id":"new(query:String,args:String?,queryable:String?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"query","doc":null,"default_value":"","external_name":"query","restriction":"String"},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"String | ::Nil"},{"name":"queryable","doc":null,"default_value":"nil","external_name":"queryable","restriction":"String | ::Nil"}],"args_string":"(query : String, args : String?, queryable : String? = <span class=\"n\">nil</span>)","args_html":"(query : <a href=\"../../String.html\">String</a>, args : <a href=\"../../String.html\">String</a>?, queryable : <a href=\"../../String.html\">String</a>? = <span class=\"n\">nil</span>)","location":{"filename":"src/avram/events/query_event.cr","line_number":4,"url":null},"def":{"name":"new","args":[{"name":"query","doc":null,"default_value":"","external_name":"query","restriction":"String"},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"String | ::Nil"},{"name":"queryable","doc":null,"default_value":"nil","external_name":"queryable","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(query, args, queryable)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"args:String?-instance-method","html_id":"args:String?-instance-method","name":"args","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","args_html":" : <a href=\"../../String.html\">String</a>?","location":{"filename":"src/avram/events/query_event.cr","line_number":2,"url":null},"def":{"name":"args","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@args"}},{"id":"query:String-instance-method","html_id":"query:String-instance-method","name":"query","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","args_html":" : <a href=\"../../String.html\">String</a>","location":{"filename":"src/avram/events/query_event.cr","line_number":2,"url":null},"def":{"name":"query","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@query"}},{"id":"queryable:String?-instance-method","html_id":"queryable:String?-instance-method","name":"queryable","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","args_html":" : <a href=\"../../String.html\">String</a>?","location":{"filename":"src/avram/events/query_event.cr","line_number":2,"url":null},"def":{"name":"queryable","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@queryable"}},{"id":"started_at:Time-instance-method","html_id":"started_at:Time-instance-method","name":"started_at","doc":"When the event started","summary":"<p>When the event started</p>","abstract":false,"args":[],"args_string":" : Time","args_html":" : <a href=\"../../Time.html\">Time</a>","location":null,"def":{"name":"started_at","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Time","visibility":"Public","body":"@started_at"}}],"macros":[],"types":[]},{"html_id":"avram/Avram/Events/SaveFailedEvent","path":"Avram/Events/SaveFailedEvent.html","kind":"class","full_name":"Avram::Events::SaveFailedEvent","name":"SaveFailedEvent","abstract":false,"superclass":{"html_id":"avram/Pulsar/Event","kind":"class","full_name":"Pulsar::Event","name":"Event"},"ancestors":[{"html_id":"avram/Pulsar/Event","kind":"class","full_name":"Pulsar::Event","name":"Event"},{"html_id":"avram/Pulsar/BaseEvent","kind":"class","full_name":"Pulsar::BaseEvent","name":"BaseEvent"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Avram/Events","kind":"module","full_name":"Avram::Events","name":"Events"},"doc":null,"summary":null,"class_methods":[{"id":"logged_events-class-method","html_id":"logged_events-class-method","name":"logged_events","doc":"Used by `Pulsar::SpecHelper` to test for logged events","summary":"<p>Used by <code>Pulsar::SpecHelper</code> to test for logged events</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"logged_events","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@logged_events"}},{"id":"logged_events=(logged_events)-class-method","html_id":"logged_events=(logged_events)-class-method","name":"logged_events=","doc":"Used by `Pulsar::SpecHelper` to test for logged events","summary":"<p>Used by <code>Pulsar::SpecHelper</code> to test for logged events</p>","abstract":false,"args":[{"name":"logged_events","doc":null,"default_value":"","external_name":"logged_events","restriction":""}],"args_string":"(logged_events)","args_html":"(logged_events)","location":null,"def":{"name":"logged_events=","args":[{"name":"logged_events","doc":null,"default_value":"","external_name":"logged_events","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@logged_events = logged_events"}}],"constructors":[{"id":"new(operation_class:String,attributes:Array(Avram::GenericAttribute))-class-method","html_id":"new(operation_class:String,attributes:Array(Avram::GenericAttribute))-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"operation_class","doc":null,"default_value":"","external_name":"operation_class","restriction":"String"},{"name":"attributes","doc":null,"default_value":"","external_name":"attributes","restriction":"Array(Avram::GenericAttribute)"}],"args_string":"(operation_class : String, attributes : Array(Avram::GenericAttribute))","args_html":"(operation_class : <a href=\"../../String.html\">String</a>, attributes : <a href=\"../../Array.html\">Array</a>(<a href=\"../../Avram/GenericAttribute.html\">Avram::GenericAttribute</a>))","location":{"filename":"src/avram/events/save_failed_event.cr","line_number":4,"url":null},"def":{"name":"new","args":[{"name":"operation_class","doc":null,"default_value":"","external_name":"operation_class","restriction":"String"},{"name":"attributes","doc":null,"default_value":"","external_name":"attributes","restriction":"Array(Avram::GenericAttribute)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(operation_class, attributes)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"attributes:Array(Avram::GenericAttribute)-instance-method","html_id":"attributes:Array(Avram::GenericAttribute)-instance-method","name":"attributes","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(Avram::GenericAttribute)","args_html":" : <a href=\"../../Array.html\">Array</a>(<a href=\"../../Avram/GenericAttribute.html\">Avram::GenericAttribute</a>)","location":{"filename":"src/avram/events/save_failed_event.cr","line_number":2,"url":null},"def":{"name":"attributes","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@attributes"}},{"id":"error_messages_as_string-instance-method","html_id":"error_messages_as_string-instance-method","name":"error_messages_as_string","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/events/save_failed_event.cr","line_number":14,"url":null},"def":{"name":"error_messages_as_string","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"invalid_attributes.map do |attribute|\n  \"#{attribute.name} #{attribute.errors.join(\", \")}\"\nend.join(\". \")"}},{"id":"invalid_attributes-instance-method","html_id":"invalid_attributes-instance-method","name":"invalid_attributes","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/events/save_failed_event.cr","line_number":10,"url":null},"def":{"name":"invalid_attributes","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"attributes.reject(&.valid?)"}},{"id":"operation_class:String-instance-method","html_id":"operation_class:String-instance-method","name":"operation_class","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","args_html":" : <a href=\"../../String.html\">String</a>","location":{"filename":"src/avram/events/save_failed_event.cr","line_number":2,"url":null},"def":{"name":"operation_class","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@operation_class"}},{"id":"started_at:Time-instance-method","html_id":"started_at:Time-instance-method","name":"started_at","doc":"When the event started","summary":"<p>When the event started</p>","abstract":false,"args":[],"args_string":" : Time","args_html":" : <a href=\"../../Time.html\">Time</a>","location":null,"def":{"name":"started_at","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Time","visibility":"Public","body":"@started_at"}}],"macros":[],"types":[]},{"html_id":"avram/Avram/Events/SaveSuccessEvent","path":"Avram/Events/SaveSuccessEvent.html","kind":"class","full_name":"Avram::Events::SaveSuccessEvent","name":"SaveSuccessEvent","abstract":false,"superclass":{"html_id":"avram/Pulsar/Event","kind":"class","full_name":"Pulsar::Event","name":"Event"},"ancestors":[{"html_id":"avram/Pulsar/Event","kind":"class","full_name":"Pulsar::Event","name":"Event"},{"html_id":"avram/Pulsar/BaseEvent","kind":"class","full_name":"Pulsar::BaseEvent","name":"BaseEvent"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Avram/Events","kind":"module","full_name":"Avram::Events","name":"Events"},"doc":null,"summary":null,"class_methods":[{"id":"logged_events-class-method","html_id":"logged_events-class-method","name":"logged_events","doc":"Used by `Pulsar::SpecHelper` to test for logged events","summary":"<p>Used by <code>Pulsar::SpecHelper</code> to test for logged events</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"logged_events","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@logged_events"}},{"id":"logged_events=(logged_events)-class-method","html_id":"logged_events=(logged_events)-class-method","name":"logged_events=","doc":"Used by `Pulsar::SpecHelper` to test for logged events","summary":"<p>Used by <code>Pulsar::SpecHelper</code> to test for logged events</p>","abstract":false,"args":[{"name":"logged_events","doc":null,"default_value":"","external_name":"logged_events","restriction":""}],"args_string":"(logged_events)","args_html":"(logged_events)","location":null,"def":{"name":"logged_events=","args":[{"name":"logged_events","doc":null,"default_value":"","external_name":"logged_events","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@logged_events = logged_events"}}],"constructors":[{"id":"new(operation_class:String,attributes:Array(Avram::GenericAttribute))-class-method","html_id":"new(operation_class:String,attributes:Array(Avram::GenericAttribute))-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"operation_class","doc":null,"default_value":"","external_name":"operation_class","restriction":"String"},{"name":"attributes","doc":null,"default_value":"","external_name":"attributes","restriction":"Array(Avram::GenericAttribute)"}],"args_string":"(operation_class : String, attributes : Array(Avram::GenericAttribute))","args_html":"(operation_class : <a href=\"../../String.html\">String</a>, attributes : <a href=\"../../Array.html\">Array</a>(<a href=\"../../Avram/GenericAttribute.html\">Avram::GenericAttribute</a>))","location":{"filename":"src/avram/events/save_success_event.cr","line_number":4,"url":null},"def":{"name":"new","args":[{"name":"operation_class","doc":null,"default_value":"","external_name":"operation_class","restriction":"String"},{"name":"attributes","doc":null,"default_value":"","external_name":"attributes","restriction":"Array(Avram::GenericAttribute)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(operation_class, attributes)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"attributes:Array(Avram::GenericAttribute)-instance-method","html_id":"attributes:Array(Avram::GenericAttribute)-instance-method","name":"attributes","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(Avram::GenericAttribute)","args_html":" : <a href=\"../../Array.html\">Array</a>(<a href=\"../../Avram/GenericAttribute.html\">Avram::GenericAttribute</a>)","location":{"filename":"src/avram/events/save_success_event.cr","line_number":2,"url":null},"def":{"name":"attributes","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@attributes"}},{"id":"operation_class:String-instance-method","html_id":"operation_class:String-instance-method","name":"operation_class","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","args_html":" : <a href=\"../../String.html\">String</a>","location":{"filename":"src/avram/events/save_success_event.cr","line_number":2,"url":null},"def":{"name":"operation_class","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@operation_class"}},{"id":"started_at:Time-instance-method","html_id":"started_at:Time-instance-method","name":"started_at","doc":"When the event started","summary":"<p>When the event started</p>","abstract":false,"args":[],"args_string":" : Time","args_html":" : <a href=\"../../Time.html\">Time</a>","location":null,"def":{"name":"started_at","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Time","visibility":"Public","body":"@started_at"}}],"macros":[],"types":[]}]},{"html_id":"avram/Avram/Factory","path":"Avram/Factory.html","kind":"class","full_name":"Avram::Factory","name":"Factory","abstract":true,"superclass":{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[{"id":"SEQUENCES","name":"SEQUENCES","value":"{} of String => Int32","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":null,"summary":null,"class_methods":[{"id":"build_attributes(&)-class-method","html_id":"build_attributes(&)-class-method","name":"build_attributes","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"(&)","args_html":"(&)","location":{"filename":"src/avram/factory.cr","line_number":40,"url":null},"def":{"name":"build_attributes","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"(yield new).attributes"}},{"id":"build_attributes-class-method","html_id":"build_attributes-class-method","name":"build_attributes","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/factory.cr","line_number":44,"url":null},"def":{"name":"build_attributes","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"new.attributes"}},{"id":"create-class-method","html_id":"create-class-method","name":"create","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/factory.cr","line_number":48,"url":null},"def":{"name":"create","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"new.create"}},{"id":"create(&)-class-method","html_id":"create(&)-class-method","name":"create","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"(&)","args_html":"(&)","location":{"filename":"src/avram/factory.cr","line_number":52,"url":null},"def":{"name":"create","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"(yield new).create"}},{"id":"create_pair-class-method","html_id":"create_pair-class-method","name":"create_pair","doc":"Returns an array with 2 instances of the model from the Factory.\n\nUsage:\n\n```\ntags = TagFactory.create_pair\ntypeof(tags) # => Array(Tag)\ntags.size    # => 2\n```","summary":"<p>Returns an array with 2 instances of the model from the Factory.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/factory.cr","line_number":69,"url":null},"def":{"name":"create_pair","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"create_pair do |factory|\n  factory\nend"}},{"id":"create_pair(&)-class-method","html_id":"create_pair(&)-class-method","name":"create_pair","doc":"Similar to `create_pair`, but accepts a block which yields the factory instance.\n\nBoth factories receive the same argument values.\n\nUsage:\n\n```\nTagFactory.create_pair do |factory|\n  # set both factories name to \"test\"\n  factory.name(\"test\")\nend\n```","summary":"<p>Similar to <code><a href=\"../Avram/Factory.html#create_pair-class-method\">.create_pair</a></code>, but accepts a block which yields the factory instance.</p>","abstract":false,"args":[],"args_string":"(&)","args_html":"(&)","location":{"filename":"src/avram/factory.cr","line_number":85,"url":null},"def":{"name":"create_pair","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"[1, 2].map do |n|\n  self.create do |factory|\n    yield factory\n  end\nend"}}],"constructors":[],"instance_methods":[{"id":"create-instance-method","html_id":"create-instance-method","name":"create","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/factory.cr","line_number":56,"url":null},"def":{"name":"create","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"operation.save!"}},{"id":"operation-instance-method","html_id":"operation-instance-method","name":"operation","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/factory.cr","line_number":8,"url":null},"def":{"name":"operation","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@operation"}},{"id":"sequence(value:String):String-instance-method","html_id":"sequence(value:String):String-instance-method","name":"sequence","doc":"Returns a value with a number to use for unique values.\n\nUsage:\n\n```\nclass UserFactory < Avram::Factory\n  def initialize\n    username sequence(\"username\")            # => username-1, username-2, etc.\n    email \"#{sequence(\"email\")}@example.com\" # => email-1@example.com, email-2@example.com, etc.\n  end\nend\n```","summary":"<p>Returns a value with a number to use for unique values.</p>","abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"String"}],"args_string":"(value : String) : String","args_html":"(value : <a href=\"../String.html\">String</a>) : <a href=\"../String.html\">String</a>","location":{"filename":"src/avram/factory.cr","line_number":103,"url":null},"def":{"name":"sequence","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"__temp_56 = value\n__temp_57 = SEQUENCES\n__temp_57[__temp_56]? || (__temp_57[__temp_56] = 0)\n__temp_58 = value\n__temp_59 = SEQUENCES\n__temp_59[__temp_58] = __temp_59[__temp_58] + 1\n\"#{value}-#{SEQUENCES[value]}\"\n"}}],"macros":[{"id":"setup_attribute_shortcuts(operation)-macro","html_id":"setup_attribute_shortcuts(operation)-macro","name":"setup_attribute_shortcuts","doc":null,"summary":null,"abstract":false,"args":[{"name":"operation","doc":null,"default_value":"","external_name":"operation","restriction":""}],"args_string":"(operation)","location":{"filename":"src/avram/factory.cr","line_number":21,"url":null},"def":{"name":"setup_attribute_shortcuts","args":[{"name":"operation","doc":null,"default_value":"","external_name":"operation","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    \n{% for attribute in operation.resolve.constant(:COLUMN_ATTRIBUTES) %}\n      def {{ attribute[:name] }}(value : {{ attribute[:type] }}{% if attribute[:nilable] %}?{% end %})\n        operation.{{ attribute[:name] }}.value = value\n        self\n      end\n    {% end %}\n\n  \n"}},{"id":"setup_attributes(operation)-macro","html_id":"setup_attributes(operation)-macro","name":"setup_attributes","doc":null,"summary":null,"abstract":false,"args":[{"name":"operation","doc":null,"default_value":"","external_name":"operation","restriction":""}],"args_string":"(operation)","location":{"filename":"src/avram/factory.cr","line_number":30,"url":null},"def":{"name":"setup_attributes","args":[{"name":"operation","doc":null,"default_value":"","external_name":"operation","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    def attributes\n      \n{\n        \n{% for attribute in operation.resolve.constant(:COLUMN_ATTRIBUTES) %}\n          {{ attribute[:name] }}: operation.{{ attribute[:name] }}.value,\n        {% end %}\n\n      }\n    \nend\n  \n"}}],"types":[]},{"html_id":"avram/Avram/FailedMigration","path":"Avram/FailedMigration.html","kind":"class","full_name":"Avram::FailedMigration","name":"FailedMigration","abstract":false,"superclass":{"html_id":"avram/Avram/AvramError","kind":"class","full_name":"Avram::AvramError","name":"AvramError"},"ancestors":[{"html_id":"avram/Avram/AvramError","kind":"class","full_name":"Avram::AvramError","name":"AvramError"},{"html_id":"avram/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(migration:String,statements:Array(String),cause:Exception)-class-method","html_id":"new(migration:String,statements:Array(String),cause:Exception)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"migration","doc":null,"default_value":"","external_name":"migration","restriction":"String"},{"name":"statements","doc":null,"default_value":"","external_name":"statements","restriction":"Array(String)"},{"name":"cause","doc":null,"default_value":"","external_name":"cause","restriction":"Exception"}],"args_string":"(migration : String, statements : Array(String), cause : Exception)","args_html":"(migration : <a href=\"../String.html\">String</a>, statements : <a href=\"../Array.html\">Array</a>(<a href=\"../String.html\">String</a>), cause : Exception)","location":{"filename":"src/avram/errors.cr","line_number":151,"url":null},"def":{"name":"new","args":[{"name":"migration","doc":null,"default_value":"","external_name":"migration","restriction":"String"},{"name":"statements","doc":null,"default_value":"","external_name":"statements","restriction":"Array(String)"},{"name":"cause","doc":null,"default_value":"","external_name":"cause","restriction":"Exception"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(migration, statements, cause)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[],"macros":[],"types":[]},{"html_id":"avram/Avram/FailedOperation","path":"Avram/FailedOperation.html","kind":"class","full_name":"Avram::FailedOperation","name":"FailedOperation","abstract":false,"superclass":{"html_id":"avram/Avram/AvramError","kind":"class","full_name":"Avram::AvramError","name":"AvramError"},"ancestors":[{"html_id":"avram/Avram/AvramError","kind":"class","full_name":"Avram::AvramError","name":"AvramError"},{"html_id":"avram/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":"Used when `Avram::Operation` fails.","summary":"<p>Used when <code><a href=\"../Avram/Operation.html\">Avram::Operation</a></code> fails.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"avram/Avram/GenericAttribute","path":"Avram/GenericAttribute.html","kind":"class","full_name":"Avram::GenericAttribute","name":"GenericAttribute","abstract":false,"superclass":{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":"A generic version of `Avram::Attribute` that is used for reporting and metrics.\n\nThis is a data only version of an `Avram::Atribute`. It is purely for\nretrieving and reporting on data. For example, `Avram::GenericAttribute` is\nused by `Avram::Events::SaveFailedEvent` so that subscribers can\nget information about attributes that failed to save.","summary":"<p>A generic version of <code><a href=\"../Avram/Attribute.html\">Avram::Attribute</a></code> that is used for reporting and metrics.</p>","class_methods":[],"constructors":[{"id":"new(name:Symbol,param:String?,original_value:String?,value:String?,param_key:String,errors:Array(String))-class-method","html_id":"new(name:Symbol,param:String?,original_value:String?,value:String?,param_key:String,errors:Array(String))-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"Symbol"},{"name":"param","doc":null,"default_value":"","external_name":"param","restriction":"String | ::Nil"},{"name":"original_value","doc":null,"default_value":"","external_name":"original_value","restriction":"String | ::Nil"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"String | ::Nil"},{"name":"param_key","doc":null,"default_value":"","external_name":"param_key","restriction":"String"},{"name":"errors","doc":null,"default_value":"","external_name":"errors","restriction":"Array(String)"}],"args_string":"(name : Symbol, param : String?, original_value : String?, value : String?, param_key : String, errors : Array(String))","args_html":"(name : Symbol, param : <a href=\"../String.html\">String</a>?, original_value : <a href=\"../String.html\">String</a>?, value : <a href=\"../String.html\">String</a>?, param_key : <a href=\"../String.html\">String</a>, errors : <a href=\"../Array.html\">Array</a>(<a href=\"../String.html\">String</a>))","location":{"filename":"src/avram/generic_attribute.cr","line_number":10,"url":null},"def":{"name":"new","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"Symbol"},{"name":"param","doc":null,"default_value":"","external_name":"param","restriction":"String | ::Nil"},{"name":"original_value","doc":null,"default_value":"","external_name":"original_value","restriction":"String | ::Nil"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"String | ::Nil"},{"name":"param_key","doc":null,"default_value":"","external_name":"param_key","restriction":"String"},{"name":"errors","doc":null,"default_value":"","external_name":"errors","restriction":"Array(String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(name, param, original_value, value, param_key, errors)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"errors:Array(String)-instance-method","html_id":"errors:Array(String)-instance-method","name":"errors","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(String)","args_html":" : <a href=\"../Array.html\">Array</a>(<a href=\"../String.html\">String</a>)","location":{"filename":"src/avram/generic_attribute.cr","line_number":8,"url":null},"def":{"name":"errors","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@errors"}},{"id":"name:Symbol-instance-method","html_id":"name:Symbol-instance-method","name":"name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Symbol","args_html":" : Symbol","location":{"filename":"src/avram/generic_attribute.cr","line_number":8,"url":null},"def":{"name":"name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@name"}},{"id":"original_value:String?-instance-method","html_id":"original_value:String?-instance-method","name":"original_value","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","args_html":" : <a href=\"../String.html\">String</a>?","location":{"filename":"src/avram/generic_attribute.cr","line_number":8,"url":null},"def":{"name":"original_value","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@original_value"}},{"id":"param:String?-instance-method","html_id":"param:String?-instance-method","name":"param","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","args_html":" : <a href=\"../String.html\">String</a>?","location":{"filename":"src/avram/generic_attribute.cr","line_number":8,"url":null},"def":{"name":"param","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@param"}},{"id":"param_key:String-instance-method","html_id":"param_key:String-instance-method","name":"param_key","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","args_html":" : <a href=\"../String.html\">String</a>","location":{"filename":"src/avram/generic_attribute.cr","line_number":8,"url":null},"def":{"name":"param_key","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@param_key"}},{"id":"valid?-instance-method","html_id":"valid?-instance-method","name":"valid?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/generic_attribute.cr","line_number":20,"url":null},"def":{"name":"valid?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"errors.empty?"}},{"id":"value:String?-instance-method","html_id":"value:String?-instance-method","name":"value","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","args_html":" : <a href=\"../String.html\">String</a>?","location":{"filename":"src/avram/generic_attribute.cr","line_number":8,"url":null},"def":{"name":"value","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@value"}}],"macros":[],"types":[]},{"html_id":"avram/Avram/HabitatSettings","path":"Avram/HabitatSettings.html","kind":"class","full_name":"Avram::HabitatSettings","name":"HabitatSettings","abstract":false,"superclass":{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":null,"summary":null,"class_methods":[{"id":"database_to_migrate-class-method","html_id":"database_to_migrate-class-method","name":"database_to_migrate","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"database_to_migrate","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@database_to_migrate.not_nil!"}},{"id":"database_to_migrate=(value:Avram::Database.class)-class-method","html_id":"database_to_migrate=(value:Avram::Database.class)-class-method","name":"database_to_migrate=","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Avram::Database.class"}],"args_string":"(value : <span class=\"t\">Avram</span><span class=\"t\">::</span><span class=\"t\">Database</span>.<span class=\"k\">class</span>)","args_html":"(value : <span class=\"t\">Avram</span><span class=\"t\">::</span><span class=\"t\">Database</span>.<span class=\"k\">class</span>)","location":null,"def":{"name":"database_to_migrate=","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Avram::Database.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@database_to_migrate = value"}},{"id":"database_to_migrate?-class-method","html_id":"database_to_migrate?-class-method","name":"database_to_migrate?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"database_to_migrate?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@database_to_migrate"}},{"id":"lazy_load_enabled-class-method","html_id":"lazy_load_enabled-class-method","name":"lazy_load_enabled","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"lazy_load_enabled","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@lazy_load_enabled.not_nil!"}},{"id":"lazy_load_enabled=(value:Bool)-class-method","html_id":"lazy_load_enabled=(value:Bool)-class-method","name":"lazy_load_enabled=","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Bool"}],"args_string":"(value : Bool)","args_html":"(value : <a href=\"../Bool.html\">Bool</a>)","location":null,"def":{"name":"lazy_load_enabled=","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@lazy_load_enabled = value"}},{"id":"lazy_load_enabled?-class-method","html_id":"lazy_load_enabled?-class-method","name":"lazy_load_enabled?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"lazy_load_enabled?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@lazy_load_enabled"}},{"id":"time_formats-class-method","html_id":"time_formats-class-method","name":"time_formats","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"time_formats","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@time_formats.not_nil!"}},{"id":"time_formats=(value:Array(String))-class-method","html_id":"time_formats=(value:Array(String))-class-method","name":"time_formats=","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Array(String)"}],"args_string":"(value : Array(String))","args_html":"(value : <a href=\"../Array.html\">Array</a>(<a href=\"../String.html\">String</a>))","location":null,"def":{"name":"time_formats=","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Array(String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@time_formats = value"}},{"id":"time_formats?-class-method","html_id":"time_formats?-class-method","name":"time_formats?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"time_formats?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@time_formats"}},{"id":"to_h-class-method","html_id":"to_h-class-method","name":"to_h","doc":"Generates a hash using the provided values","summary":"<p>Generates a hash using the provided values</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_h","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"{\"lazy_load_enabled\" => lazy_load_enabled, \"database_to_migrate\" => database_to_migrate, \"time_formats\" => time_formats}"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"avram/Avram/ImpossibleValidation","path":"Avram/ImpossibleValidation.html","kind":"class","full_name":"Avram::ImpossibleValidation","name":"ImpossibleValidation","abstract":false,"superclass":{"html_id":"avram/Avram/AvramError","kind":"class","full_name":"Avram::AvramError","name":"AvramError"},"ancestors":[{"html_id":"avram/Avram/AvramError","kind":"class","full_name":"Avram::AvramError","name":"AvramError"},{"html_id":"avram/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":"Raised when a validation is expecting an impossible constraint","summary":"<p>Raised when a validation is expecting an impossible constraint</p>","class_methods":[],"constructors":[{"id":"new(attribute:Symbol,message=&quot;animpossiblevalidation&quot;)-class-method","html_id":"new(attribute:Symbol,message=&quot;animpossiblevalidation&quot;)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"attribute","doc":null,"default_value":"","external_name":"attribute","restriction":"Symbol"},{"name":"message","doc":null,"default_value":"\"an impossible validation\"","external_name":"message","restriction":""}],"args_string":"(attribute : Symbol, message = <span class=\"s\">&quot;an impossible validation&quot;</span>)","args_html":"(attribute : Symbol, message = <span class=\"s\">&quot;an impossible validation&quot;</span>)","location":{"filename":"src/avram/errors.cr","line_number":35,"url":null},"def":{"name":"new","args":[{"name":"attribute","doc":null,"default_value":"","external_name":"attribute","restriction":"Symbol"},{"name":"message","doc":null,"default_value":"\"an impossible validation\"","external_name":"message","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(attribute, message)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[],"macros":[],"types":[]},{"html_id":"avram/Avram/InheritColumnAttributes","path":"Avram/InheritColumnAttributes.html","kind":"module","full_name":"Avram::InheritColumnAttributes","name":"InheritColumnAttributes","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"avram/Avram/DeleteOperation","kind":"class","full_name":"Avram::DeleteOperation(T)","name":"DeleteOperation"},{"html_id":"avram/Avram/SaveOperation","kind":"class","full_name":"Avram::SaveOperation(T)","name":"SaveOperation"}],"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[{"id":"inherit_column_attributes-macro","html_id":"inherit_column_attributes-macro","name":"inherit_column_attributes","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","location":{"filename":"src/avram/inherit_column_attributes.cr","line_number":8,"url":null},"def":{"name":"inherit_column_attributes","args":[],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    \n\\{% if\n !@type.constant(:COLUMN_ATTRIBUTES) %}\n      COLUMN_ATTRIBUTES = [] of Nil\n    \n\\{% end\n %}\n\n    \n\\{% if\n !@type.ancestors.first.abstract? %}\n      \n\\{% for\n attribute in @type.ancestors.first.constant :COLUMN_ATTRIBUTES %}\n        \n\\{% \nCOLUMN_ATTRIBUTES << attribute %}\n      \n\\{% end\n %}\n    \n\\{% end\n %}\n\n    macro inherited\n      inherit_column_attributes\n    \nend\n  \n"}}],"types":[]},{"html_id":"avram/Avram/Insert","path":"Avram/Insert.html","kind":"class","full_name":"Avram::Insert","name":"Insert","abstract":false,"superclass":{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(table:Symbol,params:Params,column_names:Array(Symbol)=[]ofSymbol)-class-method","html_id":"new(table:Symbol,params:Params,column_names:Array(Symbol)=[]ofSymbol)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"table","doc":null,"default_value":"","external_name":"table","restriction":"Symbol"},{"name":"params","doc":null,"default_value":"","external_name":"params","restriction":"Params"},{"name":"column_names","doc":null,"default_value":"[] of Symbol","external_name":"column_names","restriction":"Array(Symbol)"}],"args_string":"(table : Symbol, params : Params, column_names : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>)","args_html":"(table : Symbol, params : <a href=\"../Avram/Insert/Params.html\">Params</a>, column_names : <a href=\"../Array.html\">Array</a>(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>)","location":{"filename":"src/avram/insert.cr","line_number":4,"url":null},"def":{"name":"new","args":[{"name":"table","doc":null,"default_value":"","external_name":"table","restriction":"Symbol"},{"name":"params","doc":null,"default_value":"","external_name":"params","restriction":"Params"},{"name":"column_names","doc":null,"default_value":"[] of Symbol","external_name":"column_names","restriction":"Array(Symbol)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(table, params, column_names)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"args-instance-method","html_id":"args-instance-method","name":"args","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/insert.cr","line_number":21,"url":null},"def":{"name":"args","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@params.values"}},{"id":"statement-instance-method","html_id":"statement-instance-method","name":"statement","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/insert.cr","line_number":7,"url":null},"def":{"name":"statement","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"insert into #{@table}(#{fields}) values(#{values_placeholders}) returning #{returning}\""}}],"macros":[],"types":[{"html_id":"avram/Avram/Insert/Params","path":"Avram/Insert/Params.html","kind":"alias","full_name":"Avram::Insert::Params","name":"Params","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":true,"aliased":"(Hash(Symbol, Nil) | Hash(Symbol, String | Nil) | Hash(Symbol, String))","aliased_html":"Hash(Symbol, <a href=\"../../Nil.html\">Nil</a>) | Hash(Symbol, <a href=\"../../String.html\">String</a>?) | Hash(Symbol, <a href=\"../../String.html\">String</a>)","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Avram/Insert","kind":"class","full_name":"Avram::Insert","name":"Insert"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]},{"html_id":"avram/Avram/InvalidDatabaseNameError","path":"Avram/InvalidDatabaseNameError.html","kind":"class","full_name":"Avram::InvalidDatabaseNameError","name":"InvalidDatabaseNameError","abstract":false,"superclass":{"html_id":"avram/Avram/AvramError","kind":"class","full_name":"Avram::AvramError","name":"AvramError"},"ancestors":[{"html_id":"avram/Avram/AvramError","kind":"class","full_name":"Avram::AvramError","name":"AvramError"},{"html_id":"avram/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"avram/Avram/InvalidOperationError","path":"Avram/InvalidOperationError.html","kind":"class","full_name":"Avram::InvalidOperationError","name":"InvalidOperationError","abstract":false,"superclass":{"html_id":"avram/Avram/AvramError","kind":"class","full_name":"Avram::AvramError","name":"AvramError"},"ancestors":[{"html_id":"avram/Avram/AvramError","kind":"class","full_name":"Avram::AvramError","name":"AvramError"},{"html_id":"avram/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":"Raised when using the create!, update!, or destroy! methods on an operation when it does not have the proper attributes","summary":"<p>Raised when using the create!, update!, or destroy! methods on an operation when it does not have the proper attributes</p>","class_methods":[],"constructors":[{"id":"new(operation)-class-method","html_id":"new(operation)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"operation","doc":null,"default_value":"","external_name":"operation","restriction":""}],"args_string":"(operation)","args_html":"(operation)","location":{"filename":"src/avram/errors.cr","line_number":44,"url":null},"def":{"name":"new","args":[{"name":"operation","doc":null,"default_value":"","external_name":"operation","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(operation)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"errors:Hash(Symbol,Array(String))-instance-method","html_id":"errors:Hash(Symbol,Array(String))-instance-method","name":"errors","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Hash(Symbol, Array(String))","args_html":" : Hash(Symbol, <a href=\"../Array.html\">Array</a>(<a href=\"../String.html\">String</a>))","location":{"filename":"src/avram/errors.cr","line_number":42,"url":null},"def":{"name":"errors","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Hash(Symbol, Array(String))","visibility":"Public","body":"@errors"}},{"id":"save_operation_errors-instance-method","html_id":"save_operation_errors-instance-method","name":"save_operation_errors","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/errors.cr","line_number":57,"url":null},"def":{"name":"save_operation_errors","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"{% raise(\"Avram::InvalidSaveOperationError#save_operation_errors has been renamed to 'errors'\") %}"}}],"macros":[],"types":[]},{"html_id":"avram/Avram/InvalidQueryError","path":"Avram/InvalidQueryError.html","kind":"class","full_name":"Avram::InvalidQueryError","name":"InvalidQueryError","abstract":false,"superclass":{"html_id":"avram/Avram/AvramError","kind":"class","full_name":"Avram::AvramError","name":"AvramError"},"ancestors":[{"html_id":"avram/Avram/AvramError","kind":"class","full_name":"Avram::AvramError","name":"AvramError"},{"html_id":"avram/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"avram/Avram/InvalidSaveOperationError","path":"Avram/InvalidSaveOperationError.html","kind":"class","full_name":"Avram::InvalidSaveOperationError","name":"InvalidSaveOperationError","abstract":false,"superclass":{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(*args,**named_args)-class-method","html_id":"new(*args,**named_args)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **named_args)","args_html":"(*args, **named_args)","location":{"filename":"src/avram/errors.cr","line_number":63,"url":null},"def":{"name":"new","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"named_args","doc":null,"default_value":"","external_name":"named_args","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(*args, **named_args)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[],"macros":[],"types":[]},{"html_id":"avram/Avram/Join","path":"Avram/Join.html","kind":"module","full_name":"Avram::Join","name":"Join","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"avram/Avram/Join/Full","path":"Avram/Join/Full.html","kind":"class","full_name":"Avram::Join::Full","name":"Full","abstract":false,"superclass":{"html_id":"avram/Avram/Join/SqlClause","kind":"class","full_name":"Avram::Join::SqlClause","name":"SqlClause"},"ancestors":[{"html_id":"avram/Avram/Join/SqlClause","kind":"class","full_name":"Avram::Join::SqlClause","name":"SqlClause"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Avram/Join","kind":"module","full_name":"Avram::Join","name":"Join"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"join_type:String-instance-method","html_id":"join_type:String-instance-method","name":"join_type","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","args_html":" : <a href=\"../../String.html\">String</a>","location":{"filename":"src/avram/join.cr","line_number":63,"url":null},"def":{"name":"join_type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"\"FULL\""}}],"macros":[],"types":[]},{"html_id":"avram/Avram/Join/Inner","path":"Avram/Join/Inner.html","kind":"class","full_name":"Avram::Join::Inner","name":"Inner","abstract":false,"superclass":{"html_id":"avram/Avram/Join/SqlClause","kind":"class","full_name":"Avram::Join::SqlClause","name":"SqlClause"},"ancestors":[{"html_id":"avram/Avram/Join/SqlClause","kind":"class","full_name":"Avram::Join::SqlClause","name":"SqlClause"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Avram/Join","kind":"module","full_name":"Avram::Join","name":"Join"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"join_type:String-instance-method","html_id":"join_type:String-instance-method","name":"join_type","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","args_html":" : <a href=\"../../String.html\">String</a>","location":{"filename":"src/avram/join.cr","line_number":45,"url":null},"def":{"name":"join_type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"\"INNER\""}}],"macros":[],"types":[]},{"html_id":"avram/Avram/Join/Left","path":"Avram/Join/Left.html","kind":"class","full_name":"Avram::Join::Left","name":"Left","abstract":false,"superclass":{"html_id":"avram/Avram/Join/SqlClause","kind":"class","full_name":"Avram::Join::SqlClause","name":"SqlClause"},"ancestors":[{"html_id":"avram/Avram/Join/SqlClause","kind":"class","full_name":"Avram::Join::SqlClause","name":"SqlClause"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Avram/Join","kind":"module","full_name":"Avram::Join","name":"Join"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"join_type:String-instance-method","html_id":"join_type:String-instance-method","name":"join_type","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","args_html":" : <a href=\"../../String.html\">String</a>","location":{"filename":"src/avram/join.cr","line_number":51,"url":null},"def":{"name":"join_type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"\"LEFT\""}}],"macros":[],"types":[]},{"html_id":"avram/Avram/Join/Right","path":"Avram/Join/Right.html","kind":"class","full_name":"Avram::Join::Right","name":"Right","abstract":false,"superclass":{"html_id":"avram/Avram/Join/SqlClause","kind":"class","full_name":"Avram::Join::SqlClause","name":"SqlClause"},"ancestors":[{"html_id":"avram/Avram/Join/SqlClause","kind":"class","full_name":"Avram::Join::SqlClause","name":"SqlClause"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Avram/Join","kind":"module","full_name":"Avram::Join","name":"Join"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"join_type:String-instance-method","html_id":"join_type:String-instance-method","name":"join_type","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","args_html":" : <a href=\"../../String.html\">String</a>","location":{"filename":"src/avram/join.cr","line_number":57,"url":null},"def":{"name":"join_type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"\"RIGHT\""}}],"macros":[],"types":[]},{"html_id":"avram/Avram/Join/SqlClause","path":"Avram/Join/SqlClause.html","kind":"class","full_name":"Avram::Join::SqlClause","name":"SqlClause","abstract":true,"superclass":{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"avram/Avram/Join/Full","kind":"class","full_name":"Avram::Join::Full","name":"Full"},{"html_id":"avram/Avram/Join/Inner","kind":"class","full_name":"Avram::Join::Inner","name":"Inner"},{"html_id":"avram/Avram/Join/Left","kind":"class","full_name":"Avram::Join::Left","name":"Left"},{"html_id":"avram/Avram/Join/Right","kind":"class","full_name":"Avram::Join::Right","name":"Right"}],"including_types":[],"namespace":{"html_id":"avram/Avram/Join","kind":"module","full_name":"Avram::Join","name":"Join"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(from:Symbol,to:Symbol,primary_key:Symbol?=nil,foreign_key:Symbol?=nil,comparison:String?=&quot;=&quot;,using:Array(Symbol)=[]ofSymbol)-class-method","html_id":"new(from:Symbol,to:Symbol,primary_key:Symbol?=nil,foreign_key:Symbol?=nil,comparison:String?=&quot;=&quot;,using:Array(Symbol)=[]ofSymbol)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"from","doc":null,"default_value":"","external_name":"from","restriction":"Symbol"},{"name":"to","doc":null,"default_value":"","external_name":"to","restriction":"Symbol"},{"name":"primary_key","doc":null,"default_value":"nil","external_name":"primary_key","restriction":"Symbol | ::Nil"},{"name":"foreign_key","doc":null,"default_value":"nil","external_name":"foreign_key","restriction":"Symbol | ::Nil"},{"name":"comparison","doc":null,"default_value":"\"=\"","external_name":"comparison","restriction":"String | ::Nil"},{"name":"using","doc":null,"default_value":"[] of Symbol","external_name":"using","restriction":"Array(Symbol)"}],"args_string":"(from : Symbol, to : Symbol, primary_key : Symbol? = <span class=\"n\">nil</span>, foreign_key : Symbol? = <span class=\"n\">nil</span>, comparison : String? = <span class=\"s\">&quot;=&quot;</span>, using : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>)","args_html":"(from : Symbol, to : Symbol, primary_key : Symbol? = <span class=\"n\">nil</span>, foreign_key : Symbol? = <span class=\"n\">nil</span>, comparison : <a href=\"../../String.html\">String</a>? = <span class=\"s\">&quot;=&quot;</span>, using : <a href=\"../../Array.html\">Array</a>(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>)","location":{"filename":"src/avram/join.cr","line_number":7,"url":null},"def":{"name":"new","args":[{"name":"from","doc":null,"default_value":"","external_name":"from","restriction":"Symbol"},{"name":"to","doc":null,"default_value":"","external_name":"to","restriction":"Symbol"},{"name":"primary_key","doc":null,"default_value":"nil","external_name":"primary_key","restriction":"Symbol | ::Nil"},{"name":"foreign_key","doc":null,"default_value":"nil","external_name":"foreign_key","restriction":"Symbol | ::Nil"},{"name":"comparison","doc":null,"default_value":"\"=\"","external_name":"comparison","restriction":"String | ::Nil"},{"name":"using","doc":null,"default_value":"[] of Symbol","external_name":"using","restriction":"Array(Symbol)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(from, to, primary_key, foreign_key, comparison, using)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"clone-instance-method","html_id":"clone-instance-method","name":"clone","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/join.cr","line_number":39,"url":null},"def":{"name":"clone","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self"}},{"id":"default_foreign_key-instance-method","html_id":"default_foreign_key-instance-method","name":"default_foreign_key","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/join.cr","line_number":35,"url":null},"def":{"name":"default_foreign_key","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(Wordsmith::Inflector.singularize(@from)) + \"_id\""}},{"id":"from:Symbol-instance-method","html_id":"from:Symbol-instance-method","name":"from","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Symbol","args_html":" : Symbol","location":{"filename":"src/avram/join.cr","line_number":5,"url":null},"def":{"name":"from","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@from"}},{"id":"from_column-instance-method","html_id":"from_column-instance-method","name":"from_column","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/join.cr","line_number":27,"url":null},"def":{"name":"from_column","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"#{@from}.#{@primary_key || \"id\"}\""}},{"id":"join_type:String-instance-method","html_id":"join_type:String-instance-method","name":"join_type","doc":null,"summary":null,"abstract":true,"args":[],"args_string":" : String","args_html":" : <a href=\"../../String.html\">String</a>","location":{"filename":"src/avram/join.cr","line_number":17,"url":null},"def":{"name":"join_type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":""}},{"id":"to:Symbol-instance-method","html_id":"to:Symbol-instance-method","name":"to","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Symbol","args_html":" : Symbol","location":{"filename":"src/avram/join.cr","line_number":5,"url":null},"def":{"name":"to","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@to"}},{"id":"to_column-instance-method","html_id":"to_column-instance-method","name":"to_column","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/join.cr","line_number":31,"url":null},"def":{"name":"to_column","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"#{@to}.#{@foreign_key || default_foreign_key}\""}},{"id":"to_sql-instance-method","html_id":"to_sql-instance-method","name":"to_sql","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/join.cr","line_number":19,"url":null},"def":{"name":"to_sql","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if @using.any?\n  \"#{join_type} JOIN #{@to} USING (#{@using.join(\", \")})\"\nelse\n  \"#{join_type} JOIN #{@to} ON #{from_column} #{@comparison} #{to_column}\"\nend"}}],"macros":[],"types":[]}]},{"html_id":"avram/Avram/LazyLoadError","path":"Avram/LazyLoadError.html","kind":"class","full_name":"Avram::LazyLoadError","name":"LazyLoadError","abstract":false,"superclass":{"html_id":"avram/Avram/AvramError","kind":"class","full_name":"Avram::AvramError","name":"AvramError"},"ancestors":[{"html_id":"avram/Avram/AvramError","kind":"class","full_name":"Avram::AvramError","name":"AvramError"},{"html_id":"avram/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":"Raised when trying to access a record that was not preloaded and lazy load\nis disabled.","summary":"<p>Raised when trying to access a record that was not preloaded and lazy load is disabled.</p>","class_methods":[],"constructors":[{"id":"new(model:String,association:String)-class-method","html_id":"new(model:String,association:String)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"model","doc":null,"default_value":"","external_name":"model","restriction":"String"},{"name":"association","doc":null,"default_value":"","external_name":"association","restriction":"String"}],"args_string":"(model : String, association : String)","args_html":"(model : <a href=\"../String.html\">String</a>, association : <a href=\"../String.html\">String</a>)","location":{"filename":"src/avram/errors.cr","line_number":17,"url":null},"def":{"name":"new","args":[{"name":"model","doc":null,"default_value":"","external_name":"model","restriction":"String"},{"name":"association","doc":null,"default_value":"","external_name":"association","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(model, association)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[],"macros":[],"types":[]},{"html_id":"avram/Avram/MarkAsFailed","path":"Avram/MarkAsFailed.html","kind":"module","full_name":"Avram::MarkAsFailed","name":"MarkAsFailed","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"avram/Avram/SaveOperation","kind":"class","full_name":"Avram::SaveOperation(T)","name":"SaveOperation"}],"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"mark_as_failed-instance-method","html_id":"mark_as_failed-instance-method","name":"mark_as_failed","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/mark_as_failed.cr","line_number":2,"url":null},"def":{"name":"mark_as_failed","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.save_status = Avram::SaveOperation::SaveStatus::SaveFailed"}}],"macros":[],"types":[]},{"html_id":"avram/Avram/Migrator","path":"Avram/Migrator.html","kind":"module","full_name":"Avram::Migrator","name":"Migrator","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":null,"summary":null,"class_methods":[{"id":"run(&)-class-method","html_id":"run(&)-class-method","name":"run","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"(&)","args_html":"(&)","location":{"filename":"src/avram/migrator/migrator.cr","line_number":2,"url":null},"def":{"name":"run","args":[],"double_splat":null,"splat_index":null,"yields":0,"block_arg":null,"return_type":"","visibility":"Public","body":"begin\n  yield\nrescue e\n  puts(e.inspect_with_backtrace)\n  exit(1)\nend"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"avram/Avram/Migrator/AlterExtensionStatement","path":"Avram/Migrator/AlterExtensionStatement.html","kind":"class","full_name":"Avram::Migrator::AlterExtensionStatement","name":"AlterExtensionStatement","abstract":false,"superclass":{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Avram/Migrator","kind":"module","full_name":"Avram::Migrator","name":"Migrator"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(name:String,to:String?=nil)-class-method","html_id":"new(name:String,to:String?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"to","doc":null,"default_value":"nil","external_name":"to","restriction":"String | ::Nil"}],"args_string":"(name : String, to : String? = <span class=\"n\">nil</span>)","args_html":"(name : <a href=\"../../String.html\">String</a>, to : <a href=\"../../String.html\">String</a>? = <span class=\"n\">nil</span>)","location":{"filename":"src/avram/migrator/alter_extension_statement.cr","line_number":2,"url":null},"def":{"name":"new","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"to","doc":null,"default_value":"nil","external_name":"to","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(name, to)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"build-instance-method","html_id":"build-instance-method","name":"build","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/migrator/alter_extension_statement.cr","line_number":5,"url":null},"def":{"name":"build","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"String.build do |sql|\n  sql << \"ALTER EXTENSION \\\"#{@name}\\\" UPDATE\"\n  if @to\n    sql << to_version\n  end\n  sql << \";\"\nend"}},{"id":"to_version-instance-method","html_id":"to_version-instance-method","name":"to_version","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/migrator/alter_extension_statement.cr","line_number":13,"url":null},"def":{"name":"to_version","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\" TO '#{@to}'\""}}],"macros":[],"types":[]},{"html_id":"avram/Avram/Migrator/AlterTableStatement","path":"Avram/Migrator/AlterTableStatement.html","kind":"class","full_name":"Avram::Migrator::AlterTableStatement","name":"AlterTableStatement","abstract":false,"superclass":{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"avram/Avram/Migrator/MissingOnDeleteWithBelongsToError","kind":"module","full_name":"Avram::Migrator::MissingOnDeleteWithBelongsToError","name":"MissingOnDeleteWithBelongsToError"},{"html_id":"avram/Avram/Migrator/IndexStatementHelpers","kind":"module","full_name":"Avram::Migrator::IndexStatementHelpers","name":"IndexStatementHelpers"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[{"html_id":"avram/Avram/Migrator/IndexStatementHelpers","kind":"module","full_name":"Avram::Migrator::IndexStatementHelpers","name":"IndexStatementHelpers"},{"html_id":"avram/Avram/Migrator/MissingOnDeleteWithBelongsToError","kind":"module","full_name":"Avram::Migrator::MissingOnDeleteWithBelongsToError","name":"MissingOnDeleteWithBelongsToError"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Avram/Migrator","kind":"module","full_name":"Avram::Migrator","name":"Migrator"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(table_name:Symbol)-class-method","html_id":"new(table_name:Symbol)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"table_name","doc":null,"default_value":"","external_name":"table_name","restriction":"Symbol"}],"args_string":"(table_name : Symbol)","args_html":"(table_name : Symbol)","location":{"filename":"src/avram/migrator/alter_table_statement.cr","line_number":14,"url":null},"def":{"name":"new","args":[{"name":"table_name","doc":null,"default_value":"","external_name":"table_name","restriction":"Symbol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(table_name)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"add_change_type_statement(column:Avram::Migrator::Columns::Base)-instance-method","html_id":"add_change_type_statement(column:Avram::Migrator::Columns::Base)-instance-method","name":"add_change_type_statement","doc":null,"summary":null,"abstract":false,"args":[{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":"::Avram::Migrator::Columns::Base"}],"args_string":"(column : Avram::Migrator::Columns::Base)","args_html":"(column : <a href=\"../../Avram/Migrator/Columns/Base.html\">Avram::Migrator::Columns::Base</a>)","location":{"filename":"src/avram/migrator/alter_table_statement.cr","line_number":30,"url":null},"def":{"name":"add_change_type_statement","args":[{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":"::Avram::Migrator::Columns::Base"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"change_type_statements << (column.build_change_type_statement(@table_name))"}},{"id":"add_fill_existing_with_statements(column:Symbol|String,type,value,nilable)-instance-method","html_id":"add_fill_existing_with_statements(column:Symbol|String,type,value,nilable)-instance-method","name":"add_fill_existing_with_statements","doc":null,"summary":null,"abstract":false,"args":[{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":"Symbol | String"},{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":""},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""},{"name":"nilable","doc":null,"default_value":"","external_name":"nilable","restriction":""}],"args_string":"(column : Symbol | String, type, value, nilable)","args_html":"(column : Symbol | <a href=\"../../String.html\">String</a>, type, value, nilable)","location":{"filename":"src/avram/migrator/alter_table_statement.cr","line_number":173,"url":null},"def":{"name":"add_fill_existing_with_statements","args":[{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":"Symbol | String"},{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":""},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""},{"name":"nilable","doc":null,"default_value":"","external_name":"nilable","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@fill_existing_with_statements << \"UPDATE #{@table_name} SET #{column} = #{value};\"\nif nilable\nelse\n  @fill_existing_with_statements << \"ALTER TABLE #{@table_name} ALTER COLUMN #{column} SET NOT NULL;\"\nend\n"}},{"id":"alter_statements:Array(String)-instance-method","html_id":"alter_statements:Array(String)-instance-method","name":"alter_statements","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(String)","args_html":" : <a href=\"../../Array.html\">Array</a>(<a href=\"../../String.html\">String</a>)","location":{"filename":"src/avram/migrator/alter_table_statement.cr","line_number":63,"url":null},"def":{"name":"alter_statements","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(String)","visibility":"Public","body":"alterations = renamed_rows.map do |statement|\n  \"ALTER TABLE #{@table_name} #{statement};\"\nend\nif (rows + dropped_rows).empty?\nelse\n  alterations << String.build do |statement|\n    statement << \"ALTER TABLE #{@table_name}\"\n    statement << \"\\n\"\n    statement << ((rows + dropped_rows).join(\",\\n\"))\n    statement << ';'\n  end\nend\nalterations\n"}},{"id":"build(&)-instance-method","html_id":"build(&)-instance-method","name":"build","doc":"Accepts a block to alter a table using the `add` method. The generated sql\nstatements are aggregated in the `statements` getter.\n\n## Usage\n\n```\nbuilt = Avram::Migrator::AlterTableStatement.new(:users).build do\n  add name : String\n  add age : Int32\n  remove old_field\nend\n\nbuilt.statements\n# => [\n\"ALTER TABLE users\n  ADD name text NOT NULL,\n  ADD age int NOT NULL,\n  DROP old_field\"\n]\n```","summary":"<p>Accepts a block to alter a table using the <code><a href=\"../../Avram/Migrator/AlterTableStatement.html#add(type_declaration,index=false,using=:btree,unique=false,default=nil,fill_existing_with=nil,**type_options)-macro\">add</a></code> method.</p>","abstract":false,"args":[],"args_string":"(&)","args_html":"(&)","location":{"filename":"src/avram/migrator/alter_table_statement.cr","line_number":54,"url":null},"def":{"name":"build","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"with self yield\nself\n"}},{"id":"change_type_statements:Array(String)-instance-method","html_id":"change_type_statements:Array(String)-instance-method","name":"change_type_statements","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(String)","args_html":" : <a href=\"../../Array.html\">Array</a>(<a href=\"../../String.html\">String</a>)","location":{"filename":"src/avram/migrator/alter_table_statement.cr","line_number":12,"url":null},"def":{"name":"change_type_statements","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@change_type_statements"}},{"id":"dropped_rows:Array(String)-instance-method","html_id":"dropped_rows:Array(String)-instance-method","name":"dropped_rows","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(String)","args_html":" : <a href=\"../../Array.html\">Array</a>(<a href=\"../../String.html\">String</a>)","location":{"filename":"src/avram/migrator/alter_table_statement.cr","line_number":10,"url":null},"def":{"name":"dropped_rows","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@dropped_rows"}},{"id":"fill_existing_with_statements:Array(String)-instance-method","html_id":"fill_existing_with_statements:Array(String)-instance-method","name":"fill_existing_with_statements","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(String)","args_html":" : <a href=\"../../Array.html\">Array</a>(<a href=\"../../String.html\">String</a>)","location":{"filename":"src/avram/migrator/alter_table_statement.cr","line_number":11,"url":null},"def":{"name":"fill_existing_with_statements","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@fill_existing_with_statements"}},{"id":"renamed_rows:Array(String)-instance-method","html_id":"renamed_rows:Array(String)-instance-method","name":"renamed_rows","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(String)","args_html":" : <a href=\"../../Array.html\">Array</a>(<a href=\"../../String.html\">String</a>)","location":{"filename":"src/avram/migrator/alter_table_statement.cr","line_number":9,"url":null},"def":{"name":"renamed_rows","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@renamed_rows"}},{"id":"rows:Array(String)-instance-method","html_id":"rows:Array(String)-instance-method","name":"rows","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(String)","args_html":" : <a href=\"../../Array.html\">Array</a>(<a href=\"../../String.html\">String</a>)","location":{"filename":"src/avram/migrator/alter_table_statement.cr","line_number":8,"url":null},"def":{"name":"rows","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@rows"}},{"id":"statements-instance-method","html_id":"statements-instance-method","name":"statements","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/migrator/alter_table_statement.cr","line_number":59,"url":null},"def":{"name":"statements","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"((alter_statements + change_type_statements) + index_statements) + fill_existing_with_statements"}}],"macros":[{"id":"add(type_declaration,index=false,using=:btree,unique=false,default=nil,fill_existing_with=nil,**type_options)-macro","html_id":"add(type_declaration,index=false,using=:btree,unique=false,default=nil,fill_existing_with=nil,**type_options)-macro","name":"add","doc":null,"summary":null,"abstract":false,"args":[{"name":"type_declaration","doc":null,"default_value":"","external_name":"type_declaration","restriction":""},{"name":"index","doc":null,"default_value":"false","external_name":"index","restriction":""},{"name":"using","doc":null,"default_value":":btree","external_name":"using","restriction":""},{"name":"unique","doc":null,"default_value":"false","external_name":"unique","restriction":""},{"name":"default","doc":null,"default_value":"nil","external_name":"default","restriction":""},{"name":"fill_existing_with","doc":null,"default_value":"nil","external_name":"fill_existing_with","restriction":""}],"args_string":"(type_declaration, index = <span class=\"n\">false</span>, using = <span class=\"n\">:btree</span>, unique = <span class=\"n\">false</span>, default = <span class=\"n\">nil</span>, fill_existing_with = <span class=\"n\">nil</span>, **type_options)","location":{"filename":"src/avram/migrator/alter_table_statement.cr","line_number":114,"url":null},"def":{"name":"add","args":[{"name":"type_declaration","doc":null,"default_value":"","external_name":"type_declaration","restriction":""},{"name":"index","doc":null,"default_value":"false","external_name":"index","restriction":""},{"name":"using","doc":null,"default_value":":btree","external_name":"using","restriction":""},{"name":"unique","doc":null,"default_value":"false","external_name":"unique","restriction":""},{"name":"default","doc":null,"default_value":"nil","external_name":"default","restriction":""},{"name":"fill_existing_with","doc":null,"default_value":"nil","external_name":"fill_existing_with","restriction":""}],"double_splat":{"name":"type_options","doc":null,"default_value":"","external_name":"type_options","restriction":""},"splat_index":null,"block_arg":null,"visibility":"Public","body":"    \n{% type = type_declaration.type %}\n\n    \n{% nilable = false %}\n\n    \n{% array = false %}\n\n    \n{% should_fill_existing = fill_existing_with && (fill_existing_with != (:nothing)) %}\n\n    \n{% if type.is_a?(Union) %}\n      {% type = type.types.first %}\n      {% nilable = true %}\n    {% end %}\n\n    \n{% if type.is_a?(Generic) %}\n      {% type = type.type_vars.first %}\n      {% array = true %}\n    {% end %}\n\n\n    \n{% if ((!nilable) && (default == nil)) && (fill_existing_with == nil) %}\n      {% raise(\"\\nYou must provide a default value or use fill_existing_with when adding a required column to an existing table.\\n\\nTry one of these...\\n\\n  ▸ add #{type_declaration}, default: \\\"Something\\\"\\n  ▸ add #{type_declaration}, fill_existing_with: \\\"Something\\\"\\n  ▸ add #{type_declaration}, fill_existing_with: :nothing\") %}\n    {% end %}\n\n\n    \n{% if default && fill_existing_with %}\n      {% type_declaration.raise(\"Cannot use both 'default' and 'fill_existing_with' arguments\") %}\n    {% end %}\n\n\n    rows << Avram::Migrator::Columns::\n{{ type }}\nColumn(\n    \n{% if array %}Array({{ type }}){% else %}{{ type }}{% end %}\n\n    ).new(\n      name: \n{{ type_declaration.var.stringify }}\n,\n      nilable: \n{{ nilable || should_fill_existing }}\n,\n      default: \n{{ default }}\n,\n      \n{{ **type_options }}\n\n    )\n    \n{% if array %}\n    .array!\n    {% end %}\n\n    .build_add_statement_for_alter\n\n    \n{% if should_fill_existing %}\n      add_fill_existing_with_statements(\n        column: {{ type_declaration.var.stringify }},\n        type: {{ type }},\n        value: Avram::Migrator::Columns::{{ type }}Column.prepare_value_for_database({{ fill_existing_with }}),\n        nilable: {{ nilable }}\n      )\n    {% end %}\n\n\n    \n{% if index || unique %}\n      add_index :{{ type_declaration.var }}, using: {{ using }}, unique: {{ unique }}\n    {% end %}\n\n  \n"}},{"id":"add_belongs_to(type_declaration,on_delete,references=nil,foreign_key_type=Int64,fill_existing_with=nil,unique=false)-macro","html_id":"add_belongs_to(type_declaration,on_delete,references=nil,foreign_key_type=Int64,fill_existing_with=nil,unique=false)-macro","name":"add_belongs_to","doc":"Adds a references column and index given a model class and references option.","summary":"<p>Adds a references column and index given a model class and references option.</p>","abstract":false,"args":[{"name":"type_declaration","doc":null,"default_value":"","external_name":"type_declaration","restriction":""},{"name":"on_delete","doc":null,"default_value":"","external_name":"on_delete","restriction":""},{"name":"references","doc":null,"default_value":"nil","external_name":"references","restriction":""},{"name":"foreign_key_type","doc":null,"default_value":"Int64","external_name":"foreign_key_type","restriction":""},{"name":"fill_existing_with","doc":null,"default_value":"nil","external_name":"fill_existing_with","restriction":""},{"name":"unique","doc":null,"default_value":"false","external_name":"unique","restriction":""}],"args_string":"(type_declaration, on_delete, references = <span class=\"n\">nil</span>, foreign_key_type = <span class=\"t\">Int64</span>, fill_existing_with = <span class=\"n\">nil</span>, unique = <span class=\"n\">false</span>)","location":{"filename":"src/avram/migrator/alter_table_statement.cr","line_number":79,"url":null},"def":{"name":"add_belongs_to","args":[{"name":"type_declaration","doc":null,"default_value":"","external_name":"type_declaration","restriction":""},{"name":"on_delete","doc":null,"default_value":"","external_name":"on_delete","restriction":""},{"name":"references","doc":null,"default_value":"nil","external_name":"references","restriction":""},{"name":"foreign_key_type","doc":null,"default_value":"Int64","external_name":"foreign_key_type","restriction":""},{"name":"fill_existing_with","doc":null,"default_value":"nil","external_name":"fill_existing_with","restriction":""},{"name":"unique","doc":null,"default_value":"false","external_name":"unique","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    \n{% if type_declaration.is_a?(TypeDeclaration) %}{% else %}\n      {% raise(\"add_belongs_to expected a type declaration like 'user : User', instead got: '#{type_declaration}'\") %}\n    {% end %}\n\n    \n{% optional = type_declaration.type.is_a?(Union) %}\n\n\n    \n{% if optional %}\n      {% underscored_class = type_declaration.type.types.first.stringify.underscore %}\n    {% else %}\n      {% underscored_class = type_declaration.type.stringify.underscore %}\n    {% end %}\n\n\n    \n{% foreign_key_name = type_declaration.var + \"_id\" %}\n\n    \n%table_name\n = \n{{ references }}\n || Wordsmith::Inflector.pluralize(\n{{ underscored_class }}\n)\n\n    rows << ::Avram::Migrator::Columns::\n{{ foreign_key_type }}\nColumn(\n{{ foreign_key_type }}\n).new(\n      name: \n{{ foreign_key_name.stringify }}\n,\n      nilable: \n{{ optional }}\n,\n      default: nil\n    )\n    .set_references(references: \n%table_name\n.to_s, on_delete: \n{{ on_delete }}\n)\n    .build_add_statement_for_alter\n\n    \n{% if fill_existing_with && (fill_existing_with != (:nothing)) %}\n      add_fill_existing_with_statements(\n        column: {{ foreign_key_name.stringify }},\n        type: {{ foreign_key_type }},\n        value: Avram::Migrator::Columns::{{ foreign_key_type }}Column.prepare_value_for_database({{ fill_existing_with }}),\n        nilable: {{ optional }}\n      )\n    {% end %}\n\n\n    add_index :\n{{ foreign_key_name }}\n, unique: \n{{ unique }}\n\n  \n"}},{"id":"change_type(type_declaration,**type_options)-macro","html_id":"change_type(type_declaration,**type_options)-macro","name":"change_type","doc":null,"summary":null,"abstract":false,"args":[{"name":"type_declaration","doc":null,"default_value":"","external_name":"type_declaration","restriction":""}],"args_string":"(type_declaration, **type_options)","location":{"filename":"src/avram/migrator/alter_table_statement.cr","line_number":17,"url":null},"def":{"name":"change_type","args":[{"name":"type_declaration","doc":null,"default_value":"","external_name":"type_declaration","restriction":""}],"double_splat":{"name":"type_options","doc":null,"default_value":"","external_name":"type_options","restriction":""},"splat_index":null,"block_arg":null,"visibility":"Public","body":"    \n{% if !type_declaration.is_a?(TypeDeclaration) %}\n      {% type_declaration.raise(\"Must pass a type declaration to 'change_type'. Example: change_type age : Int32\") %}\n    {% end %}\n\n    \n%column\n = ::Avram::Migrator::Columns::\n{{ type_declaration.type }}\nColumn(\n{{ type_declaration.type }}\n).new(\n      name: \n{{ type_declaration.var.stringify }}\n,\n      nilable: false,\n      default: nil,\n      \n{{ **type_options }}\n\n    )\n    add_change_type_statement \n%column\n\n  \n"}},{"id":"remove(name)-macro","html_id":"remove(name)-macro","name":"remove","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""}],"args_string":"(name)","location":{"filename":"src/avram/migrator/alter_table_statement.cr","line_number":217,"url":null},"def":{"name":"remove","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    \n{% if name.is_a?(SymbolLiteral) %}{% else %}\n      symbol_expected_error(\"remove\", {{ name }})\n    {% end %}\n\n    dropped_rows << \"  DROP #{\n{{ name }}\n}\"\n  \n"}},{"id":"remove_belongs_to(association_name)-macro","html_id":"remove_belongs_to(association_name)-macro","name":"remove_belongs_to","doc":null,"summary":null,"abstract":false,"args":[{"name":"association_name","doc":null,"default_value":"","external_name":"association_name","restriction":""}],"args_string":"(association_name)","location":{"filename":"src/avram/migrator/alter_table_statement.cr","line_number":224,"url":null},"def":{"name":"remove_belongs_to","args":[{"name":"association_name","doc":null,"default_value":"","external_name":"association_name","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    \n{% if association_name.is_a?(SymbolLiteral) %}{% else %}\n      symbol_expected_error(\"remove_belongs_to\", {{ name }})\n    {% end %}\n\n    remove \n{{ association_name }}\n_id\n  \n"}},{"id":"rename(old_name,new_name)-macro","html_id":"rename(old_name,new_name)-macro","name":"rename","doc":null,"summary":null,"abstract":false,"args":[{"name":"old_name","doc":null,"default_value":"","external_name":"old_name","restriction":""},{"name":"new_name","doc":null,"default_value":"","external_name":"new_name","restriction":""}],"args_string":"(old_name, new_name)","location":{"filename":"src/avram/migrator/alter_table_statement.cr","line_number":199,"url":null},"def":{"name":"rename","args":[{"name":"old_name","doc":null,"default_value":"","external_name":"old_name","restriction":""},{"name":"new_name","doc":null,"default_value":"","external_name":"new_name","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    \n{% for name in {old_name, new_name} %}\n      {% if name.is_a?(SymbolLiteral) %}{% else %}\n        symbol_expected_error(\"rename\", {{ name }})\n      {% end %}\n    {% end %}\n\n    renamed_rows << \"RENAME COLUMN #{\n{{ old_name }}\n} TO #{\n{{ new_name }}\n}\"\n  \n"}},{"id":"rename_belongs_to(old_association_name,new_association_name)-macro","html_id":"rename_belongs_to(old_association_name,new_association_name)-macro","name":"rename_belongs_to","doc":null,"summary":null,"abstract":false,"args":[{"name":"old_association_name","doc":null,"default_value":"","external_name":"old_association_name","restriction":""},{"name":"new_association_name","doc":null,"default_value":"","external_name":"new_association_name","restriction":""}],"args_string":"(old_association_name, new_association_name)","location":{"filename":"src/avram/migrator/alter_table_statement.cr","line_number":208,"url":null},"def":{"name":"rename_belongs_to","args":[{"name":"old_association_name","doc":null,"default_value":"","external_name":"old_association_name","restriction":""},{"name":"new_association_name","doc":null,"default_value":"","external_name":"new_association_name","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    \n{% for association_name in {old_association_name, new_association_name} %}\n      {% if association_name.is_a?(SymbolLiteral) %}{% else %}\n        symbol_expected_error(\"rename_belongs_to\", {{ name }})\n      {% end %}\n    {% end %}\n\n    rename \n{{ old_association_name }}\n_id, \n{{ new_association_name }}\n_id\n  \n"}},{"id":"symbol_expected_error(action,name)-macro","html_id":"symbol_expected_error(action,name)-macro","name":"symbol_expected_error","doc":null,"summary":null,"abstract":false,"args":[{"name":"action","doc":null,"default_value":"","external_name":"action","restriction":""},{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""}],"args_string":"(action, name)","location":{"filename":"src/avram/migrator/alter_table_statement.cr","line_number":178,"url":null},"def":{"name":"symbol_expected_error","args":[{"name":"action","doc":null,"default_value":"","external_name":"action","restriction":""},{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    \n{% if name.is_a?(TypeDeclaration) %}\n      {% example = name.var %}\n    {% else %}\n      {% example = name.id %}\n    {% end %}\n\n\n    \n{% raise(\"\\n#{action} expected a symbol like :#{example}, instead got: #{name}.\\n\\nin: #{name.filename}:#{name.line_number}:#{name.column_number}\\n\\nTry replacing...\\n\\n  ▸ #{name} with :#{example}\") %}\n\n  \n"}}],"types":[]},{"html_id":"avram/Avram/Migrator/BuildReferenceFragment","path":"Avram/Migrator/BuildReferenceFragment.html","kind":"class","full_name":"Avram::Migrator::BuildReferenceFragment","name":"BuildReferenceFragment","abstract":false,"superclass":{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Avram/Migrator","kind":"module","full_name":"Avram::Migrator","name":"Migrator"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(references,on_delete)-class-method","html_id":"new(references,on_delete)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"references","doc":null,"default_value":"","external_name":"references","restriction":""},{"name":"on_delete","doc":null,"default_value":"","external_name":"on_delete","restriction":""}],"args_string":"(references, on_delete)","args_html":"(references, on_delete)","location":{"filename":"src/avram/migrator/build_reference_fragment.cr","line_number":7,"url":null},"def":{"name":"new","args":[{"name":"references","doc":null,"default_value":"","external_name":"references","restriction":""},{"name":"on_delete","doc":null,"default_value":"","external_name":"on_delete","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(references, on_delete)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"build-instance-method","html_id":"build-instance-method","name":"build","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/migrator/build_reference_fragment.cr","line_number":10,"url":null},"def":{"name":"build","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if on_delete == (:do_nothing)\n  \" REFERENCES #{references}\"\nelse\n  (\" REFERENCES #{references}\" + \" ON DELETE \") + on_delete_sql\nend"}}],"macros":[],"types":[]},{"html_id":"avram/Avram/Migrator/ChangeNullStatement","path":"Avram/Migrator/ChangeNullStatement.html","kind":"class","full_name":"Avram::Migrator::ChangeNullStatement","name":"ChangeNullStatement","abstract":false,"superclass":{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Avram/Migrator","kind":"module","full_name":"Avram::Migrator","name":"Migrator"},"doc":"Builds an SQL statement for changing a columns NOT NULL status.\n\n### Usage\n\n```\nChangeNullStatement.new(:users, :email, make: :optional).build\n# => \"ALTER TABLE users ALTER COLUMN email DROP NOT NULL;\"\n```","summary":"<p>Builds an SQL statement for changing a columns NOT NULL status.</p>","class_methods":[],"constructors":[{"id":"new(table:Symbol,column:Symbol,required:Bool)-class-method","html_id":"new(table:Symbol,column:Symbol,required:Bool)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"table","doc":null,"default_value":"","external_name":"table","restriction":"Symbol"},{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":"Symbol"},{"name":"required","doc":null,"default_value":"","external_name":"required","restriction":"Bool"}],"args_string":"(table : Symbol, column : Symbol, required : Bool)","args_html":"(table : Symbol, column : Symbol, required : <a href=\"../../Bool.html\">Bool</a>)","location":{"filename":"src/avram/migrator/change_null_statement.cr","line_number":10,"url":null},"def":{"name":"new","args":[{"name":"table","doc":null,"default_value":"","external_name":"table","restriction":"Symbol"},{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":"Symbol"},{"name":"required","doc":null,"default_value":"","external_name":"required","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(table, column, required)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"build-instance-method","html_id":"build-instance-method","name":"build","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/migrator/change_null_statement.cr","line_number":13,"url":null},"def":{"name":"build","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if @required\n  change = \"SET\"\nelse\n  change = \"DROP\"\nend\nString.build do |index|\n  index << \"ALTER TABLE #{@table}\"\n  index << \" ALTER COLUMN #{@column}\"\n  index << \" #{change} NOT NULL;\"\nend\n"}}],"macros":[],"types":[]},{"html_id":"avram/Avram/Migrator/Columns","path":"Avram/Migrator/Columns.html","kind":"module","full_name":"Avram::Migrator::Columns","name":"Columns","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Avram/Migrator","kind":"module","full_name":"Avram::Migrator","name":"Migrator"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"avram/Avram/Migrator/Columns/Base","path":"Avram/Migrator/Columns/Base.html","kind":"class","full_name":"Avram::Migrator::Columns::Base","name":"Base","abstract":true,"superclass":{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"avram/Avram/Migrator/Columns/BoolColumn","kind":"class","full_name":"Avram::Migrator::Columns::BoolColumn(T)","name":"BoolColumn"},{"html_id":"avram/Avram/Migrator/Columns/FloatColumn","kind":"class","full_name":"Avram::Migrator::Columns::FloatColumn(T)","name":"FloatColumn"},{"html_id":"avram/Avram/Migrator/Columns/Int16Column","kind":"class","full_name":"Avram::Migrator::Columns::Int16Column(T)","name":"Int16Column"},{"html_id":"avram/Avram/Migrator/Columns/Int32Column","kind":"class","full_name":"Avram::Migrator::Columns::Int32Column(T)","name":"Int32Column"},{"html_id":"avram/Avram/Migrator/Columns/Int64Column","kind":"class","full_name":"Avram::Migrator::Columns::Int64Column(T)","name":"Int64Column"},{"html_id":"avram/Avram/Migrator/Columns/JSON/AnyColumn","kind":"class","full_name":"Avram::Migrator::Columns::JSON::AnyColumn(T)","name":"AnyColumn"},{"html_id":"avram/Avram/Migrator/Columns/StringColumn","kind":"class","full_name":"Avram::Migrator::Columns::StringColumn(T)","name":"StringColumn"},{"html_id":"avram/Avram/Migrator/Columns/TimeColumn","kind":"class","full_name":"Avram::Migrator::Columns::TimeColumn(T)","name":"TimeColumn"},{"html_id":"avram/Avram/Migrator/Columns/UUIDColumn","kind":"class","full_name":"Avram::Migrator::Columns::UUIDColumn(T)","name":"UUIDColumn"}],"including_types":[],"namespace":{"html_id":"avram/Avram/Migrator/Columns","kind":"module","full_name":"Avram::Migrator::Columns","name":"Columns"},"doc":null,"summary":null,"class_methods":[{"id":"escape_literal(value)-class-method","html_id":"escape_literal(value)-class-method","name":"escape_literal","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(value)","args_html":"(value)","location":{"filename":"src/avram/migrator/columns/base.cr","line_number":74,"url":null},"def":{"name":"escape_literal","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"PG::EscapeHelper.escape_literal(value)"}},{"id":"prepare_value_for_database(value:Array)-class-method","html_id":"prepare_value_for_database(value:Array)-class-method","name":"prepare_value_for_database","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Array"}],"args_string":"(value : Array)","args_html":"(value : <a href=\"../../../Array.html\">Array</a>)","location":{"filename":"src/avram/migrator/columns/base.cr","line_number":70,"url":null},"def":{"name":"prepare_value_for_database","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Array"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"escape_literal(PQ::Param.encode_array(value))"}},{"id":"prepare_value_for_database(value)-class-method","html_id":"prepare_value_for_database(value)-class-method","name":"prepare_value_for_database","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(value)","args_html":"(value)","location":{"filename":"src/avram/migrator/columns/base.cr","line_number":66,"url":null},"def":{"name":"prepare_value_for_database","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"escape_literal(value.to_s)"}}],"constructors":[{"id":"new(name)-class-method","html_id":"new(name)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""}],"args_string":"(name)","args_html":"(name)","location":{"filename":"src/avram/migrator/columns/base.cr","line_number":13,"url":null},"def":{"name":"new","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(name)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"array!-instance-method","html_id":"array!-instance-method","name":"array!","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/migrator/columns/base.cr","line_number":28,"url":null},"def":{"name":"array!","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@array = true\nself\n"}},{"id":"as_array_type:String-instance-method","html_id":"as_array_type:String-instance-method","name":"as_array_type","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","args_html":" : <a href=\"../../../String.html\">String</a>","location":{"filename":"src/avram/migrator/columns/base.cr","line_number":45,"url":null},"def":{"name":"as_array_type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@array ? \"[]\" : \"\""}},{"id":"build_add_statement_for_alter:String-instance-method","html_id":"build_add_statement_for_alter:String-instance-method","name":"build_add_statement_for_alter","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","args_html":" : <a href=\"../../../String.html\">String</a>","location":{"filename":"src/avram/migrator/columns/base.cr","line_number":37,"url":null},"def":{"name":"build_add_statement_for_alter","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"\"  ADD \" + build_add_statement"}},{"id":"build_add_statement_for_create:String-instance-method","html_id":"build_add_statement_for_create:String-instance-method","name":"build_add_statement_for_create","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","args_html":" : <a href=\"../../../String.html\">String</a>","location":{"filename":"src/avram/migrator/columns/base.cr","line_number":41,"url":null},"def":{"name":"build_add_statement_for_create","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"\"  \" + build_add_statement"}},{"id":"build_change_type_statement(table_name:Symbol):String-instance-method","html_id":"build_change_type_statement(table_name:Symbol):String-instance-method","name":"build_change_type_statement","doc":null,"summary":null,"abstract":false,"args":[{"name":"table_name","doc":null,"default_value":"","external_name":"table_name","restriction":"Symbol"}],"args_string":"(table_name : Symbol) : String","args_html":"(table_name : Symbol) : <a href=\"../../../String.html\">String</a>","location":{"filename":"src/avram/migrator/columns/base.cr","line_number":33,"url":null},"def":{"name":"build_change_type_statement","args":[{"name":"table_name","doc":null,"default_value":"","external_name":"table_name","restriction":"Symbol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"\"ALTER TABLE #{table_name} ALTER COLUMN #{name} SET DATA TYPE #{column_type};\""}},{"id":"column_type:String-instance-method","html_id":"column_type:String-instance-method","name":"column_type","doc":null,"summary":null,"abstract":true,"args":[],"args_string":" : String","args_html":" : <a href=\"../../../String.html\">String</a>","location":{"filename":"src/avram/migrator/columns/base.cr","line_number":60,"url":null},"def":{"name":"column_type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":""}},{"id":"set_references(references:String,on_delete:Symbol)-instance-method","html_id":"set_references(references:String,on_delete:Symbol)-instance-method","name":"set_references","doc":null,"summary":null,"abstract":false,"args":[{"name":"references","doc":null,"default_value":"","external_name":"references","restriction":"String"},{"name":"on_delete","doc":null,"default_value":"","external_name":"on_delete","restriction":"Symbol"}],"args_string":"(references : String, on_delete : Symbol)","args_html":"(references : <a href=\"../../../String.html\">String</a>, on_delete : Symbol)","location":{"filename":"src/avram/migrator/columns/base.cr","line_number":16,"url":null},"def":{"name":"set_references","args":[{"name":"references","doc":null,"default_value":"","external_name":"references","restriction":"String"},{"name":"on_delete","doc":null,"default_value":"","external_name":"on_delete","restriction":"Symbol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@references = references\n@on_delete = on_delete\nself\n"}},{"id":"set_references(references:Nil,on_delete:Nil)-instance-method","html_id":"set_references(references:Nil,on_delete:Nil)-instance-method","name":"set_references","doc":null,"summary":null,"abstract":false,"args":[{"name":"references","doc":null,"default_value":"","external_name":"references","restriction":"Nil"},{"name":"on_delete","doc":null,"default_value":"","external_name":"on_delete","restriction":"Nil"}],"args_string":"(references : Nil, on_delete : Nil)","args_html":"(references : <a href=\"../../../Nil.html\">Nil</a>, on_delete : <a href=\"../../../Nil.html\">Nil</a>)","location":{"filename":"src/avram/migrator/columns/base.cr","line_number":20,"url":null},"def":{"name":"set_references","args":[{"name":"references","doc":null,"default_value":"","external_name":"references","restriction":"Nil"},{"name":"on_delete","doc":null,"default_value":"","external_name":"on_delete","restriction":"Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@references = references\n@on_delete = on_delete\nself\n"}},{"id":"set_references(references,on_delete)-instance-method","html_id":"set_references(references,on_delete)-instance-method","name":"set_references","doc":null,"summary":null,"abstract":false,"args":[{"name":"references","doc":null,"default_value":"","external_name":"references","restriction":""},{"name":"on_delete","doc":null,"default_value":"","external_name":"on_delete","restriction":""}],"args_string":"(references, on_delete)","args_html":"(references, on_delete)","location":{"filename":"src/avram/migrator/columns/base.cr","line_number":24,"url":null},"def":{"name":"set_references","args":[{"name":"references","doc":null,"default_value":"","external_name":"references","restriction":""},{"name":"on_delete","doc":null,"default_value":"","external_name":"on_delete","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@references = references\n@on_delete = on_delete\n{% raise(\"When setting a reference you must set the reference table and the 'on_delete' option.\") %}\n"}}],"macros":[],"types":[]},{"html_id":"avram/Avram/Migrator/Columns/BoolColumn","path":"Avram/Migrator/Columns/BoolColumn.html","kind":"class","full_name":"Avram::Migrator::Columns::BoolColumn(T)","name":"BoolColumn","abstract":false,"superclass":{"html_id":"avram/Avram/Migrator/Columns/Base","kind":"class","full_name":"Avram::Migrator::Columns::Base","name":"Base"},"ancestors":[{"html_id":"avram/Avram/Migrator/Columns/Base","kind":"class","full_name":"Avram::Migrator::Columns::Base","name":"Base"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Avram/Migrator/Columns","kind":"module","full_name":"Avram::Migrator::Columns","name":"Columns"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(name,nilable,default)-class-method","html_id":"new(name,nilable,default)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"nilable","doc":null,"default_value":"","external_name":"nilable","restriction":""},{"name":"default","doc":null,"default_value":"","external_name":"default","restriction":""}],"args_string":"(name, nilable, default)","args_html":"(name, nilable, default)","location":{"filename":"src/avram/migrator/columns/bool_column.cr","line_number":7,"url":null},"def":{"name":"new","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"nilable","doc":null,"default_value":"","external_name":"nilable","restriction":""},{"name":"default","doc":null,"default_value":"","external_name":"default","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = BoolColumn(T).allocate\n_.initialize(name, nilable, default)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"column_type:String-instance-method","html_id":"column_type:String-instance-method","name":"column_type","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","args_html":" : <a href=\"../../../String.html\">String</a>","location":{"filename":"src/avram/migrator/columns/bool_column.cr","line_number":10,"url":null},"def":{"name":"column_type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"\"boolean\""}}],"macros":[],"types":[]},{"html_id":"avram/Avram/Migrator/Columns/Float32Column","path":"Avram/Migrator/Columns/Float32Column.html","kind":"class","full_name":"Avram::Migrator::Columns::Float32Column(T)","name":"Float32Column","abstract":false,"superclass":{"html_id":"avram/Avram/Migrator/Columns/FloatColumn","kind":"class","full_name":"Avram::Migrator::Columns::FloatColumn","name":"FloatColumn"},"ancestors":[{"html_id":"avram/Avram/Migrator/Columns/FloatColumn","kind":"class","full_name":"Avram::Migrator::Columns::FloatColumn","name":"FloatColumn"},{"html_id":"avram/Avram/Migrator/Columns/Base","kind":"class","full_name":"Avram::Migrator::Columns::Base","name":"Base"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Avram/Migrator/Columns","kind":"module","full_name":"Avram::Migrator::Columns","name":"Columns"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(name,nilable,default,precision,scale)-class-method","html_id":"new(name,nilable,default,precision,scale)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"nilable","doc":null,"default_value":"","external_name":"nilable","restriction":""},{"name":"default","doc":null,"default_value":"","external_name":"default","restriction":""},{"name":"precision","doc":null,"default_value":"","external_name":"precision","restriction":""},{"name":"scale","doc":null,"default_value":"","external_name":"scale","restriction":""}],"args_string":"(name, nilable, default, precision, scale)","args_html":"(name, nilable, default, precision, scale)","location":{"filename":"src/avram/migrator/columns/float_column.cr","line_number":11,"url":null},"def":{"name":"new","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"nilable","doc":null,"default_value":"","external_name":"nilable","restriction":""},{"name":"default","doc":null,"default_value":"","external_name":"default","restriction":""},{"name":"precision","doc":null,"default_value":"","external_name":"precision","restriction":""},{"name":"scale","doc":null,"default_value":"","external_name":"scale","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = Float32Column(T).allocate\n_.initialize(name, nilable, default, precision, scale)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(name,nilable,default)-class-method","html_id":"new(name,nilable,default)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"nilable","doc":null,"default_value":"","external_name":"nilable","restriction":""},{"name":"default","doc":null,"default_value":"","external_name":"default","restriction":""}],"args_string":"(name, nilable, default)","args_html":"(name, nilable, default)","location":{"filename":"src/avram/migrator/columns/float_column.cr","line_number":14,"url":null},"def":{"name":"new","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"nilable","doc":null,"default_value":"","external_name":"nilable","restriction":""},{"name":"default","doc":null,"default_value":"","external_name":"default","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = Float32Column(T).allocate\n_.initialize(name, nilable, default)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[],"macros":[],"types":[]},{"html_id":"avram/Avram/Migrator/Columns/Float64Column","path":"Avram/Migrator/Columns/Float64Column.html","kind":"class","full_name":"Avram::Migrator::Columns::Float64Column(T)","name":"Float64Column","abstract":false,"superclass":{"html_id":"avram/Avram/Migrator/Columns/FloatColumn","kind":"class","full_name":"Avram::Migrator::Columns::FloatColumn","name":"FloatColumn"},"ancestors":[{"html_id":"avram/Avram/Migrator/Columns/FloatColumn","kind":"class","full_name":"Avram::Migrator::Columns::FloatColumn","name":"FloatColumn"},{"html_id":"avram/Avram/Migrator/Columns/Base","kind":"class","full_name":"Avram::Migrator::Columns::Base","name":"Base"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Avram/Migrator/Columns","kind":"module","full_name":"Avram::Migrator::Columns","name":"Columns"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(name,nilable,default,precision,scale)-class-method","html_id":"new(name,nilable,default,precision,scale)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"nilable","doc":null,"default_value":"","external_name":"nilable","restriction":""},{"name":"default","doc":null,"default_value":"","external_name":"default","restriction":""},{"name":"precision","doc":null,"default_value":"","external_name":"precision","restriction":""},{"name":"scale","doc":null,"default_value":"","external_name":"scale","restriction":""}],"args_string":"(name, nilable, default, precision, scale)","args_html":"(name, nilable, default, precision, scale)","location":{"filename":"src/avram/migrator/columns/float_column.cr","line_number":11,"url":null},"def":{"name":"new","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"nilable","doc":null,"default_value":"","external_name":"nilable","restriction":""},{"name":"default","doc":null,"default_value":"","external_name":"default","restriction":""},{"name":"precision","doc":null,"default_value":"","external_name":"precision","restriction":""},{"name":"scale","doc":null,"default_value":"","external_name":"scale","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = Float64Column(T).allocate\n_.initialize(name, nilable, default, precision, scale)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(name,nilable,default)-class-method","html_id":"new(name,nilable,default)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"nilable","doc":null,"default_value":"","external_name":"nilable","restriction":""},{"name":"default","doc":null,"default_value":"","external_name":"default","restriction":""}],"args_string":"(name, nilable, default)","args_html":"(name, nilable, default)","location":{"filename":"src/avram/migrator/columns/float_column.cr","line_number":14,"url":null},"def":{"name":"new","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"nilable","doc":null,"default_value":"","external_name":"nilable","restriction":""},{"name":"default","doc":null,"default_value":"","external_name":"default","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = Float64Column(T).allocate\n_.initialize(name, nilable, default)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[],"macros":[],"types":[]},{"html_id":"avram/Avram/Migrator/Columns/FloatColumn","path":"Avram/Migrator/Columns/FloatColumn.html","kind":"class","full_name":"Avram::Migrator::Columns::FloatColumn(T)","name":"FloatColumn","abstract":true,"superclass":{"html_id":"avram/Avram/Migrator/Columns/Base","kind":"class","full_name":"Avram::Migrator::Columns::Base","name":"Base"},"ancestors":[{"html_id":"avram/Avram/Migrator/Columns/Base","kind":"class","full_name":"Avram::Migrator::Columns::Base","name":"Base"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"avram/Avram/Migrator/Columns/Float32Column","kind":"class","full_name":"Avram::Migrator::Columns::Float32Column(T)","name":"Float32Column"},{"html_id":"avram/Avram/Migrator/Columns/Float64Column","kind":"class","full_name":"Avram::Migrator::Columns::Float64Column(T)","name":"Float64Column"}],"including_types":[],"namespace":{"html_id":"avram/Avram/Migrator/Columns","kind":"module","full_name":"Avram::Migrator::Columns","name":"Columns"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(name,nilable,default,precision,scale)-class-method","html_id":"new(name,nilable,default,precision,scale)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"nilable","doc":null,"default_value":"","external_name":"nilable","restriction":""},{"name":"default","doc":null,"default_value":"","external_name":"default","restriction":""},{"name":"precision","doc":null,"default_value":"","external_name":"precision","restriction":""},{"name":"scale","doc":null,"default_value":"","external_name":"scale","restriction":""}],"args_string":"(name, nilable, default, precision, scale)","args_html":"(name, nilable, default, precision, scale)","location":{"filename":"src/avram/migrator/columns/float_column.cr","line_number":11,"url":null},"def":{"name":"new","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"nilable","doc":null,"default_value":"","external_name":"nilable","restriction":""},{"name":"default","doc":null,"default_value":"","external_name":"default","restriction":""},{"name":"precision","doc":null,"default_value":"","external_name":"precision","restriction":""},{"name":"scale","doc":null,"default_value":"","external_name":"scale","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = FloatColumn(T).allocate\n_.initialize(name, nilable, default, precision, scale)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(name,nilable,default)-class-method","html_id":"new(name,nilable,default)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"nilable","doc":null,"default_value":"","external_name":"nilable","restriction":""},{"name":"default","doc":null,"default_value":"","external_name":"default","restriction":""}],"args_string":"(name, nilable, default)","args_html":"(name, nilable, default)","location":{"filename":"src/avram/migrator/columns/float_column.cr","line_number":14,"url":null},"def":{"name":"new","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"nilable","doc":null,"default_value":"","external_name":"nilable","restriction":""},{"name":"default","doc":null,"default_value":"","external_name":"default","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = FloatColumn(T).allocate\n_.initialize(name, nilable, default)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"column_type:String-instance-method","html_id":"column_type:String-instance-method","name":"column_type","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","args_html":" : <a href=\"../../../String.html\">String</a>","location":{"filename":"src/avram/migrator/columns/float_column.cr","line_number":17,"url":null},"def":{"name":"column_type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"if precision && scale\n  \"decimal(#{precision},#{scale})\"\nelse\n  \"decimal\"\nend"}}],"macros":[],"types":[]},{"html_id":"avram/Avram/Migrator/Columns/Int16Column","path":"Avram/Migrator/Columns/Int16Column.html","kind":"class","full_name":"Avram::Migrator::Columns::Int16Column(T)","name":"Int16Column","abstract":false,"superclass":{"html_id":"avram/Avram/Migrator/Columns/Base","kind":"class","full_name":"Avram::Migrator::Columns::Base","name":"Base"},"ancestors":[{"html_id":"avram/Avram/Migrator/Columns/Base","kind":"class","full_name":"Avram::Migrator::Columns::Base","name":"Base"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Avram/Migrator/Columns","kind":"module","full_name":"Avram::Migrator::Columns","name":"Columns"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(name,nilable,default)-class-method","html_id":"new(name,nilable,default)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"nilable","doc":null,"default_value":"","external_name":"nilable","restriction":""},{"name":"default","doc":null,"default_value":"","external_name":"default","restriction":""}],"args_string":"(name, nilable, default)","args_html":"(name, nilable, default)","location":{"filename":"src/avram/migrator/columns/int16_column.cr","line_number":7,"url":null},"def":{"name":"new","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"nilable","doc":null,"default_value":"","external_name":"nilable","restriction":""},{"name":"default","doc":null,"default_value":"","external_name":"default","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = Int16Column(T).allocate\n_.initialize(name, nilable, default)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"column_type:String-instance-method","html_id":"column_type:String-instance-method","name":"column_type","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","args_html":" : <a href=\"../../../String.html\">String</a>","location":{"filename":"src/avram/migrator/columns/int16_column.cr","line_number":10,"url":null},"def":{"name":"column_type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"\"smallint\""}}],"macros":[],"types":[]},{"html_id":"avram/Avram/Migrator/Columns/Int32Column","path":"Avram/Migrator/Columns/Int32Column.html","kind":"class","full_name":"Avram::Migrator::Columns::Int32Column(T)","name":"Int32Column","abstract":false,"superclass":{"html_id":"avram/Avram/Migrator/Columns/Base","kind":"class","full_name":"Avram::Migrator::Columns::Base","name":"Base"},"ancestors":[{"html_id":"avram/Avram/Migrator/Columns/Base","kind":"class","full_name":"Avram::Migrator::Columns::Base","name":"Base"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Avram/Migrator/Columns","kind":"module","full_name":"Avram::Migrator::Columns","name":"Columns"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(name,nilable,default)-class-method","html_id":"new(name,nilable,default)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"nilable","doc":null,"default_value":"","external_name":"nilable","restriction":""},{"name":"default","doc":null,"default_value":"","external_name":"default","restriction":""}],"args_string":"(name, nilable, default)","args_html":"(name, nilable, default)","location":{"filename":"src/avram/migrator/columns/int32_column.cr","line_number":7,"url":null},"def":{"name":"new","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"nilable","doc":null,"default_value":"","external_name":"nilable","restriction":""},{"name":"default","doc":null,"default_value":"","external_name":"default","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = Int32Column(T).allocate\n_.initialize(name, nilable, default)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"column_type:String-instance-method","html_id":"column_type:String-instance-method","name":"column_type","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","args_html":" : <a href=\"../../../String.html\">String</a>","location":{"filename":"src/avram/migrator/columns/int32_column.cr","line_number":10,"url":null},"def":{"name":"column_type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"\"int\""}}],"macros":[],"types":[]},{"html_id":"avram/Avram/Migrator/Columns/Int64Column","path":"Avram/Migrator/Columns/Int64Column.html","kind":"class","full_name":"Avram::Migrator::Columns::Int64Column(T)","name":"Int64Column","abstract":false,"superclass":{"html_id":"avram/Avram/Migrator/Columns/Base","kind":"class","full_name":"Avram::Migrator::Columns::Base","name":"Base"},"ancestors":[{"html_id":"avram/Avram/Migrator/Columns/Base","kind":"class","full_name":"Avram::Migrator::Columns::Base","name":"Base"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Avram/Migrator/Columns","kind":"module","full_name":"Avram::Migrator::Columns","name":"Columns"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(name,nilable,default)-class-method","html_id":"new(name,nilable,default)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"nilable","doc":null,"default_value":"","external_name":"nilable","restriction":""},{"name":"default","doc":null,"default_value":"","external_name":"default","restriction":""}],"args_string":"(name, nilable, default)","args_html":"(name, nilable, default)","location":{"filename":"src/avram/migrator/columns/int64_column.cr","line_number":7,"url":null},"def":{"name":"new","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"nilable","doc":null,"default_value":"","external_name":"nilable","restriction":""},{"name":"default","doc":null,"default_value":"","external_name":"default","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = Int64Column(T).allocate\n_.initialize(name, nilable, default)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"column_type:String-instance-method","html_id":"column_type:String-instance-method","name":"column_type","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","args_html":" : <a href=\"../../../String.html\">String</a>","location":{"filename":"src/avram/migrator/columns/int64_column.cr","line_number":10,"url":null},"def":{"name":"column_type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"\"bigint\""}}],"macros":[],"types":[]},{"html_id":"avram/Avram/Migrator/Columns/JSON","path":"Avram/Migrator/Columns/JSON.html","kind":"module","full_name":"Avram::Migrator::Columns::JSON","name":"JSON","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Avram/Migrator/Columns","kind":"module","full_name":"Avram::Migrator::Columns","name":"Columns"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"avram/Avram/Migrator/Columns/JSON/AnyColumn","path":"Avram/Migrator/Columns/JSON/AnyColumn.html","kind":"class","full_name":"Avram::Migrator::Columns::JSON::AnyColumn(T)","name":"AnyColumn","abstract":false,"superclass":{"html_id":"avram/Avram/Migrator/Columns/Base","kind":"class","full_name":"Avram::Migrator::Columns::Base","name":"Base"},"ancestors":[{"html_id":"avram/Avram/Migrator/Columns/Base","kind":"class","full_name":"Avram::Migrator::Columns::Base","name":"Base"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Avram/Migrator/Columns/JSON","kind":"module","full_name":"Avram::Migrator::Columns::JSON","name":"JSON"},"doc":null,"summary":null,"class_methods":[{"id":"prepare_value_for_database(value)-class-method","html_id":"prepare_value_for_database(value)-class-method","name":"prepare_value_for_database","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(value)","args_html":"(value)","location":{"filename":"src/avram/migrator/columns/json_column.cr","line_number":14,"url":null},"def":{"name":"prepare_value_for_database","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"escape_literal(value.to_json)"}}],"constructors":[{"id":"new(name,nilable,default)-class-method","html_id":"new(name,nilable,default)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"nilable","doc":null,"default_value":"","external_name":"nilable","restriction":""},{"name":"default","doc":null,"default_value":"","external_name":"default","restriction":""}],"args_string":"(name, nilable, default)","args_html":"(name, nilable, default)","location":{"filename":"src/avram/migrator/columns/json_column.cr","line_number":7,"url":null},"def":{"name":"new","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"nilable","doc":null,"default_value":"","external_name":"nilable","restriction":""},{"name":"default","doc":null,"default_value":"","external_name":"default","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = AnyColumn(T).allocate\n_.initialize(name, nilable, default)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"column_type:String-instance-method","html_id":"column_type:String-instance-method","name":"column_type","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","args_html":" : <a href=\"../../../../String.html\">String</a>","location":{"filename":"src/avram/migrator/columns/json_column.cr","line_number":10,"url":null},"def":{"name":"column_type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"\"jsonb\""}}],"macros":[],"types":[]}]},{"html_id":"avram/Avram/Migrator/Columns/PrimaryKeys","path":"Avram/Migrator/Columns/PrimaryKeys.html","kind":"module","full_name":"Avram::Migrator::Columns::PrimaryKeys","name":"PrimaryKeys","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Avram/Migrator/Columns","kind":"module","full_name":"Avram::Migrator::Columns","name":"Columns"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"avram/Avram/Migrator/Columns/PrimaryKeys/Base","path":"Avram/Migrator/Columns/PrimaryKeys/Base.html","kind":"class","full_name":"Avram::Migrator::Columns::PrimaryKeys::Base","name":"Base","abstract":true,"superclass":{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"avram/Avram/Migrator/Columns/PrimaryKeys/Int16PrimaryKey","kind":"class","full_name":"Avram::Migrator::Columns::PrimaryKeys::Int16PrimaryKey","name":"Int16PrimaryKey"},{"html_id":"avram/Avram/Migrator/Columns/PrimaryKeys/Int32PrimaryKey","kind":"class","full_name":"Avram::Migrator::Columns::PrimaryKeys::Int32PrimaryKey","name":"Int32PrimaryKey"},{"html_id":"avram/Avram/Migrator/Columns/PrimaryKeys/Int64PrimaryKey","kind":"class","full_name":"Avram::Migrator::Columns::PrimaryKeys::Int64PrimaryKey","name":"Int64PrimaryKey"},{"html_id":"avram/Avram/Migrator/Columns/PrimaryKeys/UUIDPrimaryKey","kind":"class","full_name":"Avram::Migrator::Columns::PrimaryKeys::UUIDPrimaryKey","name":"UUIDPrimaryKey"}],"including_types":[],"namespace":{"html_id":"avram/Avram/Migrator/Columns/PrimaryKeys","kind":"module","full_name":"Avram::Migrator::Columns::PrimaryKeys","name":"PrimaryKeys"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"build:String-instance-method","html_id":"build:String-instance-method","name":"build","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","args_html":" : <a href=\"../../../../String.html\">String</a>","location":{"filename":"src/avram/migrator/columns/primary_keys/base.cr","line_number":8,"url":null},"def":{"name":"build","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"\"  #{name} #{column_type} PRIMARY KEY\""}},{"id":"column_type-instance-method","html_id":"column_type-instance-method","name":"column_type","doc":null,"summary":null,"abstract":true,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/migrator/columns/primary_keys/base.cr","line_number":6,"url":null},"def":{"name":"column_type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}}],"macros":[],"types":[]},{"html_id":"avram/Avram/Migrator/Columns/PrimaryKeys/Int16PrimaryKey","path":"Avram/Migrator/Columns/PrimaryKeys/Int16PrimaryKey.html","kind":"class","full_name":"Avram::Migrator::Columns::PrimaryKeys::Int16PrimaryKey","name":"Int16PrimaryKey","abstract":false,"superclass":{"html_id":"avram/Avram/Migrator/Columns/PrimaryKeys/Base","kind":"class","full_name":"Avram::Migrator::Columns::PrimaryKeys::Base","name":"Base"},"ancestors":[{"html_id":"avram/Avram/Migrator/Columns/PrimaryKeys/Base","kind":"class","full_name":"Avram::Migrator::Columns::PrimaryKeys::Base","name":"Base"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Avram/Migrator/Columns/PrimaryKeys","kind":"module","full_name":"Avram::Migrator::Columns::PrimaryKeys","name":"PrimaryKeys"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(name)-class-method","html_id":"new(name)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""}],"args_string":"(name)","args_html":"(name)","location":{"filename":"src/avram/migrator/columns/primary_keys/int16_primary_key.cr","line_number":5,"url":null},"def":{"name":"new","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(name)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"column_type:String-instance-method","html_id":"column_type:String-instance-method","name":"column_type","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","args_html":" : <a href=\"../../../../String.html\">String</a>","location":{"filename":"src/avram/migrator/columns/primary_keys/int16_primary_key.cr","line_number":8,"url":null},"def":{"name":"column_type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"\"smallserial\""}}],"macros":[],"types":[]},{"html_id":"avram/Avram/Migrator/Columns/PrimaryKeys/Int32PrimaryKey","path":"Avram/Migrator/Columns/PrimaryKeys/Int32PrimaryKey.html","kind":"class","full_name":"Avram::Migrator::Columns::PrimaryKeys::Int32PrimaryKey","name":"Int32PrimaryKey","abstract":false,"superclass":{"html_id":"avram/Avram/Migrator/Columns/PrimaryKeys/Base","kind":"class","full_name":"Avram::Migrator::Columns::PrimaryKeys::Base","name":"Base"},"ancestors":[{"html_id":"avram/Avram/Migrator/Columns/PrimaryKeys/Base","kind":"class","full_name":"Avram::Migrator::Columns::PrimaryKeys::Base","name":"Base"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Avram/Migrator/Columns/PrimaryKeys","kind":"module","full_name":"Avram::Migrator::Columns::PrimaryKeys","name":"PrimaryKeys"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(name)-class-method","html_id":"new(name)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""}],"args_string":"(name)","args_html":"(name)","location":{"filename":"src/avram/migrator/columns/primary_keys/int32_primary_key.cr","line_number":5,"url":null},"def":{"name":"new","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(name)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"column_type:String-instance-method","html_id":"column_type:String-instance-method","name":"column_type","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","args_html":" : <a href=\"../../../../String.html\">String</a>","location":{"filename":"src/avram/migrator/columns/primary_keys/int32_primary_key.cr","line_number":8,"url":null},"def":{"name":"column_type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"\"serial\""}}],"macros":[],"types":[]},{"html_id":"avram/Avram/Migrator/Columns/PrimaryKeys/Int64PrimaryKey","path":"Avram/Migrator/Columns/PrimaryKeys/Int64PrimaryKey.html","kind":"class","full_name":"Avram::Migrator::Columns::PrimaryKeys::Int64PrimaryKey","name":"Int64PrimaryKey","abstract":false,"superclass":{"html_id":"avram/Avram/Migrator/Columns/PrimaryKeys/Base","kind":"class","full_name":"Avram::Migrator::Columns::PrimaryKeys::Base","name":"Base"},"ancestors":[{"html_id":"avram/Avram/Migrator/Columns/PrimaryKeys/Base","kind":"class","full_name":"Avram::Migrator::Columns::PrimaryKeys::Base","name":"Base"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Avram/Migrator/Columns/PrimaryKeys","kind":"module","full_name":"Avram::Migrator::Columns::PrimaryKeys","name":"PrimaryKeys"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(name)-class-method","html_id":"new(name)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""}],"args_string":"(name)","args_html":"(name)","location":{"filename":"src/avram/migrator/columns/primary_keys/int64_primary_key.cr","line_number":5,"url":null},"def":{"name":"new","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(name)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"column_type:String-instance-method","html_id":"column_type:String-instance-method","name":"column_type","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","args_html":" : <a href=\"../../../../String.html\">String</a>","location":{"filename":"src/avram/migrator/columns/primary_keys/int64_primary_key.cr","line_number":8,"url":null},"def":{"name":"column_type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"\"bigserial\""}}],"macros":[],"types":[]},{"html_id":"avram/Avram/Migrator/Columns/PrimaryKeys/UUIDPrimaryKey","path":"Avram/Migrator/Columns/PrimaryKeys/UUIDPrimaryKey.html","kind":"class","full_name":"Avram::Migrator::Columns::PrimaryKeys::UUIDPrimaryKey","name":"UUIDPrimaryKey","abstract":false,"superclass":{"html_id":"avram/Avram/Migrator/Columns/PrimaryKeys/Base","kind":"class","full_name":"Avram::Migrator::Columns::PrimaryKeys::Base","name":"Base"},"ancestors":[{"html_id":"avram/Avram/Migrator/Columns/PrimaryKeys/Base","kind":"class","full_name":"Avram::Migrator::Columns::PrimaryKeys::Base","name":"Base"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Avram/Migrator/Columns/PrimaryKeys","kind":"module","full_name":"Avram::Migrator::Columns::PrimaryKeys","name":"PrimaryKeys"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(name)-class-method","html_id":"new(name)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""}],"args_string":"(name)","args_html":"(name)","location":{"filename":"src/avram/migrator/columns/primary_keys/uuid_primary_key.cr","line_number":5,"url":null},"def":{"name":"new","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(name)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"build:String-instance-method","html_id":"build:String-instance-method","name":"build","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","args_html":" : <a href=\"../../../../String.html\">String</a>","location":{"filename":"src/avram/migrator/columns/primary_keys/uuid_primary_key.cr","line_number":12,"url":null},"def":{"name":"build","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"\"  #{name} #{column_type} PRIMARY KEY DEFAULT gen_random_uuid()\""}},{"id":"column_type:String-instance-method","html_id":"column_type:String-instance-method","name":"column_type","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","args_html":" : <a href=\"../../../../String.html\">String</a>","location":{"filename":"src/avram/migrator/columns/primary_keys/uuid_primary_key.cr","line_number":8,"url":null},"def":{"name":"column_type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"\"uuid\""}}],"macros":[],"types":[]}]},{"html_id":"avram/Avram/Migrator/Columns/StringColumn","path":"Avram/Migrator/Columns/StringColumn.html","kind":"class","full_name":"Avram::Migrator::Columns::StringColumn(T)","name":"StringColumn","abstract":false,"superclass":{"html_id":"avram/Avram/Migrator/Columns/Base","kind":"class","full_name":"Avram::Migrator::Columns::Base","name":"Base"},"ancestors":[{"html_id":"avram/Avram/Migrator/Columns/Base","kind":"class","full_name":"Avram::Migrator::Columns::Base","name":"Base"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Avram/Migrator/Columns","kind":"module","full_name":"Avram::Migrator::Columns","name":"Columns"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(name,nilable,default,case_sensitive=true)-class-method","html_id":"new(name,nilable,default,case_sensitive=true)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"nilable","doc":null,"default_value":"","external_name":"nilable","restriction":""},{"name":"default","doc":null,"default_value":"","external_name":"default","restriction":""},{"name":"case_sensitive","doc":null,"default_value":"true","external_name":"case_sensitive","restriction":""}],"args_string":"(name, nilable, default, case_sensitive = <span class=\"n\">true</span>)","args_html":"(name, nilable, default, case_sensitive = <span class=\"n\">true</span>)","location":{"filename":"src/avram/migrator/columns/string_column.cr","line_number":8,"url":null},"def":{"name":"new","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"nilable","doc":null,"default_value":"","external_name":"nilable","restriction":""},{"name":"default","doc":null,"default_value":"","external_name":"default","restriction":""},{"name":"case_sensitive","doc":null,"default_value":"true","external_name":"case_sensitive","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = StringColumn(T).allocate\n_.initialize(name, nilable, default, case_sensitive)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"column_type:String-instance-method","html_id":"column_type:String-instance-method","name":"column_type","doc":"If `case_sensitive?` is false then the column type is set to `citext`\nwhich requires the `citext` extension to be enabled\notherwise the type is `text`","summary":"<p>If <code>case_sensitive?</code> is false then the column type is set to <code>citext</code> which requires the <code>citext</code> extension to be enabled otherwise the type is <code>text</code></p>","abstract":false,"args":[],"args_string":" : String","args_html":" : <a href=\"../../../String.html\">String</a>","location":{"filename":"src/avram/migrator/columns/string_column.cr","line_number":14,"url":null},"def":{"name":"column_type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"case_sensitive? ? \"text\" : \"citext\""}}],"macros":[],"types":[]},{"html_id":"avram/Avram/Migrator/Columns/TimeColumn","path":"Avram/Migrator/Columns/TimeColumn.html","kind":"class","full_name":"Avram::Migrator::Columns::TimeColumn(T)","name":"TimeColumn","abstract":false,"superclass":{"html_id":"avram/Avram/Migrator/Columns/Base","kind":"class","full_name":"Avram::Migrator::Columns::Base","name":"Base"},"ancestors":[{"html_id":"avram/Avram/Migrator/Columns/Base","kind":"class","full_name":"Avram::Migrator::Columns::Base","name":"Base"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Avram/Migrator/Columns","kind":"module","full_name":"Avram::Migrator::Columns","name":"Columns"},"doc":null,"summary":null,"class_methods":[{"id":"prepare_value_for_database(value)-class-method","html_id":"prepare_value_for_database(value)-class-method","name":"prepare_value_for_database","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(value)","args_html":"(value)","location":{"filename":"src/avram/migrator/columns/time_column.cr","line_number":14,"url":null},"def":{"name":"prepare_value_for_database","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if value == (:now)\n  \"NOW()\"\nelse\n  if value.is_a?(Time)\n    escape_literal(value.to_utc.to_s)\n  else\n    raise(\"Unrecognized value :#{value} for a timestamptz. Please use a Time object or :now for current timestamp.\")\n  end\nend"}}],"constructors":[{"id":"new(name,nilable,default)-class-method","html_id":"new(name,nilable,default)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"nilable","doc":null,"default_value":"","external_name":"nilable","restriction":""},{"name":"default","doc":null,"default_value":"","external_name":"default","restriction":""}],"args_string":"(name, nilable, default)","args_html":"(name, nilable, default)","location":{"filename":"src/avram/migrator/columns/time_column.cr","line_number":7,"url":null},"def":{"name":"new","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"nilable","doc":null,"default_value":"","external_name":"nilable","restriction":""},{"name":"default","doc":null,"default_value":"","external_name":"default","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = TimeColumn(T).allocate\n_.initialize(name, nilable, default)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"column_type:String-instance-method","html_id":"column_type:String-instance-method","name":"column_type","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","args_html":" : <a href=\"../../../String.html\">String</a>","location":{"filename":"src/avram/migrator/columns/time_column.cr","line_number":10,"url":null},"def":{"name":"column_type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"\"timestamptz\""}}],"macros":[],"types":[]},{"html_id":"avram/Avram/Migrator/Columns/UUIDColumn","path":"Avram/Migrator/Columns/UUIDColumn.html","kind":"class","full_name":"Avram::Migrator::Columns::UUIDColumn(T)","name":"UUIDColumn","abstract":false,"superclass":{"html_id":"avram/Avram/Migrator/Columns/Base","kind":"class","full_name":"Avram::Migrator::Columns::Base","name":"Base"},"ancestors":[{"html_id":"avram/Avram/Migrator/Columns/Base","kind":"class","full_name":"Avram::Migrator::Columns::Base","name":"Base"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Avram/Migrator/Columns","kind":"module","full_name":"Avram::Migrator::Columns","name":"Columns"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(name,nilable,default)-class-method","html_id":"new(name,nilable,default)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"nilable","doc":null,"default_value":"","external_name":"nilable","restriction":""},{"name":"default","doc":null,"default_value":"","external_name":"default","restriction":""}],"args_string":"(name, nilable, default)","args_html":"(name, nilable, default)","location":{"filename":"src/avram/migrator/columns/uuid_column.cr","line_number":7,"url":null},"def":{"name":"new","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"nilable","doc":null,"default_value":"","external_name":"nilable","restriction":""},{"name":"default","doc":null,"default_value":"","external_name":"default","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = UUIDColumn(T).allocate\n_.initialize(name, nilable, default)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"column_type:String-instance-method","html_id":"column_type:String-instance-method","name":"column_type","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","args_html":" : <a href=\"../../../String.html\">String</a>","location":{"filename":"src/avram/migrator/columns/uuid_column.cr","line_number":10,"url":null},"def":{"name":"column_type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"\"uuid\""}}],"macros":[],"types":[]}]},{"html_id":"avram/Avram/Migrator/CreateExtensionStatement","path":"Avram/Migrator/CreateExtensionStatement.html","kind":"class","full_name":"Avram::Migrator::CreateExtensionStatement","name":"CreateExtensionStatement","abstract":false,"superclass":{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Avram/Migrator","kind":"module","full_name":"Avram::Migrator","name":"Migrator"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(name:String)-class-method","html_id":"new(name:String)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"args_string":"(name : String)","args_html":"(name : <a href=\"../../String.html\">String</a>)","location":{"filename":"src/avram/migrator/create_extension_statement.cr","line_number":2,"url":null},"def":{"name":"new","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(name)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"build-instance-method","html_id":"build-instance-method","name":"build","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/migrator/create_extension_statement.cr","line_number":5,"url":null},"def":{"name":"build","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"CREATE EXTENSION IF NOT EXISTS \\\"#{@name}\\\";\""}}],"macros":[],"types":[]},{"html_id":"avram/Avram/Migrator/CreateForeignKeyStatement","path":"Avram/Migrator/CreateForeignKeyStatement.html","kind":"class","full_name":"Avram::Migrator::CreateForeignKeyStatement","name":"CreateForeignKeyStatement","abstract":false,"superclass":{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Avram/Migrator","kind":"module","full_name":"Avram::Migrator","name":"Migrator"},"doc":"Generates an ALTER TABLE statement for adding a foreign key constraint on a table.\n\n### Usage\n\n```\nCreateForeignKeyStatement.new(from: :comments, to: :users, column: :author_id, primary_key: :uid, on_delete: :cascade).build\n# => \"ALTER TABLE comments ADD CONSTRAINT comments_author_id_fk FOREIGN KEY (author_id) REFERENCES users (uid) ON DELETE CASCADE;\"\n```","summary":"<p>Generates an ALTER TABLE statement for adding a foreign key constraint on a table.</p>","class_methods":[],"constructors":[{"id":"new(from:Symbol,to:Symbol,on_delete:Symbol,column:Symbol?=nil,primary_key=:id)-class-method","html_id":"new(from:Symbol,to:Symbol,on_delete:Symbol,column:Symbol?=nil,primary_key=:id)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"from","doc":null,"default_value":"","external_name":"from","restriction":"Symbol"},{"name":"to","doc":null,"default_value":"","external_name":"to","restriction":"Symbol"},{"name":"on_delete","doc":null,"default_value":"","external_name":"on_delete","restriction":"Symbol"},{"name":"column","doc":null,"default_value":"nil","external_name":"column","restriction":"Symbol | ::Nil"},{"name":"primary_key","doc":null,"default_value":":id","external_name":"primary_key","restriction":""}],"args_string":"(from : Symbol, to : Symbol, on_delete : Symbol, column : Symbol? = <span class=\"n\">nil</span>, primary_key = <span class=\"n\">:id</span>)","args_html":"(from : Symbol, to : Symbol, on_delete : Symbol, column : Symbol? = <span class=\"n\">nil</span>, primary_key = <span class=\"n\">:id</span>)","location":{"filename":"src/avram/migrator/create_foreign_key_statement.cr","line_number":10,"url":null},"def":{"name":"new","args":[{"name":"from","doc":null,"default_value":"","external_name":"from","restriction":"Symbol"},{"name":"to","doc":null,"default_value":"","external_name":"to","restriction":"Symbol"},{"name":"on_delete","doc":null,"default_value":"","external_name":"on_delete","restriction":"Symbol"},{"name":"column","doc":null,"default_value":"nil","external_name":"column","restriction":"Symbol | ::Nil"},{"name":"primary_key","doc":null,"default_value":":id","external_name":"primary_key","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(from, to, on_delete, column, primary_key)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"build-instance-method","html_id":"build-instance-method","name":"build","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/migrator/create_foreign_key_statement.cr","line_number":13,"url":null},"def":{"name":"build","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"foreign_key = @column || ((Wordsmith::Inflector.singularize(@to.to_s)) + \"_id\")\nString.build do |index|\n  index << \"ALTER TABLE\"\n  index << \" #{@from}\"\n  index << \" ADD CONSTRAINT #{@from}_#{foreign_key}_fk\"\n  index << \" FOREIGN KEY (#{foreign_key})\"\n  index << (BuildReferenceFragment.new(\"#{@to} (#{@primary_key})\", @on_delete)).build\n  index << \";\"\nend\n"}}],"macros":[],"types":[]},{"html_id":"avram/Avram/Migrator/CreateFunctionStatement","path":"Avram/Migrator/CreateFunctionStatement.html","kind":"class","full_name":"Avram::Migrator::CreateFunctionStatement","name":"CreateFunctionStatement","abstract":false,"superclass":{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Avram/Migrator","kind":"module","full_name":"Avram::Migrator","name":"Migrator"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(name:String,body:String,returns:String=&quot;trigger&quot;)-class-method","html_id":"new(name:String,body:String,returns:String=&quot;trigger&quot;)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"body","doc":null,"default_value":"","external_name":"body","restriction":"String"},{"name":"returns","doc":null,"default_value":"\"trigger\"","external_name":"returns","restriction":"String"}],"args_string":"(name : String, body : String, returns : String = <span class=\"s\">&quot;trigger&quot;</span>)","args_html":"(name : <a href=\"../../String.html\">String</a>, body : <a href=\"../../String.html\">String</a>, returns : <a href=\"../../String.html\">String</a> = <span class=\"s\">&quot;trigger&quot;</span>)","location":{"filename":"src/avram/migrator/create_function_statement.cr","line_number":2,"url":null},"def":{"name":"new","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"body","doc":null,"default_value":"","external_name":"body","restriction":"String"},{"name":"returns","doc":null,"default_value":"\"trigger\"","external_name":"returns","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(name, body, returns)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"build-instance-method","html_id":"build-instance-method","name":"build","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/migrator/create_function_statement.cr","line_number":13,"url":null},"def":{"name":"build","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"CREATE OR REPLACE FUNCTION #{function_name}\\n  RETURNS #{@returns} AS $$\\nBEGIN\\n  #{@body}\\nEND\\n$$ LANGUAGE 'plpgsql';\""}},{"id":"function_name-instance-method","html_id":"function_name-instance-method","name":"function_name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/migrator/create_function_statement.cr","line_number":5,"url":null},"def":{"name":"function_name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if @name.ends_with?(')')\n  @name\nelse\n  \"#{@name}()\"\nend"}}],"macros":[],"types":[]},{"html_id":"avram/Avram/Migrator/CreateIndexStatement","path":"Avram/Migrator/CreateIndexStatement.html","kind":"class","full_name":"Avram::Migrator::CreateIndexStatement","name":"CreateIndexStatement","abstract":false,"superclass":{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"avram/Avram/Migrator/IndexStatementHelpers","kind":"module","full_name":"Avram::Migrator::IndexStatementHelpers","name":"IndexStatementHelpers"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[{"id":"ALLOWED_INDEX_TYPES","name":"ALLOWED_INDEX_TYPES","value":"[\"btree\"] of ::String","doc":null,"summary":null}],"included_modules":[{"html_id":"avram/Avram/Migrator/IndexStatementHelpers","kind":"module","full_name":"Avram::Migrator::IndexStatementHelpers","name":"IndexStatementHelpers"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Avram/Migrator","kind":"module","full_name":"Avram::Migrator","name":"Migrator"},"doc":"Builds an SQL statement for creating an index using table name, column\nname(s), index type and unique flag.\n\n### Usage\n\nFor a single column:\n\n```\nCreateIndexStatement.new(:users, columns: :email, using: :btree, unique: true).build\n# => \"CREATE UNIQUE INDEX users_email_index ON users USING btree (email);\"\n```\n\nFor multiple columns:\n\n```\nCreateIndexStatement.new(:users, columns: [:email, :username], using: :btree, unique: true).build\n# => \"CREATE UNIQUE INDEX users_email_username_index ON users USING btree (email, username);\"\n```\n\nWith custom name:\n\n```\nCreateIndexStatement.new(:users, columns: [:email, :username], name: :custom_index_name).build\n# => \"CREATE INDEX custom_index_name ON users USING btree (email, username);\"\n```","summary":"<p>Builds an SQL statement for creating an index using table name, column name(s), index type and unique flag.</p>","class_methods":[],"constructors":[{"id":"new(table:Symbol,columns:Columns,using:Symbol=:btree,unique=false,name:String?|Symbol?=nil)-class-method","html_id":"new(table:Symbol,columns:Columns,using:Symbol=:btree,unique=false,name:String?|Symbol?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"table","doc":null,"default_value":"","external_name":"table","restriction":"Symbol"},{"name":"columns","doc":null,"default_value":"","external_name":"columns","restriction":"Columns"},{"name":"using","doc":null,"default_value":":btree","external_name":"using","restriction":"Symbol"},{"name":"unique","doc":null,"default_value":"false","external_name":"unique","restriction":""},{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":"String | ::Nil | Symbol | ::Nil"}],"args_string":"(table : Symbol, columns : Columns, using : Symbol = <span class=\"n\">:btree</span>, unique = <span class=\"n\">false</span>, name : String? | Symbol? = <span class=\"n\">nil</span>)","args_html":"(table : Symbol, columns : <a href=\"../../Avram/Migrator/IndexStatementHelpers/Columns.html\">Columns</a>, using : Symbol = <span class=\"n\">:btree</span>, unique = <span class=\"n\">false</span>, name : <a href=\"../../String.html\">String</a>? | Symbol? = <span class=\"n\">nil</span>)","location":{"filename":"src/avram/migrator/create_index_statement.cr","line_number":33,"url":null},"def":{"name":"new","args":[{"name":"table","doc":null,"default_value":"","external_name":"table","restriction":"Symbol"},{"name":"columns","doc":null,"default_value":"","external_name":"columns","restriction":"Columns"},{"name":"using","doc":null,"default_value":":btree","external_name":"using","restriction":"Symbol"},{"name":"unique","doc":null,"default_value":"false","external_name":"unique","restriction":""},{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":"String | ::Nil | Symbol | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(table, columns, using, unique, name)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"build-instance-method","html_id":"build-instance-method","name":"build","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/migrator/create_index_statement.cr","line_number":37,"url":null},"def":{"name":"build","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"index_name = @name\nindex_name || (index_name = \"#{@table}_#{columns.join(\"_\")}_index\")\nString.build do |index|\n  index << \"CREATE\"\n  if @unique\n    index << \" UNIQUE\"\n  end\n  index << \" INDEX #{index_name}\"\n  index << \" ON #{@table}\"\n  index << \" USING #{@using}\"\n  index << \" (#{columns.join(\", \")});\"\nend\n"}}],"macros":[],"types":[]},{"html_id":"avram/Avram/Migrator/CreateTableStatement","path":"Avram/Migrator/CreateTableStatement.html","kind":"class","full_name":"Avram::Migrator::CreateTableStatement","name":"CreateTableStatement","abstract":false,"superclass":{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"avram/Avram/Migrator/MissingOnDeleteWithBelongsToError","kind":"module","full_name":"Avram::Migrator::MissingOnDeleteWithBelongsToError","name":"MissingOnDeleteWithBelongsToError"},{"html_id":"avram/Avram/Migrator/IndexStatementHelpers","kind":"module","full_name":"Avram::Migrator::IndexStatementHelpers","name":"IndexStatementHelpers"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[{"html_id":"avram/Avram/Migrator/IndexStatementHelpers","kind":"module","full_name":"Avram::Migrator::IndexStatementHelpers","name":"IndexStatementHelpers"},{"html_id":"avram/Avram/Migrator/MissingOnDeleteWithBelongsToError","kind":"module","full_name":"Avram::Migrator::MissingOnDeleteWithBelongsToError","name":"MissingOnDeleteWithBelongsToError"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Avram/Migrator","kind":"module","full_name":"Avram::Migrator","name":"Migrator"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(table_name:Symbol)-class-method","html_id":"new(table_name:Symbol)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"table_name","doc":null,"default_value":"","external_name":"table_name","restriction":"Symbol"}],"args_string":"(table_name : Symbol)","args_html":"(table_name : Symbol)","location":{"filename":"src/avram/migrator/create_table_statement.cr","line_number":11,"url":null},"def":{"name":"new","args":[{"name":"table_name","doc":null,"default_value":"","external_name":"table_name","restriction":"Symbol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(table_name)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"build(&):CreateTableStatement-instance-method","html_id":"build(&):CreateTableStatement-instance-method","name":"build","doc":"Accepts a block to build a table and indices using `add` and `add_index` methods.\n\nThe generated sql statements are aggregated in the `statements` method.\n\n## Usage\n\n```\nbuilt = Avram::Migrator::CreateTableStatement.new(:users).build do\n  add_belongs_to Account, on_delete: :cascade\n  add :email : String, unique: true\nend\n\nbuilt.statements\n# => [\n  \"CREATE TABLE users (\n    id serial PRIMARY KEY,\n    created_at timestamptz NOT NULL,\n    updated_at timestamptz NOT NULL,\n    account_id bigint NOT NULL REFERENCES accounts (id) ON DELETE CASCADE,\n    email text NOT NULL);\",\n  \"CREATE UNIQUE INDEX users_email_index ON users USING btree (email);\"\n]\n```\n\nAn optional second argument can toggle between the usage of a numeric or uuid\nbased id column.\n\n```\nbuilt = Avram::Migrator::CreateTableStatement.new(:users, PrimaryKeyType::UUID).build do\n  add :email : String, unique: true\nend\n```","summary":"<p>Accepts a block to build a table and indices using <code><a href=\"../../Avram/Migrator/CreateTableStatement.html#add(type_declaration,default=nil,index=false,unique=false,using=:btree,**type_options)-macro\">add</a></code> and <code>add_index</code> methods.</p>","abstract":false,"args":[],"args_string":"(&) : CreateTableStatement","args_html":"(&) : <a href=\"../../Avram/Migrator/CreateTableStatement.html\">CreateTableStatement</a>","location":{"filename":"src/avram/migrator/create_table_statement.cr","line_number":46,"url":null},"def":{"name":"build","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"CreateTableStatement","visibility":"Public","body":"with self yield\nself\n"}},{"id":"statements-instance-method","html_id":"statements-instance-method","name":"statements","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/migrator/create_table_statement.cr","line_number":51,"url":null},"def":{"name":"statements","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"[table_statement] + index_statements"}}],"macros":[{"id":"add(type_declaration,default=nil,index=false,unique=false,using=:btree,**type_options)-macro","html_id":"add(type_declaration,default=nil,index=false,unique=false,using=:btree,**type_options)-macro","name":"add","doc":null,"summary":null,"abstract":false,"args":[{"name":"type_declaration","doc":null,"default_value":"","external_name":"type_declaration","restriction":""},{"name":"default","doc":null,"default_value":"nil","external_name":"default","restriction":""},{"name":"index","doc":null,"default_value":"false","external_name":"index","restriction":""},{"name":"unique","doc":null,"default_value":"false","external_name":"unique","restriction":""},{"name":"using","doc":null,"default_value":":btree","external_name":"using","restriction":""}],"args_string":"(type_declaration, default = <span class=\"n\">nil</span>, index = <span class=\"n\">false</span>, unique = <span class=\"n\">false</span>, using = <span class=\"n\">:btree</span>, **type_options)","location":{"filename":"src/avram/migrator/create_table_statement.cr","line_number":89,"url":null},"def":{"name":"add","args":[{"name":"type_declaration","doc":null,"default_value":"","external_name":"type_declaration","restriction":""},{"name":"default","doc":null,"default_value":"nil","external_name":"default","restriction":""},{"name":"index","doc":null,"default_value":"false","external_name":"index","restriction":""},{"name":"unique","doc":null,"default_value":"false","external_name":"unique","restriction":""},{"name":"using","doc":null,"default_value":":btree","external_name":"using","restriction":""}],"double_splat":{"name":"type_options","doc":null,"default_value":"","external_name":"type_options","restriction":""},"splat_index":null,"block_arg":null,"visibility":"Public","body":"    \n{% type = type_declaration.type %}\n\n    \n{% nilable = false %}\n\n    \n{% array = false %}\n\n    \n{% if type.is_a?(Union) %}\n      {% type = type.types.first %}\n      {% nilable = true %}\n    {% end %}\n\n    \n{% if type.is_a?(Generic) %}\n      {% type = type.type_vars.first %}\n      {% array = true %}\n    {% end %}\n\n\n    rows << Avram::Migrator::Columns::\n{{ type }}\nColumn(\n    \n{% if array %}Array({{ type }}){% else %}{{ type }}{% end %}\n\n    ).new(\n      name: \n{{ type_declaration.var.stringify }}\n,\n      nilable: \n{{ nilable }}\n,\n      default: \n{{ default }}\n,\n      \n{{ **type_options }}\n\n    )\n    \n{% if array %}\n    .array!\n    {% end %}\n\n    .build_add_statement_for_create\n\n    \n{% if index || unique %}\n      add_index :{{ type_declaration.var }}, using: {{ using }}, unique: {{ unique }}\n    {% end %}\n\n  \n"}},{"id":"add_belongs_to(type_declaration,on_delete,references=nil,foreign_key_type=Int64,unique=false)-macro","html_id":"add_belongs_to(type_declaration,on_delete,references=nil,foreign_key_type=Int64,unique=false)-macro","name":"add_belongs_to","doc":"Adds a references column and index given a model class and references option.","summary":"<p>Adds a references column and index given a model class and references option.</p>","abstract":false,"args":[{"name":"type_declaration","doc":null,"default_value":"","external_name":"type_declaration","restriction":""},{"name":"on_delete","doc":null,"default_value":"","external_name":"on_delete","restriction":""},{"name":"references","doc":null,"default_value":"nil","external_name":"references","restriction":""},{"name":"foreign_key_type","doc":null,"default_value":"Int64","external_name":"foreign_key_type","restriction":""},{"name":"unique","doc":null,"default_value":"false","external_name":"unique","restriction":""}],"args_string":"(type_declaration, on_delete, references = <span class=\"n\">nil</span>, foreign_key_type = <span class=\"t\">Int64</span>, unique = <span class=\"n\">false</span>)","location":{"filename":"src/avram/migrator/create_table_statement.cr","line_number":121,"url":null},"def":{"name":"add_belongs_to","args":[{"name":"type_declaration","doc":null,"default_value":"","external_name":"type_declaration","restriction":""},{"name":"on_delete","doc":null,"default_value":"","external_name":"on_delete","restriction":""},{"name":"references","doc":null,"default_value":"nil","external_name":"references","restriction":""},{"name":"foreign_key_type","doc":null,"default_value":"Int64","external_name":"foreign_key_type","restriction":""},{"name":"unique","doc":null,"default_value":"false","external_name":"unique","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    \n{% if type_declaration.is_a?(TypeDeclaration) %}{% else %}\n      {% raise(\"add_belongs_to expected a type declaration like 'user : User', instead got: '#{type_declaration}'\") %}\n    {% end %}\n\n    \n{% optional = type_declaration.type.is_a?(Union) %}\n\n\n    \n{% if optional %}\n      {% underscored_class = type_declaration.type.types.first.stringify.underscore %}\n    {% else %}\n      {% underscored_class = type_declaration.type.stringify.underscore %}\n    {% end %}\n\n\n    \n{% foreign_key_name = type_declaration.var + \"_id\" %}\n\n    \n%table_name\n = \n{{ references }}\n || Wordsmith::Inflector.pluralize(\n{{ underscored_class }}\n)\n\n    rows << Avram::Migrator::Columns::\n{{ foreign_key_type }}\nColumn(\n{{ foreign_key_type }}\n).new(\n      name: \n{{ foreign_key_name.stringify }}\n,\n      nilable: \n{{ optional }}\n,\n      default: nil,\n    )\n    .set_references(references: \n%table_name\n.to_s, on_delete: \n{{ on_delete }}\n)\n    .build_add_statement_for_create\n\n    add_index :\n{{ foreign_key_name }}\n, unique: \n{{ unique }}\n\n  \n"}},{"id":"add_timestamps-macro","html_id":"add_timestamps-macro","name":"add_timestamps","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","location":{"filename":"src/avram/migrator/create_table_statement.cr","line_number":84,"url":null},"def":{"name":"add_timestamps","args":[],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    add created_at : Time\n    add updated_at : Time\n  "}},{"id":"belongs_to(type_declaration,*args,**named_args)-macro","html_id":"belongs_to(type_declaration,*args,**named_args)-macro","name":"belongs_to","doc":null,"summary":null,"abstract":false,"args":[{"name":"type_declaration","doc":null,"default_value":"","external_name":"type_declaration","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(type_declaration, *args, **named_args)","location":{"filename":"src/avram/migrator/create_table_statement.cr","line_number":147,"url":null},"def":{"name":"belongs_to","args":[{"name":"type_declaration","doc":null,"default_value":"","external_name":"type_declaration","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"named_args","doc":null,"default_value":"","external_name":"named_args","restriction":""},"splat_index":1,"block_arg":null,"visibility":"Public","body":"    \n{% raise(\"Unexpected call to `belongs_to` in a migration.\\nFound in #{type_declaration.filename.id}:#{type_declaration.line_number}:#{type_declaration.column_number}.\\n\\nDid you mean to use 'add_belongs_to'?\\n\\n'add_belongs_to #{type_declaration}, ...'\") %}\n\n  \n"}},{"id":"composite_primary_key(*columns)-macro","html_id":"composite_primary_key(*columns)-macro","name":"composite_primary_key","doc":null,"summary":null,"abstract":false,"args":[{"name":"columns","doc":null,"default_value":"","external_name":"columns","restriction":""}],"args_string":"(*columns)","location":{"filename":"src/avram/migrator/create_table_statement.cr","line_number":77,"url":null},"def":{"name":"composite_primary_key","args":[{"name":"columns","doc":null,"default_value":"","external_name":"columns","restriction":""}],"double_splat":null,"splat_index":0,"block_arg":null,"visibility":"Public","body":"    \n{% if columns.size < 2 %}\n    {% raise(\"composite_primary_key expected at least two primary keys, instead got #{columns.size}\") %}\n    {% end %}\n\n    constraints << \"  PRIMARY KEY (\n{{ (columns.join(\", \")).id }}\n)\"\n  \n"}},{"id":"primary_key(type_declaration)-macro","html_id":"primary_key(type_declaration)-macro","name":"primary_key","doc":null,"summary":null,"abstract":false,"args":[{"name":"type_declaration","doc":null,"default_value":"","external_name":"type_declaration","restriction":""}],"args_string":"(type_declaration)","location":{"filename":"src/avram/migrator/create_table_statement.cr","line_number":71,"url":null},"def":{"name":"primary_key","args":[{"name":"type_declaration","doc":null,"default_value":"","external_name":"type_declaration","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    rows << Avram::Migrator::Columns::PrimaryKeys::\n{{ type_declaration.type }}\nPrimaryKey\n      .new(name: \n{{ type_declaration.var.stringify }}\n)\n      .build\n  \n"}}],"types":[]},{"html_id":"avram/Avram/Migrator/CreateTriggerStatement","path":"Avram/Migrator/CreateTriggerStatement.html","kind":"class","full_name":"Avram::Migrator::CreateTriggerStatement","name":"CreateTriggerStatement","abstract":false,"superclass":{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Avram/Migrator","kind":"module","full_name":"Avram::Migrator","name":"Migrator"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(table_name:Symbol,trigger_name:String,function:String,callbacktrigger_when:Symbol=:before,ontrigger_operation:Array(Symbol)=[:update])-class-method","html_id":"new(table_name:Symbol,trigger_name:String,function:String,callbacktrigger_when:Symbol=:before,ontrigger_operation:Array(Symbol)=[:update])-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"table_name","doc":null,"default_value":"","external_name":"table_name","restriction":"Symbol"},{"name":"trigger_name","doc":null,"default_value":"","external_name":"trigger_name","restriction":"String"},{"name":"function","doc":null,"default_value":"","external_name":"function","restriction":"String"},{"name":"trigger_when","doc":null,"default_value":":before","external_name":"callback","restriction":"Symbol"},{"name":"trigger_operation","doc":null,"default_value":"[:update]","external_name":"on","restriction":"Array(Symbol)"}],"args_string":"(table_name : Symbol, trigger_name : String, function : String, callback trigger_when : Symbol = <span class=\"n\">:before</span>, on trigger_operation : Array(Symbol) = [<span class=\"n\">:update</span>])","args_html":"(table_name : Symbol, trigger_name : <a href=\"../../String.html\">String</a>, function : <a href=\"../../String.html\">String</a>, callback trigger_when : Symbol = <span class=\"n\">:before</span>, on trigger_operation : <a href=\"../../Array.html\">Array</a>(Symbol) = [<span class=\"n\">:update</span>])","location":{"filename":"src/avram/migrator/create_trigger_statement.cr","line_number":2,"url":null},"def":{"name":"new","args":[{"name":"table_name","doc":null,"default_value":"","external_name":"table_name","restriction":"Symbol"},{"name":"trigger_name","doc":null,"default_value":"","external_name":"trigger_name","restriction":"String"},{"name":"function","doc":null,"default_value":"","external_name":"function","restriction":"String"},{"name":"trigger_when","doc":null,"default_value":":before","external_name":"callback","restriction":"Symbol"},{"name":"trigger_operation","doc":null,"default_value":"[:update]","external_name":"on","restriction":"Array(Symbol)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(table_name, trigger_name, function, trigger_when, trigger_operation)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"build-instance-method","html_id":"build-instance-method","name":"build","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/migrator/create_trigger_statement.cr","line_number":11,"url":null},"def":{"name":"build","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"CREATE TRIGGER #{@trigger_name}\\n#{@trigger_when.to_s.upcase} #{operation_statement} ON #{@table_name}\\nFOR EACH ROW\\nEXECUTE PROCEDURE #{@function}();\""}}],"macros":[],"types":[]},{"html_id":"avram/Avram/Migrator/DropExtensionStatement","path":"Avram/Migrator/DropExtensionStatement.html","kind":"class","full_name":"Avram::Migrator::DropExtensionStatement","name":"DropExtensionStatement","abstract":false,"superclass":{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Avram/Migrator","kind":"module","full_name":"Avram::Migrator","name":"Migrator"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(name:String)-class-method","html_id":"new(name:String)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"args_string":"(name : String)","args_html":"(name : <a href=\"../../String.html\">String</a>)","location":{"filename":"src/avram/migrator/drop_extension_statement.cr","line_number":2,"url":null},"def":{"name":"new","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(name)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"build-instance-method","html_id":"build-instance-method","name":"build","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/migrator/drop_extension_statement.cr","line_number":5,"url":null},"def":{"name":"build","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"DROP EXTENSION IF EXISTS \\\"#{@name}\\\" CASCADE;\""}}],"macros":[],"types":[]},{"html_id":"avram/Avram/Migrator/DropFunctionStatement","path":"Avram/Migrator/DropFunctionStatement.html","kind":"class","full_name":"Avram::Migrator::DropFunctionStatement","name":"DropFunctionStatement","abstract":false,"superclass":{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Avram/Migrator","kind":"module","full_name":"Avram::Migrator","name":"Migrator"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(name:String)-class-method","html_id":"new(name:String)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"args_string":"(name : String)","args_html":"(name : <a href=\"../../String.html\">String</a>)","location":{"filename":"src/avram/migrator/drop_function_statement.cr","line_number":2,"url":null},"def":{"name":"new","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(name)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"build-instance-method","html_id":"build-instance-method","name":"build","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/migrator/drop_function_statement.cr","line_number":5,"url":null},"def":{"name":"build","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"DROP FUNCTION IF EXISTS \\\"#{@name}\\\" CASCADE;\""}}],"macros":[],"types":[]},{"html_id":"avram/Avram/Migrator/DropIndexStatement","path":"Avram/Migrator/DropIndexStatement.html","kind":"class","full_name":"Avram::Migrator::DropIndexStatement","name":"DropIndexStatement","abstract":false,"superclass":{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"avram/Avram/Migrator/IndexStatementHelpers","kind":"module","full_name":"Avram::Migrator::IndexStatementHelpers","name":"IndexStatementHelpers"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[{"id":"ALLOWED_ON_DELETE_STRATEGIES","name":"ALLOWED_ON_DELETE_STRATEGIES","value":"[:cascade, :restrict] of ::Symbol","doc":null,"summary":null}],"included_modules":[{"html_id":"avram/Avram/Migrator/IndexStatementHelpers","kind":"module","full_name":"Avram::Migrator::IndexStatementHelpers","name":"IndexStatementHelpers"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Avram/Migrator","kind":"module","full_name":"Avram::Migrator","name":"Migrator"},"doc":"Builds an SQL statement for dropping an index by inferring it's name using table name and column(s).\n\n### Usage\n\nFor a single column index:\n\n```\nDropIndexStatement.new(:users, :email, if_exists: true, on_delete: :cascade).build\n# => \"DROP INDEX IF EXISTS users_email_index CASCADE;\"\n```\n\nFor multiple column index:\n\n```\nDropIndexStatement.new(:users, [:email, :username] if_exists: true, on_delete: :cascade).build\n# => \"DROP INDEX IF EXISTS users_email_username_index CASCADE;\"\n```\n\nFor index by name:\n\n```\nDropIndexStatement.new(:users, name: :custom_index_name).build\n# => \"DROP INDEX custom_index_name;\"\n```","summary":"<p>Builds an SQL statement for dropping an index by inferring it's name using table name and column(s).</p>","class_methods":[],"constructors":[{"id":"new(table:Symbol,columns:Columns?=nil,if_exists=false,on_delete=:do_nothing,name:String?|Symbol?=nil)-class-method","html_id":"new(table:Symbol,columns:Columns?=nil,if_exists=false,on_delete=:do_nothing,name:String?|Symbol?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"table","doc":null,"default_value":"","external_name":"table","restriction":"Symbol"},{"name":"columns","doc":null,"default_value":"nil","external_name":"columns","restriction":"Columns | ::Nil"},{"name":"if_exists","doc":null,"default_value":"false","external_name":"if_exists","restriction":""},{"name":"on_delete","doc":null,"default_value":":do_nothing","external_name":"on_delete","restriction":""},{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":"String | ::Nil | Symbol | ::Nil"}],"args_string":"(table : Symbol, columns : Columns? = <span class=\"n\">nil</span>, if_exists = <span class=\"n\">false</span>, on_delete = <span class=\"n\">:do_nothing</span>, name : String? | Symbol? = <span class=\"n\">nil</span>)","args_html":"(table : Symbol, columns : <a href=\"../../Avram/Migrator/IndexStatementHelpers/Columns.html\">Columns</a>? = <span class=\"n\">nil</span>, if_exists = <span class=\"n\">false</span>, on_delete = <span class=\"n\">:do_nothing</span>, name : <a href=\"../../String.html\">String</a>? | Symbol? = <span class=\"n\">nil</span>)","location":{"filename":"src/avram/migrator/drop_index_statement.cr","line_number":32,"url":null},"def":{"name":"new","args":[{"name":"table","doc":null,"default_value":"","external_name":"table","restriction":"Symbol"},{"name":"columns","doc":null,"default_value":"nil","external_name":"columns","restriction":"Columns | ::Nil"},{"name":"if_exists","doc":null,"default_value":"false","external_name":"if_exists","restriction":""},{"name":"on_delete","doc":null,"default_value":":do_nothing","external_name":"on_delete","restriction":""},{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":"String | ::Nil | Symbol | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(table, columns, if_exists, on_delete, name)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"build-instance-method","html_id":"build-instance-method","name":"build","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/migrator/drop_index_statement.cr","line_number":35,"url":null},"def":{"name":"build","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"String.build do |index|\n  index << \"DROP INDEX\"\n  if @if_exists\n    index << \" IF EXISTS\"\n  end\n  index << \" #{index_name}\"\n  index << (on_delete_strategy(@on_delete))\nend"}},{"id":"on_delete_strategy(on_delete=:do_nothing)-instance-method","html_id":"on_delete_strategy(on_delete=:do_nothing)-instance-method","name":"on_delete_strategy","doc":null,"summary":null,"abstract":false,"args":[{"name":"on_delete","doc":null,"default_value":":do_nothing","external_name":"on_delete","restriction":""}],"args_string":"(on_delete = <span class=\"n\">:do_nothing</span>)","args_html":"(on_delete = <span class=\"n\">:do_nothing</span>)","location":{"filename":"src/avram/migrator/drop_index_statement.cr","line_number":44,"url":null},"def":{"name":"on_delete_strategy","args":[{"name":"on_delete","doc":null,"default_value":":do_nothing","external_name":"on_delete","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if on_delete == (:do_nothing)\n  \";\"\nelse\n  if ALLOWED_ON_DELETE_STRATEGIES.includes?(on_delete)\n    \" #{on_delete};\".upcase\n  else\n    raise(\"on_delete: :#{on_delete} is not supported. Please use :do_nothing, :cascade or :restrict\")\n  end\nend"}}],"macros":[],"types":[]},{"html_id":"avram/Avram/Migrator/DropTableStatement","path":"Avram/Migrator/DropTableStatement.html","kind":"class","full_name":"Avram::Migrator::DropTableStatement","name":"DropTableStatement","abstract":false,"superclass":{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Avram/Migrator","kind":"module","full_name":"Avram::Migrator","name":"Migrator"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(table_name:Symbol)-class-method","html_id":"new(table_name:Symbol)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"table_name","doc":null,"default_value":"","external_name":"table_name","restriction":"Symbol"}],"args_string":"(table_name : Symbol)","args_html":"(table_name : Symbol)","location":{"filename":"src/avram/migrator/drop_table_statement.cr","line_number":2,"url":null},"def":{"name":"new","args":[{"name":"table_name","doc":null,"default_value":"","external_name":"table_name","restriction":"Symbol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(table_name)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"build-instance-method","html_id":"build-instance-method","name":"build","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/migrator/drop_table_statement.cr","line_number":5,"url":null},"def":{"name":"build","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"DROP TABLE #{@table_name}\""}}],"macros":[],"types":[]},{"html_id":"avram/Avram/Migrator/DropTriggerStatement","path":"Avram/Migrator/DropTriggerStatement.html","kind":"class","full_name":"Avram::Migrator::DropTriggerStatement","name":"DropTriggerStatement","abstract":false,"superclass":{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Avram/Migrator","kind":"module","full_name":"Avram::Migrator","name":"Migrator"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(table_name:Symbol,trigger_name:String)-class-method","html_id":"new(table_name:Symbol,trigger_name:String)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"table_name","doc":null,"default_value":"","external_name":"table_name","restriction":"Symbol"},{"name":"trigger_name","doc":null,"default_value":"","external_name":"trigger_name","restriction":"String"}],"args_string":"(table_name : Symbol, trigger_name : String)","args_html":"(table_name : Symbol, trigger_name : <a href=\"../../String.html\">String</a>)","location":{"filename":"src/avram/migrator/drop_trigger_statement.cr","line_number":2,"url":null},"def":{"name":"new","args":[{"name":"table_name","doc":null,"default_value":"","external_name":"table_name","restriction":"Symbol"},{"name":"trigger_name","doc":null,"default_value":"","external_name":"trigger_name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(table_name, trigger_name)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"build-instance-method","html_id":"build-instance-method","name":"build","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/migrator/drop_trigger_statement.cr","line_number":5,"url":null},"def":{"name":"build","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"DROP TRIGGER IF EXISTS #{@trigger_name} ON #{@table_name};\""}}],"macros":[],"types":[]},{"html_id":"avram/Avram/Migrator/IndexStatementHelpers","path":"Avram/Migrator/IndexStatementHelpers.html","kind":"module","full_name":"Avram::Migrator::IndexStatementHelpers","name":"IndexStatementHelpers","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"avram/Avram/Migrator/AlterTableStatement","kind":"class","full_name":"Avram::Migrator::AlterTableStatement","name":"AlterTableStatement"},{"html_id":"avram/Avram/Migrator/CreateIndexStatement","kind":"class","full_name":"Avram::Migrator::CreateIndexStatement","name":"CreateIndexStatement"},{"html_id":"avram/Avram/Migrator/CreateTableStatement","kind":"class","full_name":"Avram::Migrator::CreateTableStatement","name":"CreateTableStatement"},{"html_id":"avram/Avram/Migrator/DropIndexStatement","kind":"class","full_name":"Avram::Migrator::DropIndexStatement","name":"DropIndexStatement"},{"html_id":"avram/Avram/Migrator/StatementHelpers","kind":"module","full_name":"Avram::Migrator::StatementHelpers","name":"StatementHelpers"}],"namespace":{"html_id":"avram/Avram/Migrator","kind":"module","full_name":"Avram::Migrator","name":"Migrator"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"add_index(column:Symbol,unique=false,using:Symbol=:btree)-instance-method","html_id":"add_index(column:Symbol,unique=false,using:Symbol=:btree)-instance-method","name":"add_index","doc":"Generates raw sql for adding an index to a table column. Accepts 'unique' and 'using' options.","summary":"<p>Generates raw sql for adding an index to a table column.</p>","abstract":false,"args":[{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":"Symbol"},{"name":"unique","doc":null,"default_value":"false","external_name":"unique","restriction":""},{"name":"using","doc":null,"default_value":":btree","external_name":"using","restriction":"Symbol"}],"args_string":"(column : Symbol, unique = <span class=\"n\">false</span>, using : Symbol = <span class=\"n\">:btree</span>)","args_html":"(column : Symbol, unique = <span class=\"n\">false</span>, using : Symbol = <span class=\"n\">:btree</span>)","location":{"filename":"src/avram/migrator/index_statement_helpers.cr","line_number":7,"url":null},"def":{"name":"add_index","args":[{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":"Symbol"},{"name":"unique","doc":null,"default_value":"false","external_name":"unique","restriction":""},{"name":"using","doc":null,"default_value":":btree","external_name":"using","restriction":"Symbol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"index = (CreateIndexStatement.new(@table_name, column, using, unique)).build\nif index_added?(index, column)\nelse\n  index_statements << index\nend\n"}},{"id":"index_added?(index:String,column:Symbol)-instance-method","html_id":"index_added?(index:String,column:Symbol)-instance-method","name":"index_added?","doc":"Returns false unless matching index exists. Ignores UNIQUE","summary":"<p>Returns false unless matching index exists.</p>","abstract":false,"args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"String"},{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":"Symbol"}],"args_string":"(index : String, column : Symbol)","args_html":"(index : <a href=\"../../String.html\">String</a>, column : Symbol)","location":{"filename":"src/avram/migrator/index_statement_helpers.cr","line_number":13,"url":null},"def":{"name":"index_added?","args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"String"},{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":"Symbol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (index_statements.includes?(index)) || (index_statements.includes?(index.gsub(\" UNIQUE\", \"\")))\nelse\n  return false\nend\nraise(\"index on #{@table_name}.#{column} already exists\")\n"}}],"macros":[],"types":[{"html_id":"avram/Avram/Migrator/IndexStatementHelpers/Columns","path":"Avram/Migrator/IndexStatementHelpers/Columns.html","kind":"alias","full_name":"Avram::Migrator::IndexStatementHelpers::Columns","name":"Columns","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":true,"aliased":"(Array(Symbol) | Symbol)","aliased_html":"<a href=\"../../../Array.html\">Array(Symbol)</a> | Symbol","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Avram/Migrator/IndexStatementHelpers","kind":"module","full_name":"Avram::Migrator::IndexStatementHelpers","name":"IndexStatementHelpers"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]},{"html_id":"avram/Avram/Migrator/Migration","path":"Avram/Migrator/Migration.html","kind":"module","full_name":"Avram::Migrator::Migration","name":"Migration","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Avram/Migrator","kind":"module","full_name":"Avram::Migrator","name":"Migrator"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"avram/Avram/Migrator/Migration/V1","path":"Avram/Migrator/Migration/V1.html","kind":"class","full_name":"Avram::Migrator::Migration::V1","name":"V1","abstract":true,"superclass":{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"avram/Avram/Migrator/StatementHelpers","kind":"module","full_name":"Avram::Migrator::StatementHelpers","name":"StatementHelpers"},{"html_id":"avram/Avram/TableFor","kind":"module","full_name":"Avram::TableFor","name":"TableFor"},{"html_id":"avram/Avram/Migrator/IndexStatementHelpers","kind":"module","full_name":"Avram::Migrator::IndexStatementHelpers","name":"IndexStatementHelpers"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[{"html_id":"avram/Avram/Migrator/StatementHelpers","kind":"module","full_name":"Avram::Migrator::StatementHelpers","name":"StatementHelpers"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Avram/Migrator/Migration","kind":"module","full_name":"Avram::Migrator::Migration","name":"Migration"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"down(quiet=false)-instance-method","html_id":"down(quiet=false)-instance-method","name":"down","doc":"Same as #up except calls rollback method in migration.","summary":"<p>Same as #up except calls rollback method in migration.</p>","abstract":false,"args":[{"name":"quiet","doc":null,"default_value":"false","external_name":"quiet","restriction":""}],"args_string":"(quiet = <span class=\"n\">false</span>)","args_html":"(quiet = <span class=\"n\">false</span>)","location":{"filename":"src/avram/migrator/migration.cr","line_number":46,"url":null},"def":{"name":"down","args":[{"name":"quiet","doc":null,"default_value":"false","external_name":"quiet","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if pending?\n  puts(\"Already rolled back #{self.class.name.colorize(:cyan)}\")\nelse\n  reset_prepared_statements\n  rollback\n  execute_in_transaction(@prepared_statements) do |tx|\n    untrack_migration(tx)\n    if quiet\n    else\n      puts(\"Rolled back #{self.class.name.colorize(:green)}\")\n    end\n  end\nend"}},{"id":"migrate-instance-method","html_id":"migrate-instance-method","name":"migrate","doc":null,"summary":null,"abstract":true,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/migrator/migration.cr","line_number":21,"url":null},"def":{"name":"migrate","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"migrated?-instance-method","html_id":"migrated?-instance-method","name":"migrated?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/migrator/migration.cr","line_number":65,"url":null},"def":{"name":"migrated?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"DB.open(Avram::Migrator::Runner.database_url) do |db|\n  db.query_one?(\"SELECT id FROM migrations WHERE version = $1\", version, as: MigrationId)\nend"}},{"id":"pending?-instance-method","html_id":"pending?-instance-method","name":"pending?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/migrator/migration.cr","line_number":61,"url":null},"def":{"name":"pending?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"!migrated?"}},{"id":"prepared_statements:Array(String)-instance-method","html_id":"prepared_statements:Array(String)-instance-method","name":"prepared_statements","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(String)","args_html":" : <a href=\"../../../Array.html\">Array</a>(<a href=\"../../../String.html\">String</a>)","location":{"filename":"src/avram/migrator/migration.cr","line_number":24,"url":null},"def":{"name":"prepared_statements","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@prepared_statements"}},{"id":"reset_prepared_statements-instance-method","html_id":"reset_prepared_statements-instance-method","name":"reset_prepared_statements","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/migrator/migration.cr","line_number":105,"url":null},"def":{"name":"reset_prepared_statements","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@prepared_statements = [] of String"}},{"id":"up(quiet=false)-instance-method","html_id":"up(quiet=false)-instance-method","name":"up","doc":"Unless already migrated, calls migrate which in turn calls statement\nhelpers to generate and collect SQL statements in the\n@prepared_statements array. Each statement is then executed in  a\ntransaction and tracked upon completion.","summary":"<p>Unless already migrated, calls migrate which in turn calls statement helpers to generate and collect SQL statements in the @prepared_statements array.</p>","abstract":false,"args":[{"name":"quiet","doc":null,"default_value":"false","external_name":"quiet","restriction":""}],"args_string":"(quiet = <span class=\"n\">false</span>)","args_html":"(quiet = <span class=\"n\">false</span>)","location":{"filename":"src/avram/migrator/migration.cr","line_number":30,"url":null},"def":{"name":"up","args":[{"name":"quiet","doc":null,"default_value":"false","external_name":"quiet","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if migrated?\n  puts(\"Already migrated #{self.class.name.colorize(:cyan)}\")\nelse\n  reset_prepared_statements\n  migrate\n  execute_in_transaction(@prepared_statements) do |tx|\n    track_migration(tx)\n    if quiet\n    else\n      puts(\"Migrated #{self.class.name.colorize(:green)}\")\n    end\n  end\nend"}},{"id":"version-instance-method","html_id":"version-instance-method","name":"version","doc":null,"summary":null,"abstract":true,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/migrator/migration.cr","line_number":22,"url":null},"def":{"name":"version","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}}],"macros":[],"types":[{"html_id":"avram/Avram/Migrator/Migration/V1/MigrationId","path":"Avram/Migrator/Migration/V1/MigrationId.html","kind":"alias","full_name":"Avram::Migrator::Migration::V1::MigrationId","name":"MigrationId","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":true,"aliased":"(Int32 | Int64)","aliased_html":"<a href=\"../../../../Int32.html\">Int32</a> | <a href=\"../../../../Int64.html\">Int64</a>","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Avram/Migrator/Migration/V1","kind":"class","full_name":"Avram::Migrator::Migration::V1","name":"V1"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]}]},{"html_id":"avram/Avram/Migrator/MigrationGenerator","path":"Avram/Migrator/MigrationGenerator.html","kind":"class","full_name":"Avram::Migrator::MigrationGenerator","name":"MigrationGenerator","abstract":false,"superclass":{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"avram/LuckyCli/TextHelpers","kind":"module","full_name":"LuckyCli::TextHelpers","name":"TextHelpers"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[{"html_id":"avram/LuckyCli/TextHelpers","kind":"module","full_name":"LuckyCli::TextHelpers","name":"TextHelpers"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Avram/Migrator","kind":"module","full_name":"Avram::Migrator","name":"Migrator"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(name,migrate_contents:String,rollback_contents:String)-class-method","html_id":"new(name,migrate_contents:String,rollback_contents:String)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"migrate_contents","doc":null,"default_value":"","external_name":"migrate_contents","restriction":"String"},{"name":"rollback_contents","doc":null,"default_value":"","external_name":"rollback_contents","restriction":"String"}],"args_string":"(name, migrate_contents : String, rollback_contents : String)","args_html":"(name, migrate_contents : <a href=\"../../String.html\">String</a>, rollback_contents : <a href=\"../../String.html\">String</a>)","location":{"filename":"src/avram/tasks/gen/migration.cr","line_number":19,"url":null},"def":{"name":"new","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"migrate_contents","doc":null,"default_value":"","external_name":"migrate_contents","restriction":"String"},{"name":"rollback_contents","doc":null,"default_value":"","external_name":"rollback_contents","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(name, migrate_contents, rollback_contents)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(name)-class-method","html_id":"new(name)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""}],"args_string":"(name)","args_html":"(name)","location":{"filename":"src/avram/tasks/gen/migration.cr","line_number":16,"url":null},"def":{"name":"new","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(name)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"formatted_migrate_contents:String?-instance-method","html_id":"formatted_migrate_contents:String?-instance-method","name":"formatted_migrate_contents","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","args_html":" : <a href=\"../../String.html\">String</a>?","location":{"filename":"src/avram/tasks/gen/migration.cr","line_number":34,"url":null},"def":{"name":"formatted_migrate_contents","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String | ::Nil","visibility":"Public","body":"@migrate_contents.try do |contents|\n  pad_contents(contents)\nend"}},{"id":"formatted_rollback_contents:String?-instance-method","html_id":"formatted_rollback_contents:String?-instance-method","name":"formatted_rollback_contents","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","args_html":" : <a href=\"../../String.html\">String</a>?","location":{"filename":"src/avram/tasks/gen/migration.cr","line_number":40,"url":null},"def":{"name":"formatted_rollback_contents","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String | ::Nil","visibility":"Public","body":"@rollback_contents.try do |contents|\n  pad_contents(contents)\nend"}},{"id":"generate(_version=@_version)-instance-method","html_id":"generate(_version=@_version)-instance-method","name":"generate","doc":null,"summary":null,"abstract":false,"args":[{"name":"_version","doc":null,"default_value":"@_version","external_name":"_version","restriction":""}],"args_string":"(_version = @_version)","args_html":"(_version = @_version)","location":{"filename":"src/avram/tasks/gen/migration.cr","line_number":22,"url":null},"def":{"name":"generate","args":[{"name":"_version","doc":null,"default_value":"@_version","external_name":"_version","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@_version = _version\nensure_camelcase_name\nmake_migrations_folder_if_missing\nensure_unique\nFile.write(file_path, contents)\nio.puts(\"Created #{migration_class_name.colorize(:green)} in .#{relative_file_path.colorize(:green)}\")\n"}},{"id":"name:String-instance-method","html_id":"name:String-instance-method","name":"name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","args_html":" : <a href=\"../../String.html\">String</a>","location":{"filename":"src/avram/tasks/gen/migration.cr","line_number":8,"url":null},"def":{"name":"name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@name"}},{"id":"to_s(__io__:IO):Nil-instance-method","html_id":"to_s(__io__:IO):Nil-instance-method","name":"to_s","doc":"Appends a short String representation of this object\nwhich includes its class name and its object address.\n\n```\nclass Person\n  def initialize(@name : String, @age : Int32)\n  end\nend\n\nPerson.new(\"John\", 32).to_s # => #<Person:0x10a199f20>\n```","summary":"<p>Appends a short String representation of this object which includes its class name and its object address.</p>","abstract":false,"args":[{"name":"__io__","doc":null,"default_value":"","external_name":"__io__","restriction":"IO"}],"args_string":"(__io__ : IO) : Nil","args_html":"(__io__ : IO) : <a href=\"../../Nil.html\">Nil</a>","location":{"filename":"src/avram/tasks/gen/migration.cr","line_number":14,"url":null},"def":{"name":"to_s","args":[{"name":"__io__","doc":null,"default_value":"","external_name":"__io__","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"ECR.embed(\"/__w/avram/avram/src/avram/tasks/gen/migration.ecr\", \"__io__\")"}}],"macros":[],"types":[]},{"html_id":"avram/Avram/Migrator/MissingOnDeleteWithBelongsToError","path":"Avram/Migrator/MissingOnDeleteWithBelongsToError.html","kind":"module","full_name":"Avram::Migrator::MissingOnDeleteWithBelongsToError","name":"MissingOnDeleteWithBelongsToError","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"avram/Avram/Migrator/AlterTableStatement","kind":"class","full_name":"Avram::Migrator::AlterTableStatement","name":"AlterTableStatement"},{"html_id":"avram/Avram/Migrator/CreateTableStatement","kind":"class","full_name":"Avram::Migrator::CreateTableStatement","name":"CreateTableStatement"}],"namespace":{"html_id":"avram/Avram/Migrator","kind":"module","full_name":"Avram::Migrator","name":"Migrator"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[{"id":"add_belongs_to(type_declaration,references=nil)-macro","html_id":"add_belongs_to(type_declaration,references=nil)-macro","name":"add_belongs_to","doc":null,"summary":null,"abstract":false,"args":[{"name":"type_declaration","doc":null,"default_value":"","external_name":"type_declaration","restriction":""},{"name":"references","doc":null,"default_value":"nil","external_name":"references","restriction":""}],"args_string":"(type_declaration, references = <span class=\"n\">nil</span>)","location":{"filename":"src/avram/migrator/missing_on_delete_with_belongs_to_error.cr","line_number":2,"url":null},"def":{"name":"add_belongs_to","args":[{"name":"type_declaration","doc":null,"default_value":"","external_name":"type_declaration","restriction":""},{"name":"references","doc":null,"default_value":"nil","external_name":"references","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    \n{% raise(\"Must use 'on_delete' with 'add_belongs_to'\\n\\nTry this...\\n\\n  ▸ add_belongs_to #{type_declaration}, on_delete: :cascade\\n\\nYou can also use :restrict, :nullify, or :do_nothing\\n\\nRead more at: https://luckyframework.org/guides/database/migrations#associations\\n\\n\") %}\n\n  \n"}}],"types":[]},{"html_id":"avram/Avram/Migrator/Runner","path":"Avram/Migrator/Runner.html","kind":"class","full_name":"Avram::Migrator::Runner","name":"Runner","abstract":false,"superclass":{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[{"id":"MIGRATIONS_TABLE_NAME","name":"MIGRATIONS_TABLE_NAME","value":"\"migrations\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[{"html_id":"avram/LuckyCli/TextHelpers","kind":"module","full_name":"LuckyCli::TextHelpers","name":"TextHelpers"}],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Avram/Migrator","kind":"module","full_name":"Avram::Migrator","name":"Migrator"},"doc":null,"summary":null,"class_methods":[{"id":"cmd_args-class-method","html_id":"cmd_args-class-method","name":"cmd_args","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/migrator/runner.cr","line_number":47,"url":null},"def":{"name":"cmd_args","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"String.build do |args|\n  if self.db_user\n    args << \"-U #{self.db_user}\"\n  end\n  if self.db_host\n    args << \" -h #{self.db_host}\"\n  end\n  if self.db_port\n    args << \" -p #{self.db_port}\"\n  end\n  args << \" #{self.db_name}\"\nend"}},{"id":"create_db(quiet?:Bool=false)-class-method","html_id":"create_db(quiet?:Bool=false)-class-method","name":"create_db","doc":null,"summary":null,"abstract":false,"args":[{"name":"quiet?","doc":null,"default_value":"false","external_name":"quiet?","restriction":"Bool"}],"args_string":"(quiet? : Bool = <span class=\"n\">false</span>)","args_html":"(quiet? : <a href=\"../../Bool.html\">Bool</a> = <span class=\"n\">false</span>)","location":{"filename":"src/avram/migrator/runner.cr","line_number":66,"url":null},"def":{"name":"create_db","args":[{"name":"quiet?","doc":null,"default_value":"false","external_name":"quiet?","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"begin\n  run(\"createdb #{cmd_args}\")\n  if quiet?\n  else\n    puts(\"Done creating #{Avram::Migrator::Runner.db_name.colorize(:green)}\")\n  end\nrescue e : Exception\n  if (message = e.message) && (message.includes?(\"\\\"#{self.db_name}\\\" already exists\"))\n    if quiet?\n    else\n      puts(\"Already created #{self.db_name.colorize(:green)}\")\n    end\n  else\n    if (message = e.message) && ((message.includes?(\"createdb: not found\")) || (message.includes?(\"No command 'createdb' found\")))\n      raise(PGClientNotInstalledError.new(message))\n    else\n      if (message = e.message) && (message.includes?(\"could not connect to database template\"))\n        raise(PGNotRunningError.new(message))\n      else\n        raise(e)\n      end\n    end\n  end\nend"}},{"id":"credentials-class-method","html_id":"credentials-class-method","name":"credentials","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/migrator/runner.cr","line_number":39,"url":null},"def":{"name":"credentials","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Avram.settings.database_to_migrate.credentials"}},{"id":"database_url-class-method","html_id":"database_url-class-method","name":"database_url","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/migrator/runner.cr","line_number":43,"url":null},"def":{"name":"database_url","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"credentials.url"}},{"id":"db_host-class-method","html_id":"db_host-class-method","name":"db_host","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/migrator/runner.cr","line_number":19,"url":null},"def":{"name":"db_host","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"credentials.hostname"}},{"id":"db_name-class-method","html_id":"db_name-class-method","name":"db_name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/migrator/runner.cr","line_number":15,"url":null},"def":{"name":"db_name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"credentials.database"}},{"id":"db_password-class-method","html_id":"db_password-class-method","name":"db_password","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/migrator/runner.cr","line_number":31,"url":null},"def":{"name":"db_password","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"credentials.password"}},{"id":"db_port-class-method","html_id":"db_port-class-method","name":"db_port","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/migrator/runner.cr","line_number":23,"url":null},"def":{"name":"db_port","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"credentials.port"}},{"id":"db_user-class-method","html_id":"db_user-class-method","name":"db_user","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/migrator/runner.cr","line_number":27,"url":null},"def":{"name":"db_user","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"credentials.username"}},{"id":"drop_db-class-method","html_id":"drop_db-class-method","name":"drop_db","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/migrator/runner.cr","line_number":56,"url":null},"def":{"name":"drop_db","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"begin\n  run(\"dropdb #{cmd_args}\")\nrescue e : Exception\n  if (message = e.message) && (message.includes?(\"\\\"#{self.db_name}\\\" does not exist\"))\n    puts(\"Already dropped #{self.db_name.colorize(:green)}\")\n  else\n    raise(e)\n  end\nend"}},{"id":"dump_db(dump_to:String=&quot;db/structure.sql&quot;,quiet:Bool=false)-class-method","html_id":"dump_db(dump_to:String=&quot;db/structure.sql&quot;,quiet:Bool=false)-class-method","name":"dump_db","doc":null,"summary":null,"abstract":false,"args":[{"name":"dump_to","doc":null,"default_value":"\"db/structure.sql\"","external_name":"dump_to","restriction":"String"},{"name":"quiet","doc":null,"default_value":"false","external_name":"quiet","restriction":"Bool"}],"args_string":"(dump_to : String = <span class=\"s\">&quot;db/structure.sql&quot;</span>, quiet : Bool = <span class=\"n\">false</span>)","args_html":"(dump_to : <a href=\"../../String.html\">String</a> = <span class=\"s\">&quot;db/structure.sql&quot;</span>, quiet : <a href=\"../../Bool.html\">Bool</a> = <span class=\"n\">false</span>)","location":{"filename":"src/avram/migrator/runner.cr","line_number":96,"url":null},"def":{"name":"dump_db","args":[{"name":"dump_to","doc":null,"default_value":"\"db/structure.sql\"","external_name":"dump_to","restriction":"String"},{"name":"quiet","doc":null,"default_value":"false","external_name":"quiet","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Db::VerifyConnection.new(quiet: true).run_task\nrun(\"pg_dump -s #{cmd_args} > #{dump_to}\")\nif quiet\nelse\n  puts(\"Done dumping #{db_name.colorize(:green)}\")\nend\n"}},{"id":"migrations-class-method","html_id":"migrations-class-method","name":"migrations","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/migrator/runner.cr","line_number":35,"url":null},"def":{"name":"migrations","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@migrations"}},{"id":"restore_db(restore_file:String,quiet:Bool=false)-class-method","html_id":"restore_db(restore_file:String,quiet:Bool=false)-class-method","name":"restore_db","doc":null,"summary":null,"abstract":false,"args":[{"name":"restore_file","doc":null,"default_value":"","external_name":"restore_file","restriction":"String"},{"name":"quiet","doc":null,"default_value":"false","external_name":"quiet","restriction":"Bool"}],"args_string":"(restore_file : String, quiet : Bool = <span class=\"n\">false</span>)","args_html":"(restore_file : <a href=\"../../String.html\">String</a>, quiet : <a href=\"../../Bool.html\">Bool</a> = <span class=\"n\">false</span>)","location":{"filename":"src/avram/migrator/runner.cr","line_number":85,"url":null},"def":{"name":"restore_db","args":[{"name":"restore_file","doc":null,"default_value":"","external_name":"restore_file","restriction":"String"},{"name":"quiet","doc":null,"default_value":"false","external_name":"quiet","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if File.exists?(restore_file)\n  run(\"psql -q #{cmd_args} -v ON_ERROR_STOP=1 < #{restore_file}\")\n  if quiet\n  else\n    puts(\"Done restoring #{db_name.colorize(:green)}\")\n  end\nelse\n  raise(\"Unable to locate the restore file: #{restore_file}\")\nend"}},{"id":"run(command:String,output:IO=STDOUT)-class-method","html_id":"run(command:String,output:IO=STDOUT)-class-method","name":"run","doc":null,"summary":null,"abstract":false,"args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":"String"},{"name":"output","doc":null,"default_value":"STDOUT","external_name":"output","restriction":"IO"}],"args_string":"(command : String, output : IO = <span class=\"t\">STDOUT</span>)","args_html":"(command : <a href=\"../../String.html\">String</a>, output : IO = <span class=\"t\">STDOUT</span>)","location":{"filename":"src/avram/migrator/runner.cr","line_number":119,"url":null},"def":{"name":"run","args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":"String"},{"name":"output","doc":null,"default_value":"STDOUT","external_name":"output","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"error_messages = IO::Memory.new\nif self.db_password\n  ENV[\"PGPASSWORD\"] = self.db_password\nend\nresult = Process.run(command, shell: true, output: output, error: error_messages)\nif self.db_password\n  ENV.delete(\"PGPASSWORD\")\nend\nif result.success?\nelse\n  raise(error_messages.to_s)\nend\n"}},{"id":"setup_migration_tracking_tables-class-method","html_id":"setup_migration_tracking_tables-class-method","name":"setup_migration_tracking_tables","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/migrator/runner.cr","line_number":104,"url":null},"def":{"name":"setup_migration_tracking_tables","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"DB.open(database_url) do |db|\n  db.exec(create_table_for_tracking_migrations)\nend"}}],"constructors":[{"id":"new(quiet:Bool=false)-class-method","html_id":"new(quiet:Bool=false)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"quiet","doc":null,"default_value":"false","external_name":"quiet","restriction":"Bool"}],"args_string":"(quiet : Bool = <span class=\"n\">false</span>)","args_html":"(quiet : <a href=\"../../Bool.html\">Bool</a> = <span class=\"n\">false</span>)","location":{"filename":"src/avram/migrator/runner.cr","line_number":12,"url":null},"def":{"name":"new","args":[{"name":"quiet","doc":null,"default_value":"false","external_name":"quiet","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(quiet)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"ensure_migrated!-instance-method","html_id":"ensure_migrated!-instance-method","name":"ensure_migrated!","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/migrator/runner.cr","line_number":167,"url":null},"def":{"name":"ensure_migrated!","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if pending_migrations.any?\n  raise(\"There are pending migrations. Please run lucky db.migrate\")\nend"}},{"id":"rollback_all-instance-method","html_id":"rollback_all-instance-method","name":"rollback_all","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/migrator/runner.cr","line_number":144,"url":null},"def":{"name":"rollback_all","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.class.setup_migration_tracking_tables\nmigrated_migrations.reverse.each do |__arg1|\n  __arg1.new.down\nend\n"}},{"id":"rollback_one-instance-method","html_id":"rollback_one-instance-method","name":"rollback_one","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/migrator/runner.cr","line_number":149,"url":null},"def":{"name":"rollback_one","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.class.setup_migration_tracking_tables\nif migrated_migrations.empty?\n  puts(\"Did not roll anything back because the database has no migrations.\".colorize(:green))\nelse\n  migrated_migrations.last.new.down\nend\n"}},{"id":"rollback_to(last_version:Int64)-instance-method","html_id":"rollback_to(last_version:Int64)-instance-method","name":"rollback_to","doc":null,"summary":null,"abstract":false,"args":[{"name":"last_version","doc":null,"default_value":"","external_name":"last_version","restriction":"Int64"}],"args_string":"(last_version : Int64)","args_html":"(last_version : <a href=\"../../Int64.html\">Int64</a>)","location":{"filename":"src/avram/migrator/runner.cr","line_number":158,"url":null},"def":{"name":"rollback_to","args":[{"name":"last_version","doc":null,"default_value":"","external_name":"last_version","restriction":"Int64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.class.setup_migration_tracking_tables\nsubset = migrated_migrations.select do |mm|\n  mm.new.version.to_i64 > last_version\nend\nsubset.reverse.each do |__arg2|\n  __arg2.new.down\nend\nputs(\"Done rolling back to #{last_version}\".colorize(:green))\n"}},{"id":"run_next_migration-instance-method","html_id":"run_next_migration-instance-method","name":"run_next_migration","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/migrator/runner.cr","line_number":138,"url":null},"def":{"name":"run_next_migration","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"prepare_for_migration do\n  pending_migrations.first.new.up\nend"}},{"id":"run_pending_migrations-instance-method","html_id":"run_pending_migrations-instance-method","name":"run_pending_migrations","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/migrator/runner.cr","line_number":132,"url":null},"def":{"name":"run_pending_migrations","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"prepare_for_migration do\n  pending_migrations.each do |__arg0|\n    __arg0.new.up(@quiet)\n  end\nend"}}],"macros":[],"types":[]},{"html_id":"avram/Avram/Migrator/StatementHelpers","path":"Avram/Migrator/StatementHelpers.html","kind":"module","full_name":"Avram::Migrator::StatementHelpers","name":"StatementHelpers","abstract":false,"superclass":null,"ancestors":[{"html_id":"avram/Avram/TableFor","kind":"module","full_name":"Avram::TableFor","name":"TableFor"},{"html_id":"avram/Avram/Migrator/IndexStatementHelpers","kind":"module","full_name":"Avram::Migrator::IndexStatementHelpers","name":"IndexStatementHelpers"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[{"html_id":"avram/Avram/Migrator/IndexStatementHelpers","kind":"module","full_name":"Avram::Migrator::IndexStatementHelpers","name":"IndexStatementHelpers"},{"html_id":"avram/Avram/TableFor","kind":"module","full_name":"Avram::TableFor","name":"TableFor"}],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"avram/Avram/Migrator/Migration/V1","kind":"class","full_name":"Avram::Migrator::Migration::V1","name":"V1"}],"namespace":{"html_id":"avram/Avram/Migrator","kind":"module","full_name":"Avram::Migrator","name":"Migrator"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"create_foreign_key(from:Symbol,to:Symbol,on_delete:Symbol,column:Symbol?,primary_key=:id)-instance-method","html_id":"create_foreign_key(from:Symbol,to:Symbol,on_delete:Symbol,column:Symbol?,primary_key=:id)-instance-method","name":"create_foreign_key","doc":null,"summary":null,"abstract":false,"args":[{"name":"from","doc":null,"default_value":"","external_name":"from","restriction":"Symbol"},{"name":"to","doc":null,"default_value":"","external_name":"to","restriction":"Symbol"},{"name":"on_delete","doc":null,"default_value":"","external_name":"on_delete","restriction":"Symbol"},{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":"Symbol | ::Nil"},{"name":"primary_key","doc":null,"default_value":":id","external_name":"primary_key","restriction":""}],"args_string":"(from : Symbol, to : Symbol, on_delete : Symbol, column : Symbol?, primary_key = <span class=\"n\">:id</span>)","args_html":"(from : Symbol, to : Symbol, on_delete : Symbol, column : Symbol?, primary_key = <span class=\"n\">:id</span>)","location":{"filename":"src/avram/migrator/statement_helpers.cr","line_number":31,"url":null},"def":{"name":"create_foreign_key","args":[{"name":"from","doc":null,"default_value":"","external_name":"from","restriction":"Symbol"},{"name":"to","doc":null,"default_value":"","external_name":"to","restriction":"Symbol"},{"name":"on_delete","doc":null,"default_value":"","external_name":"on_delete","restriction":"Symbol"},{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":"Symbol | ::Nil"},{"name":"primary_key","doc":null,"default_value":":id","external_name":"primary_key","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"prepared_statements << (CreateForeignKeyStatement.new(from, to, on_delete, column, primary_key)).build"}},{"id":"create_function(name:String,body:String,returns:String=&quot;trigger&quot;)-instance-method","html_id":"create_function(name:String,body:String,returns:String=&quot;trigger&quot;)-instance-method","name":"create_function","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"body","doc":null,"default_value":"","external_name":"body","restriction":"String"},{"name":"returns","doc":null,"default_value":"\"trigger\"","external_name":"returns","restriction":"String"}],"args_string":"(name : String, body : String, returns : String = <span class=\"s\">&quot;trigger&quot;</span>)","args_html":"(name : <a href=\"../../String.html\">String</a>, body : <a href=\"../../String.html\">String</a>, returns : <a href=\"../../String.html\">String</a> = <span class=\"s\">&quot;trigger&quot;</span>)","location":{"filename":"src/avram/migrator/statement_helpers.cr","line_number":63,"url":null},"def":{"name":"create_function","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"body","doc":null,"default_value":"","external_name":"body","restriction":"String"},{"name":"returns","doc":null,"default_value":"\"trigger\"","external_name":"returns","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"prepared_statements << (Avram::Migrator::CreateFunctionStatement.new(name, body: body, returns: returns)).build"}},{"id":"create_index(table_name:Symbol,columns:Columns,unique=false,using=:btree,name:String?|Symbol?=nil)-instance-method","html_id":"create_index(table_name:Symbol,columns:Columns,unique=false,using=:btree,name:String?|Symbol?=nil)-instance-method","name":"create_index","doc":null,"summary":null,"abstract":false,"args":[{"name":"table_name","doc":null,"default_value":"","external_name":"table_name","restriction":"Symbol"},{"name":"columns","doc":null,"default_value":"","external_name":"columns","restriction":"Columns"},{"name":"unique","doc":null,"default_value":"false","external_name":"unique","restriction":""},{"name":"using","doc":null,"default_value":":btree","external_name":"using","restriction":""},{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":"String | ::Nil | Symbol | ::Nil"}],"args_string":"(table_name : Symbol, columns : Columns, unique = <span class=\"n\">false</span>, using = <span class=\"n\">:btree</span>, name : String? | Symbol? = <span class=\"n\">nil</span>)","args_html":"(table_name : Symbol, columns : <a href=\"../../Avram/Migrator/IndexStatementHelpers/Columns.html\">Columns</a>, unique = <span class=\"n\">false</span>, using = <span class=\"n\">:btree</span>, name : <a href=\"../../String.html\">String</a>? | Symbol? = <span class=\"n\">nil</span>)","location":{"filename":"src/avram/migrator/statement_helpers.cr","line_number":35,"url":null},"def":{"name":"create_index","args":[{"name":"table_name","doc":null,"default_value":"","external_name":"table_name","restriction":"Symbol"},{"name":"columns","doc":null,"default_value":"","external_name":"columns","restriction":"Columns"},{"name":"unique","doc":null,"default_value":"false","external_name":"unique","restriction":""},{"name":"using","doc":null,"default_value":":btree","external_name":"using","restriction":""},{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":"String | ::Nil | Symbol | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"prepared_statements << (CreateIndexStatement.new(table_name, columns, using, unique, name)).build"}},{"id":"create_trigger(table_name:Symbol,name:String,function_name:String,callback:Symbol=:before,on:Array(Symbol)=[:update])-instance-method","html_id":"create_trigger(table_name:Symbol,name:String,function_name:String,callback:Symbol=:before,on:Array(Symbol)=[:update])-instance-method","name":"create_trigger","doc":"Drop any existing trigger by this name first before creating.\nPostgres does not support updating or replacing a trigger as of version 12\n\nCreates a new TRIGGER named `name` on the table `table_name`.\n`function_name` - The PG function to run from this trigger.\n`callback` - When to run this trigger (BEFORE or AFTER). Default `:before`\n`on` - The operation(s) for this trigger (INSERT, UPDATE, DELETE). Default is `[:update]`\n\n```\ncreate_trigger(:users, \"trigger_set_timestamps\", \"set_timestamps\")\n# => CREATE TRIGGER trigger_set_timestamps BEFORE UPDATE ON users FOR EACH ROW EXECUTE PROCEDURE set_timestamps();\n```","summary":"<p>Drop any existing trigger by this name first before creating.</p>","abstract":false,"args":[{"name":"table_name","doc":null,"default_value":"","external_name":"table_name","restriction":"Symbol"},{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"function_name","doc":null,"default_value":"","external_name":"function_name","restriction":"String"},{"name":"callback","doc":null,"default_value":":before","external_name":"callback","restriction":"Symbol"},{"name":"on","doc":null,"default_value":"[:update]","external_name":"on","restriction":"Array(Symbol)"}],"args_string":"(table_name : Symbol, name : String, function_name : String, callback : Symbol = <span class=\"n\">:before</span>, on : Array(Symbol) = [<span class=\"n\">:update</span>])","args_html":"(table_name : Symbol, name : <a href=\"../../String.html\">String</a>, function_name : <a href=\"../../String.html\">String</a>, callback : Symbol = <span class=\"n\">:before</span>, on : <a href=\"../../Array.html\">Array</a>(Symbol) = [<span class=\"n\">:update</span>])","location":{"filename":"src/avram/migrator/statement_helpers.cr","line_number":83,"url":null},"def":{"name":"create_trigger","args":[{"name":"table_name","doc":null,"default_value":"","external_name":"table_name","restriction":"Symbol"},{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"function_name","doc":null,"default_value":"","external_name":"function_name","restriction":"String"},{"name":"callback","doc":null,"default_value":":before","external_name":"callback","restriction":"Symbol"},{"name":"on","doc":null,"default_value":"[:update]","external_name":"on","restriction":"Array(Symbol)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"drop_trigger(table_name, name)\nprepared_statements << (Avram::Migrator::CreateTriggerStatement.new(table_name, name, function_name, callback, on)).build\n"}},{"id":"disable_extension(name:String)-instance-method","html_id":"disable_extension(name:String)-instance-method","name":"disable_extension","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"args_string":"(name : String)","args_html":"(name : <a href=\"../../String.html\">String</a>)","location":{"filename":"src/avram/migrator/statement_helpers.cr","line_number":55,"url":null},"def":{"name":"disable_extension","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"prepared_statements << (Avram::Migrator::DropExtensionStatement.new(name)).build"}},{"id":"drop(table_name)-instance-method","html_id":"drop(table_name)-instance-method","name":"drop","doc":null,"summary":null,"abstract":false,"args":[{"name":"table_name","doc":null,"default_value":"","external_name":"table_name","restriction":""}],"args_string":"(table_name)","args_html":"(table_name)","location":{"filename":"src/avram/migrator/statement_helpers.cr","line_number":17,"url":null},"def":{"name":"drop","args":[{"name":"table_name","doc":null,"default_value":"","external_name":"table_name","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"prepared_statements << (Avram::Migrator::DropTableStatement.new(table_name)).build"}},{"id":"drop_function(name:String)-instance-method","html_id":"drop_function(name:String)-instance-method","name":"drop_function","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"args_string":"(name : String)","args_html":"(name : <a href=\"../../String.html\">String</a>)","location":{"filename":"src/avram/migrator/statement_helpers.cr","line_number":67,"url":null},"def":{"name":"drop_function","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"prepared_statements << (Avram::Migrator::DropFunctionStatement.new(name)).build"}},{"id":"drop_index(table_name:Symbol,columns:Columns?=nil,if_exists=false,on_delete=:do_nothing,name:String?|Symbol?=nil)-instance-method","html_id":"drop_index(table_name:Symbol,columns:Columns?=nil,if_exists=false,on_delete=:do_nothing,name:String?|Symbol?=nil)-instance-method","name":"drop_index","doc":null,"summary":null,"abstract":false,"args":[{"name":"table_name","doc":null,"default_value":"","external_name":"table_name","restriction":"Symbol"},{"name":"columns","doc":null,"default_value":"nil","external_name":"columns","restriction":"Columns | ::Nil"},{"name":"if_exists","doc":null,"default_value":"false","external_name":"if_exists","restriction":""},{"name":"on_delete","doc":null,"default_value":":do_nothing","external_name":"on_delete","restriction":""},{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":"String | ::Nil | Symbol | ::Nil"}],"args_string":"(table_name : Symbol, columns : Columns? = <span class=\"n\">nil</span>, if_exists = <span class=\"n\">false</span>, on_delete = <span class=\"n\">:do_nothing</span>, name : String? | Symbol? = <span class=\"n\">nil</span>)","args_html":"(table_name : Symbol, columns : <a href=\"../../Avram/Migrator/IndexStatementHelpers/Columns.html\">Columns</a>? = <span class=\"n\">nil</span>, if_exists = <span class=\"n\">false</span>, on_delete = <span class=\"n\">:do_nothing</span>, name : <a href=\"../../String.html\">String</a>? | Symbol? = <span class=\"n\">nil</span>)","location":{"filename":"src/avram/migrator/statement_helpers.cr","line_number":39,"url":null},"def":{"name":"drop_index","args":[{"name":"table_name","doc":null,"default_value":"","external_name":"table_name","restriction":"Symbol"},{"name":"columns","doc":null,"default_value":"nil","external_name":"columns","restriction":"Columns | ::Nil"},{"name":"if_exists","doc":null,"default_value":"false","external_name":"if_exists","restriction":""},{"name":"on_delete","doc":null,"default_value":":do_nothing","external_name":"on_delete","restriction":""},{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":"String | ::Nil | Symbol | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"prepared_statements << (Avram::Migrator::DropIndexStatement.new(table_name, columns, if_exists, on_delete, name)).build"}},{"id":"drop_trigger(table_name:Symbol,name:String)-instance-method","html_id":"drop_trigger(table_name:Symbol,name:String)-instance-method","name":"drop_trigger","doc":"Drop the tigger `name` for the table `table_name`","summary":"<p>Drop the tigger <code>name</code> for the table <code>table_name</code></p>","abstract":false,"args":[{"name":"table_name","doc":null,"default_value":"","external_name":"table_name","restriction":"Symbol"},{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"args_string":"(table_name : Symbol, name : String)","args_html":"(table_name : Symbol, name : <a href=\"../../String.html\">String</a>)","location":{"filename":"src/avram/migrator/statement_helpers.cr","line_number":89,"url":null},"def":{"name":"drop_trigger","args":[{"name":"table_name","doc":null,"default_value":"","external_name":"table_name","restriction":"Symbol"},{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"prepared_statements << (Avram::Migrator::DropTriggerStatement.new(table_name, name)).build"}},{"id":"enable_extension(name:String)-instance-method","html_id":"enable_extension(name:String)-instance-method","name":"enable_extension","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"args_string":"(name : String)","args_html":"(name : <a href=\"../../String.html\">String</a>)","location":{"filename":"src/avram/migrator/statement_helpers.cr","line_number":51,"url":null},"def":{"name":"enable_extension","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"prepared_statements << (Avram::Migrator::CreateExtensionStatement.new(name)).build"}},{"id":"make_optional(table:Symbol,column:Symbol)-instance-method","html_id":"make_optional(table:Symbol,column:Symbol)-instance-method","name":"make_optional","doc":null,"summary":null,"abstract":false,"args":[{"name":"table","doc":null,"default_value":"","external_name":"table","restriction":"Symbol"},{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":"Symbol"}],"args_string":"(table : Symbol, column : Symbol)","args_html":"(table : Symbol, column : Symbol)","location":{"filename":"src/avram/migrator/statement_helpers.cr","line_number":47,"url":null},"def":{"name":"make_optional","args":[{"name":"table","doc":null,"default_value":"","external_name":"table","restriction":"Symbol"},{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":"Symbol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"prepared_statements << (Avram::Migrator::ChangeNullStatement.new(table, column, required: false)).build"}},{"id":"make_required(table:Symbol,column:Symbol)-instance-method","html_id":"make_required(table:Symbol,column:Symbol)-instance-method","name":"make_required","doc":null,"summary":null,"abstract":false,"args":[{"name":"table","doc":null,"default_value":"","external_name":"table","restriction":"Symbol"},{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":"Symbol"}],"args_string":"(table : Symbol, column : Symbol)","args_html":"(table : Symbol, column : Symbol)","location":{"filename":"src/avram/migrator/statement_helpers.cr","line_number":43,"url":null},"def":{"name":"make_required","args":[{"name":"table","doc":null,"default_value":"","external_name":"table","restriction":"Symbol"},{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":"Symbol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"prepared_statements << (Avram::Migrator::ChangeNullStatement.new(table, column, required: true)).build"}},{"id":"update_extension(name:String,to:String?=nil)-instance-method","html_id":"update_extension(name:String,to:String?=nil)-instance-method","name":"update_extension","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"to","doc":null,"default_value":"nil","external_name":"to","restriction":"String | ::Nil"}],"args_string":"(name : String, to : String? = <span class=\"n\">nil</span>)","args_html":"(name : <a href=\"../../String.html\">String</a>, to : <a href=\"../../String.html\">String</a>? = <span class=\"n\">nil</span>)","location":{"filename":"src/avram/migrator/statement_helpers.cr","line_number":59,"url":null},"def":{"name":"update_extension","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"to","doc":null,"default_value":"nil","external_name":"to","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"prepared_statements << (Avram::Migrator::AlterExtensionStatement.new(name, to: to)).build"}}],"macros":[{"id":"alter(table_name)-macro","html_id":"alter(table_name)-macro","name":"alter","doc":null,"summary":null,"abstract":false,"args":[{"name":"table_name","doc":null,"default_value":"","external_name":"table_name","restriction":""}],"args_string":"(table_name)","location":{"filename":"src/avram/migrator/statement_helpers.cr","line_number":21,"url":null},"def":{"name":"alter","args":[{"name":"table_name","doc":null,"default_value":"","external_name":"table_name","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    statements = Avram::Migrator::AlterTableStatement.new(\n{{ table_name }}\n).build do\n      \n{{ yield }}\n\n    \nend.statements\n\n    statements.each do |statement|\n      prepared_statements <<  statement\n    \nend\n  \n"}},{"id":"create(table_name)-macro","html_id":"create(table_name)-macro","name":"create","doc":null,"summary":null,"abstract":false,"args":[{"name":"table_name","doc":null,"default_value":"","external_name":"table_name","restriction":""}],"args_string":"(table_name)","location":{"filename":"src/avram/migrator/statement_helpers.cr","line_number":7,"url":null},"def":{"name":"create","args":[{"name":"table_name","doc":null,"default_value":"","external_name":"table_name","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    statements = Avram::Migrator::CreateTableStatement.new(\n{{ table_name }}\n).build do\n      \n{{ yield }}\n\n    \nend.statements\n\n    statements.each do |statement|\n      prepared_statements << statement\n    \nend\n  \n"}}],"types":[]}]},{"html_id":"avram/Avram/Model","path":"Avram/Model.html","kind":"class","full_name":"Avram::Model","name":"Model","abstract":true,"superclass":{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"avram/Avram/SchemaEnforcer","kind":"module","full_name":"Avram::SchemaEnforcer","name":"SchemaEnforcer"},{"html_id":"avram/Avram/Polymorphic","kind":"module","full_name":"Avram::Polymorphic","name":"Polymorphic"},{"html_id":"avram/Avram/Associations","kind":"module","full_name":"Avram::Associations","name":"Associations"},{"html_id":"avram/Avram/Associations/BelongsTo","kind":"module","full_name":"Avram::Associations::BelongsTo","name":"BelongsTo"},{"html_id":"avram/Avram/Associations/HasOne","kind":"module","full_name":"Avram::Associations::HasOne","name":"HasOne"},{"html_id":"avram/Avram/Associations/HasMany","kind":"module","full_name":"Avram::Associations::HasMany","name":"HasMany"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[{"html_id":"avram/Avram/Associations","kind":"module","full_name":"Avram::Associations","name":"Associations"},{"html_id":"avram/Avram/Polymorphic","kind":"module","full_name":"Avram::Polymorphic","name":"Polymorphic"},{"html_id":"avram/Avram/SchemaEnforcer","kind":"module","full_name":"Avram::SchemaEnforcer","name":"SchemaEnforcer"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":null,"summary":null,"class_methods":[{"id":"database_table_info:Avram::Database::TableInfo?-class-method","html_id":"database_table_info:Avram::Database::TableInfo?-class-method","name":"database_table_info","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Avram::Database::TableInfo?","args_html":" : <a href=\"../Avram/Database/TableInfo.html\">Avram::Database::TableInfo</a>?","location":{"filename":"src/avram/model.cr","line_number":20,"url":null},"def":{"name":"database_table_info","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Avram::Database::TableInfo | ::Nil","visibility":"Public","body":"database.database_info.table(table_name.to_s)"}},{"id":"primary_key_name:Symbol?-class-method","html_id":"primary_key_name:Symbol?-class-method","name":"primary_key_name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Symbol?","args_html":" : Symbol?","location":{"filename":"src/avram/model.cr","line_number":16,"url":null},"def":{"name":"primary_key_name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Symbol | ::Nil","visibility":"Public","body":"nil"}}],"constructors":[],"instance_methods":[{"id":"delete-instance-method","html_id":"delete-instance-method","name":"delete","doc":"Refer to `PrimaryKeyMethods#delete`","summary":"<p>Refer to <code><a href=\"../Avram/PrimaryKeyMethods.html#delete-instance-method\">PrimaryKeyMethods#delete</a></code></p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/model.cr","line_number":44,"url":null},"def":{"name":"delete","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"{% raise(\"Unable to call Avram::Model#delete on #{@type.name} because it does not have a primary key. Add a primary key or define your own `delete` method.\") %}"}},{"id":"model_name-instance-method","html_id":"model_name-instance-method","name":"model_name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/model.cr","line_number":24,"url":null},"def":{"name":"model_name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.class.name"}},{"id":"reload:self-instance-method","html_id":"reload:self-instance-method","name":"reload","doc":"Refer to `PrimaryKeyMethods#reload`","summary":"<p>Refer to <code><a href=\"../Avram/PrimaryKeyMethods.html#reload:self-instance-method\">PrimaryKeyMethods#reload</a></code></p>","abstract":false,"args":[],"args_string":" : <span class=\"k\">self</span>","args_html":" : <span class=\"k\">self</span>","location":{"filename":"src/avram/model.cr","line_number":29,"url":null},"def":{"name":"reload","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"{% raise(\"Unable to call Avram::Model#reload on #{@type.name} because it does not have a primary key. Add a primary key or define your own `reload` method.\") %}"}},{"id":"reload(&):self-instance-method","html_id":"reload(&):self-instance-method","name":"reload","doc":"Refer to `PrimaryKeyMethods#reload`","summary":"<p>Refer to <code><a href=\"../Avram/PrimaryKeyMethods.html#reload:self-instance-method\">PrimaryKeyMethods#reload</a></code></p>","abstract":false,"args":[],"args_string":"(&) : <span class=\"k\">self</span>","args_html":"(&) : <span class=\"k\">self</span>","location":{"filename":"src/avram/model.cr","line_number":34,"url":null},"def":{"name":"reload","args":[],"double_splat":null,"splat_index":null,"yields":0,"block_arg":null,"return_type":"self","visibility":"Public","body":"{% raise(\"Unable to call Avram::Model#reload on #{@type.name} because it does not have a primary key. Add a primary key or define your own `reload` method.\") %}"}},{"id":"to_param:String-instance-method","html_id":"to_param:String-instance-method","name":"to_param","doc":"Refer to `PrimaryKeyMethods#to_param`","summary":"<p>Refer to <code><a href=\"../Avram/PrimaryKeyMethods.html#to_param:String-instance-method\">PrimaryKeyMethods#to_param</a></code></p>","abstract":false,"args":[],"args_string":" : String","args_html":" : <a href=\"../String.html\">String</a>","location":{"filename":"src/avram/model.cr","line_number":39,"url":null},"def":{"name":"to_param","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"{% raise(\"Unable to call Avram::Model#to_param on #{@type.name} because it does not have a primary key. Add a primary key or define your own `to_param` method.\") %}"}}],"macros":[{"id":"association(assoc_name,type,relationship_type,foreign_key=nil,through=nil)-macro","html_id":"association(assoc_name,type,relationship_type,foreign_key=nil,through=nil)-macro","name":"association","doc":null,"summary":null,"abstract":false,"args":[{"name":"assoc_name","doc":null,"default_value":"","external_name":"assoc_name","restriction":""},{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":""},{"name":"relationship_type","doc":null,"default_value":"","external_name":"relationship_type","restriction":""},{"name":"foreign_key","doc":null,"default_value":"nil","external_name":"foreign_key","restriction":""},{"name":"through","doc":null,"default_value":"nil","external_name":"through","restriction":""}],"args_string":"(assoc_name, type, relationship_type, foreign_key = <span class=\"n\">nil</span>, through = <span class=\"n\">nil</span>)","location":{"filename":"src/avram/model.cr","line_number":253,"url":null},"def":{"name":"association","args":[{"name":"assoc_name","doc":null,"default_value":"","external_name":"assoc_name","restriction":""},{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":""},{"name":"relationship_type","doc":null,"default_value":"","external_name":"relationship_type","restriction":""},{"name":"foreign_key","doc":null,"default_value":"nil","external_name":"foreign_key","restriction":""},{"name":"through","doc":null,"default_value":"nil","external_name":"through","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    \n{% ASSOCIATIONS << {type: type, assoc_name: assoc_name.id, foreign_key: foreign_key, relationship_type: relationship_type, through: through} %}\n\n  \n"}},{"id":"column(type_declaration,autogenerated=false)-macro","html_id":"column(type_declaration,autogenerated=false)-macro","name":"column","doc":null,"summary":null,"abstract":false,"args":[{"name":"type_declaration","doc":null,"default_value":"","external_name":"type_declaration","restriction":""},{"name":"autogenerated","doc":null,"default_value":"false","external_name":"autogenerated","restriction":""}],"args_string":"(type_declaration, autogenerated = <span class=\"n\">false</span>)","location":{"filename":"src/avram/model.cr","line_number":219,"url":null},"def":{"name":"column","args":[{"name":"type_declaration","doc":null,"default_value":"","external_name":"type_declaration","restriction":""},{"name":"autogenerated","doc":null,"default_value":"false","external_name":"autogenerated","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    \n{% if type_declaration.type.is_a?(Union) %}\n      {% data_type = \"#{type_declaration.type.types.first}\".id %}\n      {% nilable = true %}\n    {% else %}\n      {% data_type = \"#{type_declaration.type}\".id %}\n      {% nilable = false %}\n    {% end %}\n\n    \n{% if type_declaration.value || (type_declaration.value == false) %}\n      {% value = type_declaration.value %}\n    {% else %}\n      {% value = nil %}\n    {% end %}\n\n    \n{% COLUMNS << {name: type_declaration.var, type: data_type, nilable: nilable.id, autogenerated: autogenerated, value: value} %}\n\n  \n"}},{"id":"default_columns-macro","html_id":"default_columns-macro","name":"default_columns","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","location":{"filename":"src/avram/model.cr","line_number":129,"url":null},"def":{"name":"default_columns","args":[],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    primary_key id : Int64\n    timestamps\n  "}},{"id":"primary_key(type_declaration)-macro","html_id":"primary_key(type_declaration)-macro","name":"primary_key","doc":null,"summary":null,"abstract":false,"args":[{"name":"type_declaration","doc":null,"default_value":"","external_name":"type_declaration","restriction":""}],"args_string":"(type_declaration)","location":{"filename":"src/avram/model.cr","line_number":92,"url":null},"def":{"name":"primary_key","args":[{"name":"type_declaration","doc":null,"default_value":"","external_name":"type_declaration","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    PRIMARY_KEY_TYPE = \n{{ type_declaration.type }}\n\n    PRIMARY_KEY_NAME = \n{{ type_declaration.var.symbolize }}\n\n    column \n{{ type_declaration.var }}\n : \n{{ type_declaration.type }}\n, autogenerated: true\n    alias PrimaryKeyType = \n{{ type_declaration.type }}\n\n\n    def self.primary_key_name : Symbol?\n      :\n{{ type_declaration.var.stringify }}\n\n    \nend\n\n    include Avram::PrimaryKeyMethods\n\n    \n# If not using default 'id' primary key\n\n    \n{% if type_declaration.var.id != \"id\".id %}\n      # Then point 'id' to the primary key\n      def id\n        {{ type_declaration.var.id }}\n      end\n    {% end %}\n\n  \n"}},{"id":"setup(step)-macro","html_id":"setup(step)-macro","name":"setup","doc":null,"summary":null,"abstract":false,"args":[{"name":"step","doc":null,"default_value":"","external_name":"step","restriction":""}],"args_string":"(step)","location":{"filename":"src/avram/model.cr","line_number":144,"url":null},"def":{"name":"setup","args":[{"name":"step","doc":null,"default_value":"","external_name":"step","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    \n{{ step.id }}\n(\n      type: \n{{ @type }}\n,\n      columns: \n{{ COLUMNS }}\n,\n      associations: \n{{ ASSOCIATIONS }}\n\n    )\n  \n"}},{"id":"setup_association_queries(associations,*args,**named_args)-macro","html_id":"setup_association_queries(associations,*args,**named_args)-macro","name":"setup_association_queries","doc":null,"summary":null,"abstract":false,"args":[{"name":"associations","doc":null,"default_value":"","external_name":"associations","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(associations, *args, **named_args)","location":{"filename":"src/avram/model.cr","line_number":182,"url":null},"def":{"name":"setup_association_queries","args":[{"name":"associations","doc":null,"default_value":"","external_name":"associations","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"named_args","doc":null,"default_value":"","external_name":"named_args","restriction":""},"splat_index":1,"block_arg":null,"visibility":"Public","body":"    \n{% for assoc in associations %}\n      def {{ assoc[:assoc_name] }}_query\n        {% if assoc[:relationship_type] == (:has_many) %}\n          {{ assoc[:type] }}::BaseQuery.new.{{ assoc[:foreign_key].id }}(id)\n        {% else %}{% if assoc[:relationship_type] == (:belongs_to) %}\n          {{ assoc[:type] }}::BaseQuery.new.id({{ assoc[:foreign_key].id }})\n        {% else %}\n          {{ assoc[:type] }}::BaseQuery.new\n        {% end %}{% end %}\n      end\n    {% end %}\n\n  \n"}},{"id":"setup_column_info_methods(columns,*args,**named_args)-macro","html_id":"setup_column_info_methods(columns,*args,**named_args)-macro","name":"setup_column_info_methods","doc":null,"summary":null,"abstract":false,"args":[{"name":"columns","doc":null,"default_value":"","external_name":"columns","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(columns, *args, **named_args)","location":{"filename":"src/avram/model.cr","line_number":235,"url":null},"def":{"name":"setup_column_info_methods","args":[{"name":"columns","doc":null,"default_value":"","external_name":"columns","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"named_args","doc":null,"default_value":"","external_name":"named_args","restriction":""},"splat_index":1,"block_arg":null,"visibility":"Public","body":"    def self.column_names : Array(Symbol)\n      columns.map \n{ |column| column[:name] }\n    \nend\n\n    def self.columns : Array(\n{name: Symbol, nilable: Bool, type: String})\n      [\n        \n{% for column in columns %}\n          {\n            name: {{ column[:name].id.symbolize }},\n            nilable: {{ column[:nilable] }},\n            type: {{ column[:type].id }}.name\n          },\n        {% end %}\n\n      ]\n    \nend\n  \n"}},{"id":"setup_db_mapping(columns,*args,**named_args)-macro","html_id":"setup_db_mapping(columns,*args,**named_args)-macro","name":"setup_db_mapping","doc":"Setup [database mapping](http://crystal-lang.github.io/crystal-db/api/latest/DB.html) for the model's columns.\n\nNOTE: Avram::Migrator saves `Float` columns as numeric which are converted\nin the avram/charms/float64_extensions.cr file","summary":"<p>Setup <a href=\"http://crystal-lang.github.io/crystal-db/api/latest/DB.html\">database mapping</a> for the model's columns.</p>","abstract":false,"args":[{"name":"columns","doc":null,"default_value":"","external_name":"columns","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(columns, *args, **named_args)","location":{"filename":"src/avram/model.cr","line_number":165,"url":null},"def":{"name":"setup_db_mapping","args":[{"name":"columns","doc":null,"default_value":"","external_name":"columns","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"named_args","doc":null,"default_value":"","external_name":"named_args","restriction":""},"splat_index":1,"block_arg":null,"visibility":"Public","body":"    DB.mapping(\n{\n      \n{% for column in columns %}\n        {{ column[:name] }}: {\n          {% if column[:type].id == Array(Float64).id %}\n            type: Array(PG::Numeric),\n          {% else %}{% if column[:type].is_a?(Generic) %}\n            type: {{ column[:type] }},\n          {% else %}\n            type: {{ column[:type] }}::Lucky::ColumnType,\n          {% end %}{% end %}\n          nilable: {{ column[:nilable] }},\n        },\n      {% end %}\n\n    })\n  \n"}},{"id":"setup_getters(columns,*args,**named_args)-macro","html_id":"setup_getters(columns,*args,**named_args)-macro","name":"setup_getters","doc":null,"summary":null,"abstract":false,"args":[{"name":"columns","doc":null,"default_value":"","external_name":"columns","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(columns, *args, **named_args)","location":{"filename":"src/avram/model.cr","line_number":206,"url":null},"def":{"name":"setup_getters","args":[{"name":"columns","doc":null,"default_value":"","external_name":"columns","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"named_args","doc":null,"default_value":"","external_name":"named_args","restriction":""},"splat_index":1,"block_arg":null,"visibility":"Public","body":"    \n{% for column in columns %}\n      def {{ column[:name] }} : {{ column[:type] }}{{ (column[:nilable] ? \"?\" : \"\").id }}\n        {{ column[:type] }}.adapter.from_db!(@{{ column[:name] }})\n      end\n      {% if column[:type].id == Bool.id %}\n      def {{ column[:name] }}? : Bool\n        !!{{ column[:name] }}\n      end\n      {% end %}\n    {% end %}\n\n  \n"}},{"id":"setup_initialize(columns,*args,**named_args)-macro","html_id":"setup_initialize(columns,*args,**named_args)-macro","name":"setup_initialize","doc":null,"summary":null,"abstract":false,"args":[{"name":"columns","doc":null,"default_value":"","external_name":"columns","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(columns, *args, **named_args)","location":{"filename":"src/avram/model.cr","line_number":152,"url":null},"def":{"name":"setup_initialize","args":[{"name":"columns","doc":null,"default_value":"","external_name":"columns","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"named_args","doc":null,"default_value":"","external_name":"named_args","restriction":""},"splat_index":1,"block_arg":null,"visibility":"Public","body":"    def initialize(\n        \n{% for column in columns %}\n          @{{ column[:name] }},\n        {% end %}\n\n      )\n    \nend\n  \n"}},{"id":"setup_table_schema_enforcer_validations(type,*args,**named_args)-macro","html_id":"setup_table_schema_enforcer_validations(type,*args,**named_args)-macro","name":"setup_table_schema_enforcer_validations","doc":null,"summary":null,"abstract":false,"args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(type, *args, **named_args)","location":{"filename":"src/avram/model.cr","line_number":196,"url":null},"def":{"name":"setup_table_schema_enforcer_validations","args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"named_args","doc":null,"default_value":"","external_name":"named_args","restriction":""},"splat_index":1,"block_arg":null,"visibility":"Public","body":"    schema_enforcer_validations << EnsureExistingTable.new(model_class: \n{{ type.id }}\n)\n    schema_enforcer_validations << EnsureMatchingColumns.new(model_class: \n{{ type.id }}\n)\n  \n"}},{"id":"setup_view_schema_enforcer_validations(type,*args,**named_args)-macro","html_id":"setup_view_schema_enforcer_validations(type,*args,**named_args)-macro","name":"setup_view_schema_enforcer_validations","doc":null,"summary":null,"abstract":false,"args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(type, *args, **named_args)","location":{"filename":"src/avram/model.cr","line_number":201,"url":null},"def":{"name":"setup_view_schema_enforcer_validations","args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"named_args","doc":null,"default_value":"","external_name":"named_args","restriction":""},"splat_index":1,"block_arg":null,"visibility":"Public","body":"    schema_enforcer_validations << EnsureExistingTable.new(model_class: \n{{ type.id }}\n)\n    schema_enforcer_validations << EnsureMatchingColumns.new(model_class: \n{{ type.id }}\n, check_required: false)\n  \n"}},{"id":"skip_default_columns-macro","html_id":"skip_default_columns-macro","name":"skip_default_columns","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","location":{"filename":"src/avram/model.cr","line_number":134,"url":null},"def":{"name":"skip_default_columns","args":[],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    macro default_columns\n    \nend\n  \n"}},{"id":"table(table_name=nil)-macro","html_id":"table(table_name=nil)-macro","name":"table","doc":null,"summary":null,"abstract":false,"args":[{"name":"table_name","doc":null,"default_value":"nil","external_name":"table_name","restriction":""}],"args_string":"(table_name = <span class=\"n\">nil</span>)","location":{"filename":"src/avram/model.cr","line_number":48,"url":null},"def":{"name":"table","args":[{"name":"table_name","doc":null,"default_value":"nil","external_name":"table_name","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    \n{% if table_name %}{% else %}\n      {% table_name = run(\"../run_macros/infer_table_name.cr\", @type.id) %}\n    {% end %}\n\n\n    default_columns\n\n    \n{{ yield }}\n\n\n    validate_primary_key\n\n    class_getter table_name = \n{{ table_name.id.symbolize }}\n\n    TABLE_NAME = \n{{ table_name.id.symbolize }}\n\n    setup(Avram::Model.setup_initialize)\n    setup(Avram::Model.setup_db_mapping)\n    setup(Avram::Model.setup_getters)\n    setup(Avram::Model.setup_column_info_methods)\n    setup(Avram::Model.setup_association_queries)\n    setup(Avram::Model.setup_table_schema_enforcer_validations)\n    setup(Avram::BaseQueryTemplate.setup)\n    setup(Avram::SaveOperationTemplate.setup)\n    setup(Avram::DeleteOperationTemplate.setup)\n    setup(Avram::SchemaEnforcer.setup)\n  \n"}},{"id":"timestamps-macro","html_id":"timestamps-macro","name":"timestamps","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","location":{"filename":"src/avram/model.cr","line_number":139,"url":null},"def":{"name":"timestamps","args":[],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    column created_at : Time, autogenerated: true\n    column updated_at : Time, autogenerated: true\n  "}},{"id":"validate_primary_key-macro","html_id":"validate_primary_key-macro","name":"validate_primary_key","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","location":{"filename":"src/avram/model.cr","line_number":113,"url":null},"def":{"name":"validate_primary_key","args":[],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    \n{% if !(@type.has_constant?(\"PRIMARY_KEY_TYPE\")) %}\n      \\{% raise <<-ERROR\n        No primary key was specified.\n\n        Example:\n\n          table do\n            primary_key id : Int64\n            ...\n          end\n        ERROR\n      %}\n    {% end %}\n\n  \n"}},{"id":"view(view_name=nil)-macro","html_id":"view(view_name=nil)-macro","name":"view","doc":null,"summary":null,"abstract":false,"args":[{"name":"view_name","doc":null,"default_value":"nil","external_name":"view_name","restriction":""}],"args_string":"(view_name = <span class=\"n\">nil</span>)","location":{"filename":"src/avram/model.cr","line_number":73,"url":null},"def":{"name":"view","args":[{"name":"view_name","doc":null,"default_value":"nil","external_name":"view_name","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    \n{% if view_name %}{% else %}\n      {% view_name = run(\"../run_macros/infer_table_name.cr\", @type.id) %}\n    {% end %}\n\n\n    \n{{ yield }}\n\n\n    class_getter table_name = \n{{ view_name.id.symbolize }}\n\n    TABLE_NAME = \n{{ view_name.id.symbolize }}\n\n    setup(Avram::Model.setup_initialize)\n    setup(Avram::Model.setup_db_mapping)\n    setup(Avram::Model.setup_getters)\n    setup(Avram::Model.setup_column_info_methods)\n    setup(Avram::Model.setup_association_queries)\n    setup(Avram::Model.setup_view_schema_enforcer_validations)\n    setup(Avram::BaseQueryTemplate.setup)\n    setup(Avram::SchemaEnforcer.setup)\n  \n"}}],"types":[]},{"html_id":"avram/Avram/NeedyInitializer","path":"Avram/NeedyInitializer.html","kind":"module","full_name":"Avram::NeedyInitializer","name":"NeedyInitializer","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"avram/Avram/Operation","kind":"class","full_name":"Avram::Operation","name":"Operation"}],"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[{"id":"generate_initializer(attribute_method_args,attribute_params)-macro","html_id":"generate_initializer(attribute_method_args,attribute_params)-macro","name":"generate_initializer","doc":null,"summary":null,"abstract":false,"args":[{"name":"attribute_method_args","doc":null,"default_value":"","external_name":"attribute_method_args","restriction":""},{"name":"attribute_params","doc":null,"default_value":"","external_name":"attribute_params","restriction":""}],"args_string":"(attribute_method_args, attribute_params)","location":{"filename":"src/avram/needy_initializer.cr","line_number":71,"url":null},"def":{"name":"generate_initializer","args":[{"name":"attribute_method_args","doc":null,"default_value":"","external_name":"attribute_method_args","restriction":""},{"name":"attribute_params","doc":null,"default_value":"","external_name":"attribute_params","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    \n{% needs_method_args = \"\" %}\n\n    \n{% for type_declaration in OPERATION_NEEDS %}\n      {% needs_method_args = needs_method_args + \"@#{type_declaration},\\n\" %}\n    {% end %}\n\n\n    def initialize(\n        @params : Avram::Paramable,\n        \n{{ needs_method_args.id }}\n\n        \n{{ attribute_method_args.id }}\n\n    )\n      set_attributes(\n{{ attribute_params.id }}\n)\n    \nend\n\n    def initialize(\n        \n{{ needs_method_args.id }}\n\n        \n{{ attribute_method_args.id }}\n\n    )\n      @params = Avram::Params.new\n      set_attributes(\n{{ attribute_params.id }}\n)\n    \nend\n\n    def set_attributes(\n{{ attribute_method_args.id }}\n)\n      \n{% for attribute in ATTRIBUTES %}\n        unless {{ attribute.var }}.is_a? Nothing\n          self.{{ attribute.var }}.value = {{ attribute.var }}\n        end\n      {% end %}\n\n    \nend\n  \n"}},{"id":"generate_initializers-macro","html_id":"generate_initializers-macro","name":"generate_initializers","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","location":{"filename":"src/avram/needy_initializer.cr","line_number":37,"url":null},"def":{"name":"generate_initializers","args":[],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    \n# Build up a list of method arguments\n\n    \n#\n\n    \n# This way everything has a name and type and we don't have to rely on\n\n    \n# **named_args. **named_args** are easy but you get horrible type errors.\n\n    \n#\n\n    \n# attribute_method_args would look something like:\n\n    \n#\n\n    \n#   name : String | Nothing = Nothing.new,\n\n    \n#   email : String | Nil | Nothing = Nothing.new\n\n    \n#\n\n    \n# This can be passed to macros as a string, and then the macro can call .id\n\n    \n# on it to output the string as code!\n\n    \n{% attribute_method_args = \"\" %}\n\n\n    \n# Build up a list of params so you can use the method args\n\n    \n#\n\n    \n# This looks something like:\n\n    \n#\n\n    \n#   name: name,\n\n    \n#   email: email\n\n    \n{% attribute_params = \"\" %}\n\n\n    \n{% for attribute in ATTRIBUTES %}\n      {% attribute_method_args = attribute_method_args + \"#{attribute.var} : #{attribute.type} | Nothing = Nothing.new,\\n\" %}\n      {% attribute_params = attribute_params + \"#{attribute.var}: #{attribute.var},\\n\" %}\n    {% end %}\n\n\n    generate_initializer(\n{{ attribute_method_args }}\n, \n{{ attribute_params }}\n)\n  \n"}},{"id":"inherit_needs-macro","html_id":"inherit_needs-macro","name":"inherit_needs","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","location":{"filename":"src/avram/needy_initializer.cr","line_number":15,"url":null},"def":{"name":"inherit_needs","args":[],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    \n\\{% if\n !@type.constant(:OPERATION_NEEDS) %}\n      OPERATION_NEEDS = [] of Nil\n    \n\\{% end\n %}\n\n    \n\\{% if\n !@type.ancestors.first.abstract? %}\n      \n\\{% for\n type_declaration in @type.ancestors.first.constant :OPERATION_NEEDS %}\n        \n\\{% \nOPERATION_NEEDS << type_declaration %}\n      \n\\{% end\n %}\n    \n\\{% end\n %}\n\n    macro inherited\n      inherit_needs\n    \nend\n\n    macro finished\n      \n# This is called at the end so @type will be of the subclass,\n\n      \n# and not the parent abstract class.\n\n      generate_initializers\n    \nend\n  \n"}},{"id":"needs(type_declaration)-macro","html_id":"needs(type_declaration)-macro","name":"needs","doc":null,"summary":null,"abstract":false,"args":[{"name":"type_declaration","doc":null,"default_value":"","external_name":"type_declaration","restriction":""}],"args_string":"(type_declaration)","location":{"filename":"src/avram/needy_initializer.cr","line_number":10,"url":null},"def":{"name":"needs","args":[{"name":"type_declaration","doc":null,"default_value":"","external_name":"type_declaration","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    \n{% OPERATION_NEEDS << type_declaration %}\n\n    property \n{{ type_declaration.var }}\n : \n{{ type_declaration.type }}\n\n  \n"}}],"types":[]},{"html_id":"avram/Avram/NeedyInitializerAndDeleteMethods","path":"Avram/NeedyInitializerAndDeleteMethods.html","kind":"module","full_name":"Avram::NeedyInitializerAndDeleteMethods","name":"NeedyInitializerAndDeleteMethods","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"avram/Avram/DeleteOperation","kind":"class","full_name":"Avram::DeleteOperation(T)","name":"DeleteOperation"}],"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[{"id":"generate_delete_methods(attribute_method_args,attribute_params)-macro","html_id":"generate_delete_methods(attribute_method_args,attribute_params)-macro","name":"generate_delete_methods","doc":null,"summary":null,"abstract":false,"args":[{"name":"attribute_method_args","doc":null,"default_value":"","external_name":"attribute_method_args","restriction":""},{"name":"attribute_params","doc":null,"default_value":"","external_name":"attribute_params","restriction":""}],"args_string":"(attribute_method_args, attribute_params)","location":{"filename":"src/avram/needy_initializer_and_delete_methods.cr","line_number":150,"url":null},"def":{"name":"generate_delete_methods","args":[{"name":"attribute_method_args","doc":null,"default_value":"","external_name":"attribute_method_args","restriction":""},{"name":"attribute_params","doc":null,"default_value":"","external_name":"attribute_params","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    generate_destroy(\n{{ attribute_method_args }}\n, \n{{ attribute_params }}\n, with_params: true, with_bang: true)\n    generate_destroy(\n{{ attribute_method_args }}\n, \n{{ attribute_params }}\n, with_params: true, with_bang: false)\n    generate_destroy(\n{{ attribute_method_args }}\n, \n{{ attribute_params }}\n, with_params: false, with_bang: true)\n    generate_destroy(\n{{ attribute_method_args }}\n, \n{{ attribute_params }}\n, with_params: false, with_bang: false)\n  \n"}},{"id":"generate_destroy(attribute_method_args,attribute_params,with_params,with_bang)-macro","html_id":"generate_destroy(attribute_method_args,attribute_params,with_params,with_bang)-macro","name":"generate_destroy","doc":null,"summary":null,"abstract":false,"args":[{"name":"attribute_method_args","doc":null,"default_value":"","external_name":"attribute_method_args","restriction":""},{"name":"attribute_params","doc":null,"default_value":"","external_name":"attribute_params","restriction":""},{"name":"with_params","doc":null,"default_value":"","external_name":"with_params","restriction":""},{"name":"with_bang","doc":null,"default_value":"","external_name":"with_bang","restriction":""}],"args_string":"(attribute_method_args, attribute_params, with_params, with_bang)","location":{"filename":"src/avram/needy_initializer_and_delete_methods.cr","line_number":94,"url":null},"def":{"name":"generate_destroy","args":[{"name":"attribute_method_args","doc":null,"default_value":"","external_name":"attribute_method_args","restriction":""},{"name":"attribute_params","doc":null,"default_value":"","external_name":"attribute_params","restriction":""},{"name":"with_params","doc":null,"default_value":"","external_name":"with_params","restriction":""},{"name":"with_bang","doc":null,"default_value":"","external_name":"with_bang","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    def self.delete\n{% if with_bang %}!{% end %}\n(*args, **named_args\n{% if !with_bang %}, &block{% end %}\n)\n      \n{% verbatim do %}\n        {% raise(\"DeleteOperations do not have a 'delete' method.\\n\\nTry this...\\n\\n  ▸ Use 'destroy' to delete a record\\n\") %}\n      {% end %}\n\n    \nend\n\n    def self.destroy\n{% if with_bang %}!{% end %}\n(\n      record : T,\n      params : Hash,\n      **named_args\n    )\n      \n{% if with_bang %}\n      {% else %}\n        yield nil, nil\n      {% end %}\n\n      hash_is_not_allowed_helpful_error(:destroy\n{% if with_bang %}!{% end %}\n, additional_args: \"record, \")\n    \nend\n\n    def self.destroy\n{% if with_bang %}!{% end %}\n(\n        record : T,\n        \n{% if with_params %}params,{% end %}\n\n        \n{% for type_declaration in OPERATION_NEEDS %}\n          {{ type_declaration }},\n        {% end %}\n\n        \n{{ attribute_method_args.id }}\n\n      )\n      operation = new(\n        record,\n        \n{% if with_params %}params,{% end %}\n\n        \n{% for type_declaration in OPERATION_NEEDS %}\n          {{ type_declaration.var }},\n        {% end %}\n\n        \n{{ attribute_params.id }}\n\n      )\n\n      \n{% if with_bang %}\n        operation.delete!\n      {% else %}\n        if operation.delete\n          yield operation, operation.record.not_nil!\n        else\n          yield operation, nil\n        end\n      {% end %}\n\n    \nend\n  \n"}},{"id":"generate_initializer(attribute_method_args,attribute_params)-macro","html_id":"generate_initializer(attribute_method_args,attribute_params)-macro","name":"generate_initializer","doc":null,"summary":null,"abstract":false,"args":[{"name":"attribute_method_args","doc":null,"default_value":"","external_name":"attribute_method_args","restriction":""},{"name":"attribute_params","doc":null,"default_value":"","external_name":"attribute_params","restriction":""}],"args_string":"(attribute_method_args, attribute_params)","location":{"filename":"src/avram/needy_initializer_and_delete_methods.cr","line_number":160,"url":null},"def":{"name":"generate_initializer","args":[{"name":"attribute_method_args","doc":null,"default_value":"","external_name":"attribute_method_args","restriction":""},{"name":"attribute_params","doc":null,"default_value":"","external_name":"attribute_params","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    \n{% needs_method_args = \"\" %}\n\n    \n{% for type_declaration in OPERATION_NEEDS %}\n      {% needs_method_args = needs_method_args + \"@#{type_declaration},\\n\" %}\n    {% end %}\n\n\n    def initialize(\n        @record : T,\n        @params : Avram::Paramable,\n        \n{{ needs_method_args.id }}\n\n        \n{{ attribute_method_args.id }}\n\n      )\n      set_attributes(\n{{ attribute_params.id }}\n)\n    \nend\n\n    def initialize(\n        @record : T,\n        \n{{ needs_method_args.id }}\n\n        \n{{ attribute_method_args.id }}\n\n    )\n      @params = Avram::Params.new\n      set_attributes(\n{{ attribute_params.id }}\n)\n    \nend\n\n    def set_attributes(\n{{ attribute_method_args.id }}\n)\n      \n{% if @type.constant(:COLUMN_ATTRIBUTES) %}\n        {% for attribute in COLUMN_ATTRIBUTES.uniq %}\n          unless {{ attribute[:name] }}.is_a? Nothing\n            self.{{ attribute[:name] }}.value = {{ attribute[:name] }}\n          end\n        {% end %}\n      {% end %}\n\n\n      \n{% for attribute in ATTRIBUTES %}\n        unless {{ attribute.var }}.is_a? Nothing\n          self.{{ attribute.var }}.value = {{ attribute.var }}\n        end\n      {% end %}\n\n      \nextract_changes_from_params\n    \nend\n  \n"}},{"id":"generate_initializer_and_destroy_methods-macro","html_id":"generate_initializer_and_destroy_methods-macro","name":"generate_initializer_and_destroy_methods","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","location":{"filename":"src/avram/needy_initializer_and_delete_methods.cr","line_number":37,"url":null},"def":{"name":"generate_initializer_and_destroy_methods","args":[],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    \n# Build up a list of method arguments\n\n    \n#\n\n    \n# These method arguments can be used in macros for generating destroy/new\n\n    \n#\n\n    \n# This way everything has a name and type and we don't have to rely on\n\n    \n# **named_args. **named_args** are easy but you get horrible type errors.\n\n    \n#\n\n    \n# attribute_method_args would look something like:\n\n    \n#\n\n    \n#   name : String | Nothing = Nothing.new,\n\n    \n#   email : String | Nil | Nothing = Nothing.new\n\n    \n#\n\n    \n# This can be passed to macros as a string, and then the macro can call .id\n\n    \n# on it to output the string as code!\n\n    \n{% attribute_method_args = \"\" %}\n\n\n    \n# Build up a list of params so you can use the method args\n\n    \n#\n\n    \n# This looks something like:\n\n    \n#\n\n    \n#   name: name,\n\n    \n#   email: email\n\n    \n{% attribute_params = \"\" %}\n\n\n    \n{% if @type.constant(:COLUMN_ATTRIBUTES) %}\n      {% for attribute in COLUMN_ATTRIBUTES.uniq %}\n        {% attribute_method_args = attribute_method_args + \"#{attribute[:name]} : #{attribute[:type]} | Nothing\" %}\n        {% if attribute[:nilable] %}{% attribute_method_args = attribute_method_args + \" | Nil\" %}{% end %}\n        {% attribute_method_args = attribute_method_args + \" = Nothing.new,\\n\" %}\n\n        {% attribute_params = attribute_params + \"#{attribute[:name]}: #{attribute[:name]},\\n\" %}\n      {% end %}\n    {% end %}\n\n\n    \n{% for attribute in ATTRIBUTES %}\n      {% attribute_method_args = attribute_method_args + \"#{attribute.var} : #{attribute.type} | Nothing = Nothing.new,\\n\" %}\n      {% attribute_params = attribute_params + \"#{attribute.var}: #{attribute.var},\\n\" %}\n    {% end %}\n\n\n    generate_initializer(\n{{ attribute_method_args }}\n, \n{{ attribute_params }}\n)\n    generate_delete_methods(\n{{ attribute_method_args }}\n, \n{{ attribute_params }}\n)\n  \n"}},{"id":"hash_is_not_allowed_helpful_error(method,additional_args=nil)-macro","html_id":"hash_is_not_allowed_helpful_error(method,additional_args=nil)-macro","name":"hash_is_not_allowed_helpful_error","doc":null,"summary":null,"abstract":false,"args":[{"name":"method","doc":null,"default_value":"","external_name":"method","restriction":""},{"name":"additional_args","doc":null,"default_value":"nil","external_name":"additional_args","restriction":""}],"args_string":"(method, additional_args = <span class=\"n\">nil</span>)","location":{"filename":"src/avram/needy_initializer_and_delete_methods.cr","line_number":81,"url":null},"def":{"name":"hash_is_not_allowed_helpful_error","args":[{"name":"method","doc":null,"default_value":"","external_name":"method","restriction":""},{"name":"additional_args","doc":null,"default_value":"nil","external_name":"additional_args","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    \n{% raise(\"You can't pass a Hash directly to #{method.id}. Instead pass named arguments, or convert the hash to params.\\n\\nTry this...\\n\\n  * Use named arguments (recommended) - #{@type}.#{method.id}(#{if additional_args\n  additional_args.id\nend}title: \\\"My Title\\\")\\n  * Convert hash to params (not as safe) - Avram::Params.new({\\\"title\\\" => \\\"My Title\\\"})\\n\") %}\n\n  \n"}},{"id":"inherit_needs-macro","html_id":"inherit_needs-macro","name":"inherit_needs","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","location":{"filename":"src/avram/needy_initializer_and_delete_methods.cr","line_number":15,"url":null},"def":{"name":"inherit_needs","args":[],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    \n\\{% if\n !@type.constant(:OPERATION_NEEDS) %}\n      OPERATION_NEEDS = [] of Nil\n    \n\\{% end\n %}\n\n    \n\\{% if\n !@type.ancestors.first.abstract? %}\n      \n\\{% for\n type_declaration in @type.ancestors.first.constant :OPERATION_NEEDS %}\n        \n\\{% \nOPERATION_NEEDS << type_declaration %}\n      \n\\{% end\n %}\n    \n\\{% end\n %}\n\n    macro inherited\n      inherit_needs\n    \nend\n\n    macro finished\n      \n# This is called at the end so @type will be of the subclass,\n\n      \n# and not the parent abstract class.\n\n      generate_initializer_and_destroy_methods\n    \nend\n  \n"}},{"id":"needs(type_declaration)-macro","html_id":"needs(type_declaration)-macro","name":"needs","doc":null,"summary":null,"abstract":false,"args":[{"name":"type_declaration","doc":null,"default_value":"","external_name":"type_declaration","restriction":""}],"args_string":"(type_declaration)","location":{"filename":"src/avram/needy_initializer_and_delete_methods.cr","line_number":10,"url":null},"def":{"name":"needs","args":[{"name":"type_declaration","doc":null,"default_value":"","external_name":"type_declaration","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    \n{% OPERATION_NEEDS << type_declaration %}\n\n    property \n{{ type_declaration.var }}\n : \n{{ type_declaration.type }}\n\n  \n"}}],"types":[]},{"html_id":"avram/Avram/NeedyInitializerAndSaveMethods","path":"Avram/NeedyInitializerAndSaveMethods.html","kind":"module","full_name":"Avram::NeedyInitializerAndSaveMethods","name":"NeedyInitializerAndSaveMethods","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"avram/Avram/SaveOperation","kind":"class","full_name":"Avram::SaveOperation(T)","name":"SaveOperation"}],"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[{"id":"generate_create(attribute_method_args,attribute_params,with_params,with_bang)-macro","html_id":"generate_create(attribute_method_args,attribute_params,with_params,with_bang)-macro","name":"generate_create","doc":null,"summary":null,"abstract":false,"args":[{"name":"attribute_method_args","doc":null,"default_value":"","external_name":"attribute_method_args","restriction":""},{"name":"attribute_params","doc":null,"default_value":"","external_name":"attribute_params","restriction":""},{"name":"with_params","doc":null,"default_value":"","external_name":"with_params","restriction":""},{"name":"with_bang","doc":null,"default_value":"","external_name":"with_bang","restriction":""}],"args_string":"(attribute_method_args, attribute_params, with_params, with_bang)","location":{"filename":"src/avram/needy_initializer_and_save_methods.cr","line_number":96,"url":null},"def":{"name":"generate_create","args":[{"name":"attribute_method_args","doc":null,"default_value":"","external_name":"attribute_method_args","restriction":""},{"name":"attribute_params","doc":null,"default_value":"","external_name":"attribute_params","restriction":""},{"name":"with_params","doc":null,"default_value":"","external_name":"with_params","restriction":""},{"name":"with_bang","doc":null,"default_value":"","external_name":"with_bang","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    def self.create\n{% if with_bang %}!{% end %}\n(\n      params : Hash, **named_args\n    )\n      \n{% if with_bang %}\n      {% else %}\n        yield nil, nil\n      {% end %}\n\n      hash_is_not_allowed_helpful_error(:create\n{% if with_bang %}!{% end %}\n)\n    \nend\n\n    def self.create\n{% if with_bang %}!{% end %}\n(\n      \n{% if with_params %}params,{% end %}\n\n      \n{% for type_declaration in OPERATION_NEEDS %}\n        {{ type_declaration }},\n      {% end %}\n\n      \n{{ attribute_method_args.id }}\n\n    )\n      operation = new(\n        \n{% if with_params %}params,{% end %}\n\n        \n{% for type_declaration in OPERATION_NEEDS %}\n          {{ type_declaration.var }},\n        {% end %}\n\n        \n{{ attribute_params.id }}\n\n      )\n\n      \n{% if with_bang %}\n        operation.save!\n      {% else %}\n        if operation.save\n          yield operation, operation.record\n        else\n          operation.published_save_failed_event\n          yield operation, nil\n        end\n      {% end %}\n\n    \nend\n  \n"}},{"id":"generate_initializer(attribute_method_args,attribute_params)-macro","html_id":"generate_initializer(attribute_method_args,attribute_params)-macro","name":"generate_initializer","doc":null,"summary":null,"abstract":false,"args":[{"name":"attribute_method_args","doc":null,"default_value":"","external_name":"attribute_method_args","restriction":""},{"name":"attribute_params","doc":null,"default_value":"","external_name":"attribute_params","restriction":""}],"args_string":"(attribute_method_args, attribute_params)","location":{"filename":"src/avram/needy_initializer_and_save_methods.cr","line_number":193,"url":null},"def":{"name":"generate_initializer","args":[{"name":"attribute_method_args","doc":null,"default_value":"","external_name":"attribute_method_args","restriction":""},{"name":"attribute_params","doc":null,"default_value":"","external_name":"attribute_params","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    \n{% needs_method_args = \"\" %}\n\n    \n{% for type_declaration in OPERATION_NEEDS %}\n      {% needs_method_args = needs_method_args + \"@#{type_declaration},\\n\" %}\n    {% end %}\n\n\n    def initialize(\n        @record : T,\n        @params : Avram::Paramable,\n        \n{{ needs_method_args.id }}\n\n        \n{{ attribute_method_args.id }}\n\n      )\n      set_attributes(\n{{ attribute_params.id }}\n)\n    \nend\n\n    def initialize(\n        @params : Avram::Paramable,\n        \n{{ needs_method_args.id }}\n\n        \n{{ attribute_method_args.id }}\n\n    )\n      @record = nil\n      set_attributes(\n{{ attribute_params.id }}\n)\n    \nend\n\n    def initialize(\n        @record : T,\n        \n{{ needs_method_args.id }}\n\n        \n{{ attribute_method_args.id }}\n\n    )\n      @params = Avram::Params.new\n      set_attributes(\n{{ attribute_params.id }}\n)\n    \nend\n\n    def initialize(\n        \n{{ needs_method_args.id }}\n\n        \n{{ attribute_method_args.id }}\n\n    )\n      @record = nil\n      @params = Avram::Params.new\n      set_attributes(\n{{ attribute_params.id }}\n)\n    \nend\n\n    def set_attributes(\n{{ attribute_method_args.id }}\n)\n      \n{% if @type.constant(:COLUMN_ATTRIBUTES) %}\n        {% for attribute in COLUMN_ATTRIBUTES.uniq %}\n          unless {{ attribute[:name] }}.is_a? Nothing\n            self.{{ attribute[:name] }}.value = {{ attribute[:name] }}\n          end\n        {% end %}\n      {% end %}\n\n\n      \n{% for attribute in ATTRIBUTES %}\n        unless {{ attribute.var }}.is_a? Nothing\n          self.{{ attribute.var }}.value = {{ attribute.var }}\n        end\n      {% end %}\n\n      \nextract_changes_from_params\n    \nend\n  \n"}},{"id":"generate_initializer_and_save_methods-macro","html_id":"generate_initializer_and_save_methods-macro","name":"generate_initializer_and_save_methods","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","location":{"filename":"src/avram/needy_initializer_and_save_methods.cr","line_number":39,"url":null},"def":{"name":"generate_initializer_and_save_methods","args":[],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    \n# Build up a list of method arguments\n\n    \n#\n\n    \n# These method arguments can be used in macros fro generating create/update/new\n\n    \n#\n\n    \n# This way everything has a name and type and we don't have to rely on\n\n    \n# **named_args. **named_args** are easy but you get horrible type errors.\n\n    \n#\n\n    \n# attribute_method_args would look something like:\n\n    \n#\n\n    \n#   name : String | Nothing = Nothing.new,\n\n    \n#   email : String | Nil | Nothing = Nothing.new\n\n    \n#\n\n    \n# This can be passed to macros as a string, and then the macro can call .id\n\n    \n# on it to output the string as code!\n\n    \n{% attribute_method_args = \"\" %}\n\n\n    \n# Build up a list of params so you can use the method args\n\n    \n#\n\n    \n# This looks something like:\n\n    \n#\n\n    \n#   name: name,\n\n    \n#   email: email\n\n    \n{% attribute_params = \"\" %}\n\n\n    \n{% if @type.constant(:COLUMN_ATTRIBUTES) %}\n      {% for attribute in COLUMN_ATTRIBUTES.uniq %}\n        {% attribute_method_args = attribute_method_args + \"#{attribute[:name]} : #{attribute[:type]} | Nothing\" %}\n        {% if attribute[:nilable] %}{% attribute_method_args = attribute_method_args + \" | Nil\" %}{% end %}\n        {% attribute_method_args = attribute_method_args + \" = Nothing.new,\\n\" %}\n\n        {% attribute_params = attribute_params + \"#{attribute[:name]}: #{attribute[:name]},\\n\" %}\n      {% end %}\n    {% end %}\n\n\n    \n{% for attribute in ATTRIBUTES %}\n      {% attribute_method_args = attribute_method_args + \"#{attribute.var} : #{attribute.type} | Nothing = Nothing.new,\\n\" %}\n      {% attribute_params = attribute_params + \"#{attribute.var}: #{attribute.var},\\n\" %}\n    {% end %}\n\n\n    generate_initializer(\n{{ attribute_method_args }}\n, \n{{ attribute_params }}\n)\n    generate_save_methods(\n{{ attribute_method_args }}\n, \n{{ attribute_params }}\n)\n  \n"}},{"id":"generate_save_methods(attribute_method_args,attribute_params)-macro","html_id":"generate_save_methods(attribute_method_args,attribute_params)-macro","name":"generate_save_methods","doc":null,"summary":null,"abstract":false,"args":[{"name":"attribute_method_args","doc":null,"default_value":"","external_name":"attribute_method_args","restriction":""},{"name":"attribute_params","doc":null,"default_value":"","external_name":"attribute_params","restriction":""}],"args_string":"(attribute_method_args, attribute_params)","location":{"filename":"src/avram/needy_initializer_and_save_methods.cr","line_number":178,"url":null},"def":{"name":"generate_save_methods","args":[{"name":"attribute_method_args","doc":null,"default_value":"","external_name":"attribute_method_args","restriction":""},{"name":"attribute_params","doc":null,"default_value":"","external_name":"attribute_params","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    generate_create(\n{{ attribute_method_args }}\n, \n{{ attribute_params }}\n, with_params: true, with_bang: false)\n    generate_create(\n{{ attribute_method_args }}\n, \n{{ attribute_params }}\n, with_params: true, with_bang: true)\n    generate_create(\n{{ attribute_method_args }}\n, \n{{ attribute_params }}\n, with_params: false, with_bang: true)\n    generate_create(\n{{ attribute_method_args }}\n, \n{{ attribute_params }}\n, with_params: false, with_bang: false)\n\n    generate_update(\n{{ attribute_method_args }}\n, \n{{ attribute_params }}\n, with_params: true, with_bang: false)\n    generate_update(\n{{ attribute_method_args }}\n, \n{{ attribute_params }}\n, with_params: true, with_bang: true)\n    generate_update(\n{{ attribute_method_args }}\n, \n{{ attribute_params }}\n, with_params: false, with_bang: true)\n    generate_update(\n{{ attribute_method_args }}\n, \n{{ attribute_params }}\n, with_params: false, with_bang: false)\n  \n"}},{"id":"generate_update(attribute_method_args,attribute_params,with_params,with_bang)-macro","html_id":"generate_update(attribute_method_args,attribute_params,with_params,with_bang)-macro","name":"generate_update","doc":null,"summary":null,"abstract":false,"args":[{"name":"attribute_method_args","doc":null,"default_value":"","external_name":"attribute_method_args","restriction":""},{"name":"attribute_params","doc":null,"default_value":"","external_name":"attribute_params","restriction":""},{"name":"with_params","doc":null,"default_value":"","external_name":"with_params","restriction":""},{"name":"with_bang","doc":null,"default_value":"","external_name":"with_bang","restriction":""}],"args_string":"(attribute_method_args, attribute_params, with_params, with_bang)","location":{"filename":"src/avram/needy_initializer_and_save_methods.cr","line_number":135,"url":null},"def":{"name":"generate_update","args":[{"name":"attribute_method_args","doc":null,"default_value":"","external_name":"attribute_method_args","restriction":""},{"name":"attribute_params","doc":null,"default_value":"","external_name":"attribute_params","restriction":""},{"name":"with_params","doc":null,"default_value":"","external_name":"with_params","restriction":""},{"name":"with_bang","doc":null,"default_value":"","external_name":"with_bang","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    def self.update\n{% if with_bang %}!{% end %}\n(\n      record : T,\n      params : Hash,\n      **named_args\n    )\n      \n{% if with_bang %}\n      {% else %}\n        yield nil, nil\n      {% end %}\n\n      hash_is_not_allowed_helpful_error(:update\n{% if with_bang %}!{% end %}\n, additional_args: \"record, \")\n    \nend\n\n    def self.update\n{% if with_bang %}!{% end %}\n(\n        record : T,\n        \n{% if with_params %}with params,{% end %}\n\n        \n{% for type_declaration in OPERATION_NEEDS %}\n          {{ type_declaration }},\n        {% end %}\n\n        \n{{ attribute_method_args.id }}\n\n      )\n      operation = new(\n        record,\n        \n{% if with_params %}params,{% end %}\n\n        \n{% for type_declaration in OPERATION_NEEDS %}\n          {{ type_declaration.var }},\n        {% end %}\n\n        \n{{ attribute_params.id }}\n\n      )\n\n      \n{% if with_bang %}\n        operation.update!\n      {% else %}\n        if operation.save\n          yield operation, operation.record.not_nil!\n        else\n          operation.published_save_failed_event\n          yield operation, operation.record.not_nil!\n        end\n      {% end %}\n\n    \nend\n  \n"}},{"id":"hash_is_not_allowed_helpful_error(method,additional_args=nil)-macro","html_id":"hash_is_not_allowed_helpful_error(method,additional_args=nil)-macro","name":"hash_is_not_allowed_helpful_error","doc":null,"summary":null,"abstract":false,"args":[{"name":"method","doc":null,"default_value":"","external_name":"method","restriction":""},{"name":"additional_args","doc":null,"default_value":"nil","external_name":"additional_args","restriction":""}],"args_string":"(method, additional_args = <span class=\"n\">nil</span>)","location":{"filename":"src/avram/needy_initializer_and_save_methods.cr","line_number":83,"url":null},"def":{"name":"hash_is_not_allowed_helpful_error","args":[{"name":"method","doc":null,"default_value":"","external_name":"method","restriction":""},{"name":"additional_args","doc":null,"default_value":"nil","external_name":"additional_args","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    \n{% raise(\"You can't pass a Hash directly to #{method.id}. Instead pass named arguments, or convert the hash to params.\\n\\nTry this...\\n\\n  * Use named arguments (recommended) - #{@type}.#{method.id}(#{if additional_args\n  additional_args.id\nend}title: \\\"My Title\\\")\\n  * Convert hash to params (not as safe) - Avram::Params.new({\\\"title\\\" => \\\"My Title\\\"})\\n\") %}\n\n  \n"}},{"id":"inherit_needs-macro","html_id":"inherit_needs-macro","name":"inherit_needs","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","location":{"filename":"src/avram/needy_initializer_and_save_methods.cr","line_number":16,"url":null},"def":{"name":"inherit_needs","args":[],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    \n\\{% if\n !@type.constant(:OPERATION_NEEDS) %}\n      OPERATION_NEEDS = [] of Nil\n    \n\\{% end\n %}\n\n    \n\\{% if\n !@type.ancestors.first.abstract? %}\n      \n\\{% for\n type_declaration in @type.ancestors.first.constant :OPERATION_NEEDS %}\n        \n\\{% \nOPERATION_NEEDS << type_declaration %}\n      \n\\{% end\n %}\n    \n\\{% end\n %}\n\n    macro inherited\n      inherit_needs\n    \nend\n\n    macro finished\n      \n# @type is not correct in this method, but is in the macro we call below\n\n      \n# That is why this extrac macro was extracted. We need @type to get the\n\n      \n# attributes for this SaveOperation\n\n      generate_initializer_and_save_methods\n    \nend\n  \n"}},{"id":"needs(type_declaration)-macro","html_id":"needs(type_declaration)-macro","name":"needs","doc":null,"summary":null,"abstract":false,"args":[{"name":"type_declaration","doc":null,"default_value":"","external_name":"type_declaration","restriction":""}],"args_string":"(type_declaration)","location":{"filename":"src/avram/needy_initializer_and_save_methods.cr","line_number":10,"url":null},"def":{"name":"needs","args":[{"name":"type_declaration","doc":null,"default_value":"","external_name":"type_declaration","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    \n{% OPERATION_NEEDS << type_declaration %}\n\n    @\n{{ type_declaration.var }}\n : \n{{ type_declaration.type }}\n\n    property \n{{ type_declaration.var }}\n\n  \n"}}],"types":[]},{"html_id":"avram/Avram/NestedSaveOperation","path":"Avram/NestedSaveOperation.html","kind":"module","full_name":"Avram::NestedSaveOperation","name":"NestedSaveOperation","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"avram/Avram/SaveOperation","kind":"class","full_name":"Avram::SaveOperation(T)","name":"SaveOperation"}],"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"mark_nested_save_operations_as_failed-instance-method","html_id":"mark_nested_save_operations_as_failed-instance-method","name":"mark_nested_save_operations_as_failed","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/nested_save_operation.cr","line_number":49,"url":null},"def":{"name":"mark_nested_save_operations_as_failed","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"nested_save_operations.each do |operation|\n  (operation.as(Avram::MarkAsFailed)).mark_as_failed\nend"}},{"id":"nested_save_operations-instance-method","html_id":"nested_save_operations-instance-method","name":"nested_save_operations","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/nested_save_operation.cr","line_number":55,"url":null},"def":{"name":"nested_save_operations","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"[] of Avram::MarkAsFailed"}}],"macros":[{"id":"has_one(type_declaration)-macro","html_id":"has_one(type_declaration)-macro","name":"has_one","doc":null,"summary":null,"abstract":false,"args":[{"name":"type_declaration","doc":null,"default_value":"","external_name":"type_declaration","restriction":""}],"args_string":"(type_declaration)","location":{"filename":"src/avram/nested_save_operation.cr","line_number":2,"url":null},"def":{"name":"has_one","args":[{"name":"type_declaration","doc":null,"default_value":"","external_name":"type_declaration","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    \n{% name = type_declaration.var %}\n\n    \n{% type = type_declaration.type.resolve %}\n\n\n    \n{% model_type = type.ancestors.find do |t|\n  t.stringify.starts_with?(\"Avram::SaveOperation(\")\nend.type_vars.first %}\n\n\n    \n{% assoc = (T.constant(:ASSOCIATIONS)).find do |assoc|\n  (assoc[:relationship_type] == (:has_one)) && (assoc[:type].resolve.name == model_type.name)\nend %}\n\n\n    \n{% if assoc %}{% else %}\n      {% raise(\"#{T} must have a has_one association with #{model_type}\") %}\n    {% end %}\n\n\n    @_\n{{ name }}\n : \n{{ type }}\n | Nil\n\n    after_save save_\n{{ name }}\n\n\n    def save_\n{{ name }}\n(saved_record)\n      \n{{ name }}\n.\n{{ (@type.constant(:FOREIGN_KEY)).id }}\n.value = saved_record.id\n\n      unless \n{{ name }}\n.save\n        add_error(:\n{{ name }}\n, \"failed\")\n        mark_nested_save_operations_as_failed\n        database.rollback\n      \nend\n    \nend\n\n    def \n{{ name }}\n\n      @_\n{{ name }}\n ||= if new_record?\n        \n{{ type }}\n.new(params)\n      \nelse\n        \n{{ type }}\n.new(record.not_nil!.\n{{ assoc[:assoc_name].id }}\n!, params)\n      \nend\n    \nend\n\n    def nested_save_operations\n      \n{% if @type.methods.map(&.name).includes?((:nested_save_operations).id) %}\n        previous_def +\n      {% end %}\n\n      [\n{{ name }}\n]\n    \nend\n  \n"}}],"types":[]},{"html_id":"avram/Avram/Operation","path":"Avram/Operation.html","kind":"class","full_name":"Avram::Operation","name":"Operation","abstract":true,"superclass":{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"avram/Avram/Callbacks","kind":"module","full_name":"Avram::Callbacks","name":"Callbacks"},{"html_id":"avram/Avram/ParamKeyOverride","kind":"module","full_name":"Avram::ParamKeyOverride","name":"ParamKeyOverride"},{"html_id":"avram/Avram/OperationErrors","kind":"module","full_name":"Avram::OperationErrors","name":"OperationErrors"},{"html_id":"avram/Avram/Validations","kind":"module","full_name":"Avram::Validations","name":"Validations"},{"html_id":"avram/Avram/DefineAttribute","kind":"module","full_name":"Avram::DefineAttribute","name":"DefineAttribute"},{"html_id":"avram/Avram/NeedyInitializer","kind":"module","full_name":"Avram::NeedyInitializer","name":"NeedyInitializer"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[{"id":"ATTRIBUTES","name":"ATTRIBUTES","value":"[] of Nil","doc":null,"summary":null},{"id":"OPERATION_NEEDS","name":"OPERATION_NEEDS","value":"[] of Nil","doc":null,"summary":null}],"included_modules":[{"html_id":"avram/Avram/Callbacks","kind":"module","full_name":"Avram::Callbacks","name":"Callbacks"},{"html_id":"avram/Avram/DefineAttribute","kind":"module","full_name":"Avram::DefineAttribute","name":"DefineAttribute"},{"html_id":"avram/Avram/NeedyInitializer","kind":"module","full_name":"Avram::NeedyInitializer","name":"NeedyInitializer"},{"html_id":"avram/Avram/OperationErrors","kind":"module","full_name":"Avram::OperationErrors","name":"OperationErrors"},{"html_id":"avram/Avram/ParamKeyOverride","kind":"module","full_name":"Avram::ParamKeyOverride","name":"ParamKeyOverride"},{"html_id":"avram/Avram/Validations","kind":"module","full_name":"Avram::Validations","name":"Validations"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":null,"summary":null,"class_methods":[{"id":"param_key-class-method","html_id":"param_key-class-method","name":"param_key","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/operation.cr","line_number":101,"url":null},"def":{"name":"param_key","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"name.underscore"}},{"id":"run(params:Avram::Paramable,*args,**named_args,&)-class-method","html_id":"run(params:Avram::Paramable,*args,**named_args,&)-class-method","name":"run","doc":"Yields the instance of the operation, and the return value from\nthe `run` instance method.\n\n```\nMyOperation.run(params) do |operation, value|\n  # operation is complete\nend\n```","summary":"<p>Yields the instance of the operation, and the return value from the <code><a href=\"../Avram/Operation.html#run-instance-method\">#run</a></code> instance method.</p>","abstract":false,"args":[{"name":"params","doc":null,"default_value":"","external_name":"params","restriction":"Avram::Paramable"},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(params : Avram::Paramable, *args, **named_args, &)","args_html":"(params : <a href=\"../Avram/Paramable.html\">Avram::Paramable</a>, *args, **named_args, &)","location":{"filename":"src/avram/operation.cr","line_number":53,"url":null},"def":{"name":"run","args":[{"name":"params","doc":null,"default_value":"","external_name":"params","restriction":"Avram::Paramable"},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"named_args","doc":null,"default_value":"","external_name":"named_args","restriction":""},"splat_index":1,"yields":2,"block_arg":null,"return_type":"","visibility":"Public","body":"operation = self.new(params, *args, **named_args)\nvalue = nil\noperation.before_run\nif operation.valid?\n  value = operation.run\n  operation.after_run(value)\nend\nyield operation, value\n"}},{"id":"run(*args,**named_args,&)-class-method","html_id":"run(*args,**named_args,&)-class-method","name":"run","doc":"Yields the instance of the operation, and the return value from\nthe `run` instance method.\n\n```\nMyOperation.run do |operation, value|\n  # operation is complete\nend\n```","summary":"<p>Yields the instance of the operation, and the return value from the <code><a href=\"../Avram/Operation.html#run-instance-method\">#run</a></code> instance method.</p>","abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **named_args, &)","args_html":"(*args, **named_args, &)","location":{"filename":"src/avram/operation.cr","line_number":27,"url":null},"def":{"name":"run","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"named_args","doc":null,"default_value":"","external_name":"named_args","restriction":""},"splat_index":0,"yields":2,"block_arg":null,"return_type":"","visibility":"Public","body":"params = Avram::Params.new\nrun(params, *args, **named_args) do |operation, value|\n  yield operation, value\nend\n"}},{"id":"run!(params:Avram::Paramable,*args,**named_args)-class-method","html_id":"run!(params:Avram::Paramable,*args,**named_args)-class-method","name":"run!","doc":"Returns the value from the `run` instance method.\nor raise `Avram::FailedOperation` if the operation fails.\n\n```\nvalue = MyOperation.run!(params)\n```","summary":"<p>Returns the value from the <code><a href=\"../Avram/Operation.html#run-instance-method\">#run</a></code> instance method.</p>","abstract":false,"args":[{"name":"params","doc":null,"default_value":"","external_name":"params","restriction":"Avram::Paramable"},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(params : Avram::Paramable, *args, **named_args)","args_html":"(params : <a href=\"../Avram/Paramable.html\">Avram::Paramable</a>, *args, **named_args)","location":{"filename":"src/avram/operation.cr","line_number":73,"url":null},"def":{"name":"run!","args":[{"name":"params","doc":null,"default_value":"","external_name":"params","restriction":"Avram::Paramable"},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"named_args","doc":null,"default_value":"","external_name":"named_args","restriction":""},"splat_index":1,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"run(params, *args, **named_args) do |_operation, value|\n  if value\n  else\n    raise(Avram::FailedOperation.new(\"The operation failed to return a value\"))\n  end\n  value\nend"}},{"id":"run!(*args,**named_args)-class-method","html_id":"run!(*args,**named_args)-class-method","name":"run!","doc":"Returns the value from the `run` instance method.\nor raise `Avram::FailedOperation` if the operation fails.\n\n```\nvalue = MyOperation.run!\n```","summary":"<p>Returns the value from the <code><a href=\"../Avram/Operation.html#run-instance-method\">#run</a></code> instance method.</p>","abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **named_args)","args_html":"(*args, **named_args)","location":{"filename":"src/avram/operation.cr","line_number":40,"url":null},"def":{"name":"run!","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"named_args","doc":null,"default_value":"","external_name":"named_args","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"params = Avram::Params.new\nrun!(params, *args, **named_args)\n"}}],"constructors":[{"id":"new(params)-class-method","html_id":"new(params)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"params","doc":null,"default_value":"","external_name":"params","restriction":""}],"args_string":"(params)","args_html":"(params)","location":{"filename":"src/avram/operation.cr","line_number":88,"url":null},"def":{"name":"new","args":[{"name":"params","doc":null,"default_value":"","external_name":"params","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(params)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/operation.cr","line_number":91,"url":null},"def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"after_run(_value)-instance-method","html_id":"after_run(_value)-instance-method","name":"after_run","doc":null,"summary":null,"abstract":false,"args":[{"name":"_value","doc":null,"default_value":"","external_name":"_value","restriction":""}],"args_string":"(_value)","args_html":"(_value)","location":{"filename":"src/avram/operation.cr","line_number":85,"url":null},"def":{"name":"after_run","args":[{"name":"_value","doc":null,"default_value":"","external_name":"_value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"before_run-instance-method","html_id":"before_run-instance-method","name":"before_run","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/operation.cr","line_number":80,"url":null},"def":{"name":"before_run","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"custom_errors:Hash(Symbol,Array(String))-instance-method","html_id":"custom_errors:Hash(Symbol,Array(String))-instance-method","name":"custom_errors","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Hash(Symbol, Array(String))","args_html":" : Hash(Symbol, <a href=\"../Array.html\">Array</a>(<a href=\"../String.html\">String</a>))","location":null,"def":{"name":"custom_errors","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@custom_errors"}},{"id":"params:Avram::Paramable-instance-method","html_id":"params:Avram::Paramable-instance-method","name":"params","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Avram::Paramable","args_html":" : <a href=\"../Avram/Paramable.html\">Avram::Paramable</a>","location":{"filename":"src/avram/operation.cr","line_number":17,"url":null},"def":{"name":"params","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@params"}},{"id":"run-instance-method","html_id":"run-instance-method","name":"run","doc":null,"summary":null,"abstract":true,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/operation.cr","line_number":83,"url":null},"def":{"name":"run","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"valid?-instance-method","html_id":"valid?-instance-method","name":"valid?","doc":"Returns `true` if all attributes are valid,\nand there's no custom errors","summary":"<p>Returns <code>true</code> if all attributes are valid, and there's no custom errors</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/operation.cr","line_number":97,"url":null},"def":{"name":"valid?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"custom_errors.empty? && attributes.all?(&.valid?)"}}],"macros":[{"id":"param_key(key)-macro","html_id":"param_key(key)-macro","name":"param_key","doc":null,"summary":null,"abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":""}],"args_string":"(key)","location":null,"def":{"name":"param_key","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"      def self.param_key\n        \n{{ key.id.stringify }}\n\n      \nend\n    \n"}}],"types":[]},{"html_id":"avram/Avram/OperationErrors","path":"Avram/OperationErrors.html","kind":"module","full_name":"Avram::OperationErrors","name":"OperationErrors","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"avram/Avram/DeleteOperation","kind":"class","full_name":"Avram::DeleteOperation(T)","name":"DeleteOperation"},{"html_id":"avram/Avram/Operation","kind":"class","full_name":"Avram::Operation","name":"Operation"},{"html_id":"avram/Avram/SaveOperation","kind":"class","full_name":"Avram::SaveOperation(T)","name":"SaveOperation"}],"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"add_error(key:Symbol,message:String):Nil-instance-method","html_id":"add_error(key:Symbol,message:String):Nil-instance-method","name":"add_error","doc":null,"summary":null,"abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"Symbol"},{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"}],"args_string":"(key : Symbol, message : String) : Nil","args_html":"(key : Symbol, message : <a href=\"../String.html\">String</a>) : <a href=\"../Nil.html\">Nil</a>","location":{"filename":"src/avram/operation_errors.cr","line_number":20,"url":null},"def":{"name":"add_error","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"Symbol"},{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"__temp_54 = key\n@custom_errors[__temp_54]? || (@custom_errors[__temp_54] = [] of String)\n@custom_errors[key].push(message)\n"}},{"id":"errors:Hash(Symbol,Array(String))-instance-method","html_id":"errors:Hash(Symbol,Array(String))-instance-method","name":"errors","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Hash(Symbol, Array(String))","args_html":" : Hash(Symbol, <a href=\"../Array.html\">Array</a>(<a href=\"../String.html\">String</a>))","location":{"filename":"src/avram/operation_errors.cr","line_number":7,"url":null},"def":{"name":"errors","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Hash(Symbol, Array(String))","visibility":"Public","body":"attr_errors = attributes.reduce({} of Symbol => Array(String)) do |errors_hash, attribute|\n  if attribute.errors.empty?\n    errors_hash\n  else\n    errors_hash[attribute.name] = attribute.errors\n    errors_hash\n  end\nend\nattr_errors.merge(@custom_errors)\n"}}],"macros":[],"types":[]},{"html_id":"avram/Avram/OrderBy","path":"Avram/OrderBy.html","kind":"class","full_name":"Avram::OrderBy","name":"OrderBy","abstract":false,"superclass":{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(column:String|Symbol,direction:Direction,nulls:NullSorting=:default)-class-method","html_id":"new(column:String|Symbol,direction:Direction,nulls:NullSorting=:default)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":"String | Symbol"},{"name":"direction","doc":null,"default_value":"","external_name":"direction","restriction":"Direction"},{"name":"nulls","doc":null,"default_value":":default","external_name":"nulls","restriction":"NullSorting"}],"args_string":"(column : String | Symbol, direction : Direction, nulls : NullSorting = <span class=\"n\">:default</span>)","args_html":"(column : <a href=\"../String.html\">String</a> | Symbol, direction : <a href=\"../Avram/OrderBy/Direction.html\">Direction</a>, nulls : <a href=\"../Avram/OrderBy/NullSorting.html\">NullSorting</a> = <span class=\"n\">:default</span>)","location":{"filename":"src/avram/order_by.cr","line_number":24,"url":null},"def":{"name":"new","args":[{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":"String | Symbol"},{"name":"direction","doc":null,"default_value":"","external_name":"direction","restriction":"Direction"},{"name":"nulls","doc":null,"default_value":":default","external_name":"nulls","restriction":"NullSorting"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(column, direction, nulls)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"clone-instance-method","html_id":"clone-instance-method","name":"clone","doc":"Returns a copy of `self` with all instance variables cloned.","summary":"<p>Returns a copy of <code>self</code> with all instance variables cloned.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/order_by.cr","line_number":18,"url":null},"def":{"name":"clone","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"{% if @type < Reference && (!@type.instance_vars.map(&.type).all? do |t|\n  ((((t == ::Bool) || (t == ::Char)) || (t == ::Symbol)) || (t == ::String)) || t < ::Number::Primitive\nend) %}\n        exec_recursive_clone do |hash|\n          clone = {{ @type }}.allocate\n          hash[object_id] = clone.object_id\n          clone.initialize_copy(self)\n          GC.add_finalizer(clone) if clone.responds_to?(:finalize)\n          clone\n        end\n      {% else %}\n        clone = {{ @type }}.allocate\n        clone.initialize_copy(self)\n        GC.add_finalizer(clone) if clone.responds_to?(:finalize)\n        clone\n      {% end %}"}},{"id":"column:String|Symbol-instance-method","html_id":"column:String|Symbol-instance-method","name":"column","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String | Symbol","args_html":" : <a href=\"../String.html\">String</a> | Symbol","location":{"filename":"src/avram/order_by.cr","line_number":20,"url":null},"def":{"name":"column","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@column"}},{"id":"direction:Avram::OrderBy::Direction-instance-method","html_id":"direction:Avram::OrderBy::Direction-instance-method","name":"direction","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Avram::OrderBy::Direction","args_html":" : <a href=\"../Avram/OrderBy/Direction.html\">Avram::OrderBy::Direction</a>","location":{"filename":"src/avram/order_by.cr","line_number":21,"url":null},"def":{"name":"direction","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@direction"}},{"id":"nulls:Avram::OrderBy::NullSorting-instance-method","html_id":"nulls:Avram::OrderBy::NullSorting-instance-method","name":"nulls","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Avram::OrderBy::NullSorting","args_html":" : <a href=\"../Avram/OrderBy/NullSorting.html\">Avram::OrderBy::NullSorting</a>","location":{"filename":"src/avram/order_by.cr","line_number":22,"url":null},"def":{"name":"nulls","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@nulls"}},{"id":"prepare-instance-method","html_id":"prepare-instance-method","name":"prepare","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/order_by.cr","line_number":32,"url":null},"def":{"name":"prepare","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"String.build do |str|\n  str << \"#{column} #{direction}\"\n  if nulls.default?\n  else\n    str << \" #{nulls}\"\n  end\nend"}},{"id":"reversed-instance-method","html_id":"reversed-instance-method","name":"reversed","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/order_by.cr","line_number":27,"url":null},"def":{"name":"reversed","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@direction = @direction.asc? ? Direction::DESC : Direction::ASC\nself\n"}}],"macros":[],"types":[{"html_id":"avram/Avram/OrderBy/Direction","path":"Avram/OrderBy/Direction.html","kind":"enum","full_name":"Avram::OrderBy::Direction","name":"Direction","abstract":false,"superclass":null,"ancestors":[{"html_id":"avram/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"avram/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"avram/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":true,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[{"id":"ASC","name":"ASC","value":"0","doc":null,"summary":null},{"id":"DESC","name":"DESC","value":"1","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Avram/OrderBy","kind":"class","full_name":"Avram::OrderBy","name":"OrderBy"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"asc?-instance-method","html_id":"asc?-instance-method","name":"asc?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/order_by.cr","line_number":14,"url":null},"def":{"name":"asc?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == ASC"}},{"id":"desc?-instance-method","html_id":"desc?-instance-method","name":"desc?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/order_by.cr","line_number":15,"url":null},"def":{"name":"desc?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == DESC"}}],"macros":[],"types":[]},{"html_id":"avram/Avram/OrderBy/NullSorting","path":"Avram/OrderBy/NullSorting.html","kind":"enum","full_name":"Avram::OrderBy::NullSorting","name":"NullSorting","abstract":false,"superclass":null,"ancestors":[{"html_id":"avram/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"avram/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"avram/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":true,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[{"id":"DEFAULT","name":"DEFAULT","value":"0","doc":null,"summary":null},{"id":"NULLS_FIRST","name":"NULLS_FIRST","value":"1","doc":null,"summary":null},{"id":"NULLS_LAST","name":"NULLS_LAST","value":"2","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Avram/OrderBy","kind":"class","full_name":"Avram::OrderBy","name":"OrderBy"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"default?-instance-method","html_id":"default?-instance-method","name":"default?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/order_by.cr","line_number":4,"url":null},"def":{"name":"default?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == DEFAULT"}},{"id":"nulls_first?-instance-method","html_id":"nulls_first?-instance-method","name":"nulls_first?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/order_by.cr","line_number":5,"url":null},"def":{"name":"nulls_first?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == NULLS_FIRST"}},{"id":"nulls_last?-instance-method","html_id":"nulls_last?-instance-method","name":"nulls_last?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/order_by.cr","line_number":6,"url":null},"def":{"name":"nulls_last?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == NULLS_LAST"}},{"id":"to_s-instance-method","html_id":"to_s-instance-method","name":"to_s","doc":"Returns a `String` representation of this enum member.\nIn the case of regular enums, this is just the name of the member.\nIn the case of flag enums, it's the names joined by vertical bars, or \"None\",\nif the value is zero.\n\nIf an enum's value doesn't match a member's value, the raw value\nis returned as a string.\n\n```\nColor::Red.to_s                     # => \"Red\"\nIOMode::None.to_s                   # => \"None\"\n(IOMode::Read | IOMode::Write).to_s # => \"Read | Write\"\n\nColor.new(10).to_s # => \"10\"\n```","summary":"<p>Returns a <code><a href=\"../../String.html\">String</a></code> representation of this enum member.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/order_by.cr","line_number":8,"url":null},"def":{"name":"to_s","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"super().gsub(\"_\", \" \")"}}],"macros":[],"types":[]}]},{"html_id":"avram/Avram/Paramable","path":"Avram/Paramable.html","kind":"module","full_name":"Avram::Paramable","name":"Paramable","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"avram/Avram/Params","kind":"class","full_name":"Avram::Params","name":"Params"}],"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"get(key:String)-instance-method","html_id":"get(key:String)-instance-method","name":"get","doc":null,"summary":null,"abstract":true,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"}],"args_string":"(key : String)","args_html":"(key : <a href=\"../String.html\">String</a>)","location":{"filename":"src/avram/paramable.cr","line_number":7,"url":null},"def":{"name":"get","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"get?(key:String)-instance-method","html_id":"get?(key:String)-instance-method","name":"get?","doc":null,"summary":null,"abstract":true,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"}],"args_string":"(key : String)","args_html":"(key : <a href=\"../String.html\">String</a>)","location":{"filename":"src/avram/paramable.cr","line_number":6,"url":null},"def":{"name":"get?","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"has_key_for?(operation:Avram::Operation.class|Avram::SaveOperation.class):Bool-instance-method","html_id":"has_key_for?(operation:Avram::Operation.class|Avram::SaveOperation.class):Bool-instance-method","name":"has_key_for?","doc":null,"summary":null,"abstract":false,"args":[{"name":"operation","doc":null,"default_value":"","external_name":"operation","restriction":"Avram::Operation.class | Avram::SaveOperation.class"}],"args_string":"(operation : <span class=\"t\">Avram</span><span class=\"t\">::</span><span class=\"t\">Operation</span>.<span class=\"k\">class</span> | <span class=\"t\">Avram</span><span class=\"t\">::</span><span class=\"t\">SaveOperation</span>.<span class=\"k\">class</span>) : Bool","args_html":"(operation : <span class=\"t\">Avram</span><span class=\"t\">::</span><span class=\"t\">Operation</span>.<span class=\"k\">class</span> | <span class=\"t\">Avram</span><span class=\"t\">::</span><span class=\"t\">SaveOperation</span>.<span class=\"k\">class</span>) : <a href=\"../Bool.html\">Bool</a>","location":{"filename":"src/avram/paramable.cr","line_number":9,"url":null},"def":{"name":"has_key_for?","args":[{"name":"operation","doc":null,"default_value":"","external_name":"operation","restriction":"Avram::Operation.class | Avram::SaveOperation.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"(nested?(operation.param_key)).any?"}},{"id":"many_nested(key:String):Array(Hash(String,String))-instance-method","html_id":"many_nested(key:String):Array(Hash(String,String))-instance-method","name":"many_nested","doc":null,"summary":null,"abstract":true,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"}],"args_string":"(key : String) : Array(Hash(String, String))","args_html":"(key : <a href=\"../String.html\">String</a>) : <a href=\"../Array.html\">Array</a>(Hash(<a href=\"../String.html\">String</a>, <a href=\"../String.html\">String</a>))","location":{"filename":"src/avram/paramable.cr","line_number":5,"url":null},"def":{"name":"many_nested","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Hash(String, String))","visibility":"Public","body":""}},{"id":"many_nested?(key:String):Array(Hash(String,String))-instance-method","html_id":"many_nested?(key:String):Array(Hash(String,String))-instance-method","name":"many_nested?","doc":null,"summary":null,"abstract":true,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"}],"args_string":"(key : String) : Array(Hash(String, String))","args_html":"(key : <a href=\"../String.html\">String</a>) : <a href=\"../Array.html\">Array</a>(Hash(<a href=\"../String.html\">String</a>, <a href=\"../String.html\">String</a>))","location":{"filename":"src/avram/paramable.cr","line_number":4,"url":null},"def":{"name":"many_nested?","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Hash(String, String))","visibility":"Public","body":""}},{"id":"nested(key:String):Hash(String,String)-instance-method","html_id":"nested(key:String):Hash(String,String)-instance-method","name":"nested","doc":null,"summary":null,"abstract":true,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"}],"args_string":"(key : String) : Hash(String, String)","args_html":"(key : <a href=\"../String.html\">String</a>) : Hash(<a href=\"../String.html\">String</a>, <a href=\"../String.html\">String</a>)","location":{"filename":"src/avram/paramable.cr","line_number":3,"url":null},"def":{"name":"nested","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Hash(String, String)","visibility":"Public","body":""}},{"id":"nested?(key:String):Hash(String,String)-instance-method","html_id":"nested?(key:String):Hash(String,String)-instance-method","name":"nested?","doc":null,"summary":null,"abstract":true,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"}],"args_string":"(key : String) : Hash(String, String)","args_html":"(key : <a href=\"../String.html\">String</a>) : Hash(<a href=\"../String.html\">String</a>, <a href=\"../String.html\">String</a>)","location":{"filename":"src/avram/paramable.cr","line_number":2,"url":null},"def":{"name":"nested?","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Hash(String, String)","visibility":"Public","body":""}}],"macros":[],"types":[]},{"html_id":"avram/Avram/ParamKeyOverride","path":"Avram/ParamKeyOverride.html","kind":"module","full_name":"Avram::ParamKeyOverride","name":"ParamKeyOverride","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"avram/Avram/DeleteOperation","kind":"class","full_name":"Avram::DeleteOperation(T)","name":"DeleteOperation"},{"html_id":"avram/Avram/Operation","kind":"class","full_name":"Avram::Operation","name":"Operation"},{"html_id":"avram/Avram/SaveOperation","kind":"class","full_name":"Avram::SaveOperation(T)","name":"SaveOperation"}],"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[{"id":"define_param_key_override-macro","html_id":"define_param_key_override-macro","name":"define_param_key_override","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","location":{"filename":"src/avram/param_key_override.cr","line_number":10,"url":null},"def":{"name":"define_param_key_override","args":[],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    macro param_key(key)\n      def self.param_key\n        \n\\{\n{ key.id.stringify }}\n      \nend\n    \nend\n  \n"}}],"types":[]},{"html_id":"avram/Avram/Params","path":"Avram/Params.html","kind":"class","full_name":"Avram::Params","name":"Params","abstract":false,"superclass":{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"avram/Avram/Paramable","kind":"module","full_name":"Avram::Paramable","name":"Paramable"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[{"html_id":"avram/Avram/Paramable","kind":"module","full_name":"Avram::Paramable","name":"Paramable"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(hash)-class-method","html_id":"new(hash)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"hash","doc":null,"default_value":"","external_name":"hash","restriction":""}],"args_string":"(hash)","args_html":"(hash)","location":{"filename":"src/avram/params.cr","line_number":9,"url":null},"def":{"name":"new","args":[{"name":"hash","doc":null,"default_value":"","external_name":"hash","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(hash)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/params.cr","line_number":6,"url":null},"def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(**args)-class-method","html_id":"new(**args)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"(**args)","args_html":"(**args)","location":{"filename":"src/avram/params.cr","line_number":12,"url":null},"def":{"name":"new","args":[],"double_splat":{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(**args)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"get(key)-instance-method","html_id":"get(key)-instance-method","name":"get","doc":null,"summary":null,"abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":""}],"args_string":"(key)","args_html":"(key)","location":{"filename":"src/avram/params.cr","line_number":38,"url":null},"def":{"name":"get","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@hash[key]"}},{"id":"get?(key)-instance-method","html_id":"get?(key)-instance-method","name":"get?","doc":null,"summary":null,"abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":""}],"args_string":"(key)","args_html":"(key)","location":{"filename":"src/avram/params.cr","line_number":34,"url":null},"def":{"name":"get?","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@hash[key]?"}},{"id":"many_nested(key):Array(Hash(String,String))-instance-method","html_id":"many_nested(key):Array(Hash(String,String))-instance-method","name":"many_nested","doc":null,"summary":null,"abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":""}],"args_string":"(key) : Array(Hash(String, String))","args_html":"(key) : <a href=\"../Array.html\">Array</a>(Hash(<a href=\"../String.html\">String</a>, <a href=\"../String.html\">String</a>))","location":{"filename":"src/avram/params.cr","line_number":30,"url":null},"def":{"name":"many_nested","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Hash(String, String))","visibility":"Public","body":"[nested(key)]"}},{"id":"many_nested?(key):Array(Hash(String,String))-instance-method","html_id":"many_nested?(key):Array(Hash(String,String))-instance-method","name":"many_nested?","doc":null,"summary":null,"abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":""}],"args_string":"(key) : Array(Hash(String, String))","args_html":"(key) : <a href=\"../Array.html\">Array</a>(Hash(<a href=\"../String.html\">String</a>, <a href=\"../String.html\">String</a>))","location":{"filename":"src/avram/params.cr","line_number":26,"url":null},"def":{"name":"many_nested?","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Hash(String, String))","visibility":"Public","body":"[nested?(key)]"}},{"id":"nested(key):Hash(String,String)-instance-method","html_id":"nested(key):Hash(String,String)-instance-method","name":"nested","doc":null,"summary":null,"abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":""}],"args_string":"(key) : Hash(String, String)","args_html":"(key) : Hash(<a href=\"../String.html\">String</a>, <a href=\"../String.html\">String</a>)","location":{"filename":"src/avram/params.cr","line_number":22,"url":null},"def":{"name":"nested","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Hash(String, String)","visibility":"Public","body":"@hash"}},{"id":"nested?(key):Hash(String,String)-instance-method","html_id":"nested?(key):Hash(String,String)-instance-method","name":"nested?","doc":null,"summary":null,"abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":""}],"args_string":"(key) : Hash(String, String)","args_html":"(key) : Hash(<a href=\"../String.html\">String</a>, <a href=\"../String.html\">String</a>)","location":{"filename":"src/avram/params.cr","line_number":18,"url":null},"def":{"name":"nested?","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Hash(String, String)","visibility":"Public","body":"@hash"}},{"id":"nested_file(key):Hash(String,String)-instance-method","html_id":"nested_file(key):Hash(String,String)-instance-method","name":"nested_file","doc":null,"summary":null,"abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":""}],"args_string":"(key) : Hash(String, String)","args_html":"(key) : Hash(<a href=\"../String.html\">String</a>, <a href=\"../String.html\">String</a>)","location":{"filename":"src/avram/params.cr","line_number":46,"url":null},"def":{"name":"nested_file","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Hash(String, String)","visibility":"Public","body":"@hash"}},{"id":"nested_file?(key):Hash(String,String)-instance-method","html_id":"nested_file?(key):Hash(String,String)-instance-method","name":"nested_file?","doc":null,"summary":null,"abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":""}],"args_string":"(key) : Hash(String, String)","args_html":"(key) : Hash(<a href=\"../String.html\">String</a>, <a href=\"../String.html\">String</a>)","location":{"filename":"src/avram/params.cr","line_number":42,"url":null},"def":{"name":"nested_file?","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Hash(String, String)","visibility":"Public","body":"@hash"}}],"macros":[],"types":[]},{"html_id":"avram/Avram/PermittedAttribute","path":"Avram/PermittedAttribute.html","kind":"class","full_name":"Avram::PermittedAttribute(T)","name":"PermittedAttribute","abstract":false,"superclass":{"html_id":"avram/Avram/Attribute","kind":"class","full_name":"Avram::Attribute","name":"Attribute"},"ancestors":[{"html_id":"avram/Avram/Attribute","kind":"class","full_name":"Avram::Attribute","name":"Attribute"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(name,value:T?,param_key,param=nil)-class-method","html_id":"new(name,value:T?,param_key,param=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"T | ::Nil"},{"name":"param_key","doc":null,"default_value":"","external_name":"param_key","restriction":""},{"name":"param","doc":null,"default_value":"nil","external_name":"param","restriction":""}],"args_string":"(name, value : T?, param_key, param = <span class=\"n\">nil</span>)","args_html":"(name, value : T?, param_key, param = <span class=\"n\">nil</span>)","location":{"filename":"src/avram/attribute.cr","line_number":9,"url":null},"def":{"name":"new","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"T | ::Nil"},{"name":"param_key","doc":null,"default_value":"","external_name":"param_key","restriction":""},{"name":"param","doc":null,"default_value":"nil","external_name":"param","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = PermittedAttribute(T).allocate\n_.initialize(name, value, param_key, param)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[],"macros":[],"types":[]},{"html_id":"avram/Avram/PGClientNotInstalledError","path":"Avram/PGClientNotInstalledError.html","kind":"class","full_name":"Avram::PGClientNotInstalledError","name":"PGClientNotInstalledError","abstract":false,"superclass":{"html_id":"avram/Avram/AvramError","kind":"class","full_name":"Avram::AvramError","name":"AvramError"},"ancestors":[{"html_id":"avram/Avram/AvramError","kind":"class","full_name":"Avram::AvramError","name":"AvramError"},{"html_id":"avram/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(original_message:String)-class-method","html_id":"new(original_message:String)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"original_message","doc":null,"default_value":"","external_name":"original_message","restriction":"String"}],"args_string":"(original_message : String)","args_html":"(original_message : <a href=\"../String.html\">String</a>)","location":{"filename":"src/avram/errors.cr","line_number":96,"url":null},"def":{"name":"new","args":[{"name":"original_message","doc":null,"default_value":"","external_name":"original_message","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(original_message)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[],"macros":[],"types":[]},{"html_id":"avram/Avram/PGNotRunningError","path":"Avram/PGNotRunningError.html","kind":"class","full_name":"Avram::PGNotRunningError","name":"PGNotRunningError","abstract":false,"superclass":{"html_id":"avram/Avram/AvramError","kind":"class","full_name":"Avram::AvramError","name":"AvramError"},"ancestors":[{"html_id":"avram/Avram/AvramError","kind":"class","full_name":"Avram::AvramError","name":"AvramError"},{"html_id":"avram/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(original_message:String)-class-method","html_id":"new(original_message:String)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"original_message","doc":null,"default_value":"","external_name":"original_message","restriction":"String"}],"args_string":"(original_message : String)","args_html":"(original_message : <a href=\"../String.html\">String</a>)","location":{"filename":"src/avram/errors.cr","line_number":122,"url":null},"def":{"name":"new","args":[{"name":"original_message","doc":null,"default_value":"","external_name":"original_message","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(original_message)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[],"macros":[],"types":[]},{"html_id":"avram/Avram/Polymorphic","path":"Avram/Polymorphic.html","kind":"module","full_name":"Avram::Polymorphic","name":"Polymorphic","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"avram/Avram/Model","kind":"class","full_name":"Avram::Model","name":"Model"}],"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":"Helpers for defining polymorphic associations","summary":"<p>Helpers for defining polymorphic associations</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[{"id":"polymorphic(polymorphic_name,associations,optional=false)-macro","html_id":"polymorphic(polymorphic_name,associations,optional=false)-macro","name":"polymorphic","doc":"# Save a comment for this video\nvideo = VideoQuery.first\nComment::SaveOperation.create!(video_id: video.id)\n```","summary":"<h1><a id=\"save-a-comment-for-this-video-video-video-query.first-commentsave-operation.createvideo-id-video.id\" class=\"anchor\" href=\"#save-a-comment-for-this-video-video-video-query.first-commentsave-operation.createvideo-id-video.id\">\n  <svg class=\"octicon-link\" aria-hidden=\"true\">\n    <use href=\"#octicon-link\"/>\n  </svg>\n</a>Save a comment for this video video = VideoQuery.first Comment::SaveOperation.create!(video_id: video.id) <code></code>`</h1>","abstract":false,"args":[{"name":"polymorphic_name","doc":null,"default_value":"","external_name":"polymorphic_name","restriction":""},{"name":"associations","doc":null,"default_value":"","external_name":"associations","restriction":""},{"name":"optional","doc":null,"default_value":"false","external_name":"optional","restriction":""}],"args_string":"(polymorphic_name, associations, optional = <span class=\"n\">false</span>)","location":{"filename":"src/avram/polymorphic.cr","line_number":104,"url":null},"def":{"name":"polymorphic","args":[{"name":"polymorphic_name","doc":null,"default_value":"","external_name":"polymorphic_name","restriction":""},{"name":"associations","doc":null,"default_value":"","external_name":"associations","restriction":""},{"name":"optional","doc":null,"default_value":"false","external_name":"optional","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    \n{% polymorphic_name = polymorphic_name.id %}\n\n    def \n{{ polymorphic_name }}\n\n      \nensure_\n{{ polymorphic_name }}\n_belongs_to_are_nilable!\n\n      \n# Generates something like: post || video\n\n      \n{{ (associations.map(&.id).join(\" || \")).id }}\n{% if !optional %} || Avram::Polymorphic.raise_missing_polymorphic(:{{ polymorphic_name }}, self){% end %}\n\n    \nend\n\n    def \n{{ polymorphic_name }}\n!\n      \nensure_\n{{ polymorphic_name }}\n_belongs_to_are_nilable!\n\n      \n# Generates something like: post! || video!\n\n      \n{% associations_with_a_bang = associations.map(&.id).map do |assoc|\n  \"#{assoc}!\"\nend %}\n\n      \n{{ (associations_with_a_bang.join(\" || \")).id }}\n{% if !optional %} || Avram::Polymorphic.raise_missing_polymorphic(:{{ polymorphic_name }}, self){% end %}\n\n    \nend\n\n    private def \nensure_\n{{ polymorphic_name }}\n_belongs_to_are_nilable! : Nil\n      if should_check_polymorphism_at_runtime?\n        \n{% associations_to_check = associations.map(&.id).map do |assoc|\n  \"#{assoc}.as(Nil)\"\nend %}\n\n        \n{{ (associations_to_check.join(\" || \")).id }}\n \n# Ensure polymorphic associations are nilable\n\n      \nend\n    \nend\n\n    \n# This is a bit of a hack to get around Crystal's smart compiler :)\n\n    \n# In the ensure_\n{assoc}_belongs_to_are_nilable! we need to check that the\n\n    \n# compiler *can* cast to nil, but we don't want to *actually* check it at\n\n    \n# runtime. The problem is that we can't do `if false` because Crystal realizes\n\n    \n# That will never match and so doesn't even check the `as(Nil)`\n\n    \n# We have to trick it by extracting the false to a method. That way\n\n    \n# Crystal doesn't realize it is always 'false' and will still check\n\n    \n# That the types can be cast to Nil at compile, without actually casting it\n\n    \n# at runtime.\n\n    private def should_check_polymorphism_at_runtime? : Bool\n      false\n    \nend\n\n    macro finished\n      class SaveOperation\n        before_save do\n          \n{% list_of_foreign_keys = associations.map(&.id).map do |assoc|\n  \"#{assoc.id}_id\".id\nend %}\n\n\n          \n# TODO: Needs to actually get the foreign key from the ASSOCIATIONS constant\n\n          \n{% if optional %}\n            validate_at_most_one_filled {{ (list_of_foreign_keys.map(&.id).join(\", \")).id }}\n          {% else %}\n            validate_exactly_one_filled {{ (list_of_foreign_keys.map(&.id).join(\", \")).id }},\n              message: \"at least one '{{ polymorphic_name.id }}' must be filled\"\n          {% end %}\n\n        \nend\n      \nend\n\n      class BaseQuery\n        def preload_\n{{ polymorphic_name.id }}\n\n          \n{% for association in associations %}\n             preload_{{ association.id }}\n          {% end %}\n\n        \nend\n      \nend\n    \nend\n  \n"}}],"types":[]},{"html_id":"avram/Avram/PrimaryKeyMethods","path":"Avram/PrimaryKeyMethods.html","kind":"module","full_name":"Avram::PrimaryKeyMethods","name":"PrimaryKeyMethods","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"==(other:self)-instance-method","html_id":"==(other:self)-instance-method","name":"==","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"self"}],"args_string":"(other : <span class=\"k\">self</span>)","args_html":"(other : <span class=\"k\">self</span>)","location":{"filename":"src/avram/primary_key_methods.cr","line_number":2,"url":null},"def":{"name":"==","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"self"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if id == other.id\nelse\n  return false\nend\nif model_name == other.model_name\nelse\n  return false\nend\ntrue\n"}},{"id":"delete-instance-method","html_id":"delete-instance-method","name":"delete","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/primary_key_methods.cr","line_number":75,"url":null},"def":{"name":"delete","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.class.database.exec(\"DELETE FROM #{@@table_name} WHERE #{primary_key_name} = #{escape_primary_key(id)}\")"}},{"id":"primary_key_name:Symbol?-instance-method","html_id":"primary_key_name:Symbol?-instance-method","name":"primary_key_name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Symbol?","args_html":" : Symbol?","location":{"filename":"src/avram/primary_key_methods.cr","line_number":4,"url":null},"def":{"name":"primary_key_name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Symbol | ::Nil","visibility":"Public","body":"self.class.primary_key_name"}},{"id":"reload:self-instance-method","html_id":"reload:self-instance-method","name":"reload","doc":"Reload the model with the latest information from the database\n\nThis method will return a new model instance with the\nlatest data from the database. Note that this does\n**not** change the original instance, so you may need to\nassign the result to a variable or work directly with the return value.\n\nExample:\n\n```\nuser = SaveUser.create!(name: \"Original\")\nSaveUser.update!(user, name: \"Updated\")\n\n# Will be \"Original\"\nuser.name\n# Will return \"Updated\"\nuser.reload.name # Will be \"Updated\"\n# Will still be \"Original\" since the 'user' is the same model instance.\nuser.name\n\nInstead re-assign the variable. Now 'name' will return \"Updated\" since\n'user' references the reloaded model.\nuser = user.reload\nuser.name\n```","summary":"<p>Reload the model with the latest information from the database</p>","abstract":false,"args":[],"args_string":" : <span class=\"k\">self</span>","args_html":" : <span class=\"k\">self</span>","location":{"filename":"src/avram/primary_key_methods.cr","line_number":33,"url":null},"def":{"name":"reload","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"base_query_class.find(id)"}},{"id":"reload(&):self-instance-method","html_id":"reload(&):self-instance-method","name":"reload","doc":"Same as `reload` but allows passing a block to customize the query.\n\nThis is almost always used to preload additional relationships.\n\nExample:\n\n```\nuser = SaveUser.create(params)\n\n# We want to display the list of articles the user has commented on, so let's #\n# preload them to avoid N+1 performance issues\nuser = user.reload(&.preload_comments(CommentQuery.new.preload_article))\n\n# Now we can safely get all the comment authors\nuser.comments.map(&.article)\n```\n\nNote that the yielded query is the `BaseQuery` so it will not have any\nmethods defined on your customized query. This is usually fine since\ntypically reload only uses preloads.\n\nIf you do need to do something more custom you can manually reload:\n\n```\nuser = SaveUser.create!(name: \"Helen\")\nUserQuery.new.some_custom_preload_method.find(user.id)\n```","summary":"<p>Same as <code><a href=\"../Avram/PrimaryKeyMethods.html#reload:self-instance-method\">#reload</a></code> but allows passing a block to customize the query.</p>","abstract":false,"args":[],"args_string":"(&) : <span class=\"k\">self</span>","args_html":"(&) : <span class=\"k\">self</span>","location":{"filename":"src/avram/primary_key_methods.cr","line_number":64,"url":null},"def":{"name":"reload","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"self","visibility":"Public","body":"query = yield base_query_class.new\nquery.find(id)\n"}},{"id":"to_param:String-instance-method","html_id":"to_param:String-instance-method","name":"to_param","doc":"For integration with Lucky\nThis allows an `Avram::Model` to be passed into a Lucky::Action to create a url/path","summary":"<p>For integration with Lucky This allows an <code><a href=\"../Avram/Model.html\">Avram::Model</a></code> to be passed into a Lucky::Action to create a url/path</p>","abstract":false,"args":[],"args_string":" : String","args_html":" : <a href=\"../String.html\">String</a>","location":{"filename":"src/avram/primary_key_methods.cr","line_number":71,"url":null},"def":{"name":"to_param","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"id.to_s"}}],"macros":[],"types":[]},{"html_id":"avram/Avram/PrimaryKeyQueryable","path":"Avram/PrimaryKeyQueryable.html","kind":"module","full_name":"Avram::PrimaryKeyQueryable(T)","name":"PrimaryKeyQueryable","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"avram/Avram/PrimaryKeyType","path":"Avram/PrimaryKeyType.html","kind":"enum","full_name":"Avram::PrimaryKeyType","name":"PrimaryKeyType","abstract":false,"superclass":null,"ancestors":[{"html_id":"avram/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"avram/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"avram/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":true,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[{"id":"Serial","name":"Serial","value":"0","doc":null,"summary":null},{"id":"UUID","name":"UUID","value":"1","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"serial?-instance-method","html_id":"serial?-instance-method","name":"serial?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/primary_key_type.cr","line_number":2,"url":null},"def":{"name":"serial?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Serial"}},{"id":"uuid?-instance-method","html_id":"uuid?-instance-method","name":"uuid?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/primary_key_type.cr","line_number":3,"url":null},"def":{"name":"uuid?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == UUID"}}],"macros":[],"types":[]},{"html_id":"avram/Avram/Queryable","path":"Avram/Queryable.html","kind":"module","full_name":"Avram::Queryable(T)","name":"Queryable","abstract":false,"superclass":null,"ancestors":[{"html_id":"avram/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[{"html_id":"avram/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"add_preload(&block:Array(T)->Nil)-instance-method","html_id":"add_preload(&block:Array(T)->Nil)-instance-method","name":"add_preload","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"(&block : Array(T) -> Nil)","args_html":"(&block : <a href=\"../Array.html\">Array</a>(T) -> <a href=\"../Nil.html\">Nil</a>)","location":{"filename":"src/avram/queryable.cr","line_number":202,"url":null},"def":{"name":"add_preload","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(Array(T) -> Nil)"},"return_type":"","visibility":"Public","body":"@preloads << block"}},{"id":"database(*args,**options)-instance-method","html_id":"database(*args,**options)-instance-method","name":"database","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","location":{"filename":"src/avram/queryable.cr","line_number":7,"url":null},"def":{"name":"database","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"T.database(*args, **options)"}},{"id":"database(*args,**options,&)-instance-method","html_id":"database(*args,**options,&)-instance-method","name":"database","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","location":{"filename":"src/avram/queryable.cr","line_number":7,"url":null},"def":{"name":"database","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"T.database(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"id":"delete:Int64-instance-method","html_id":"delete:Int64-instance-method","name":"delete","doc":"Delete the records using the query's where clauses, or all records if no wheres are added.\n\nReturns the number of deleted records as `Int64`.\n\n```\n# DELETE FROM users WHERE age < 21\nUserQuery.new.age.lt(21).delete\n```","summary":"<p>Delete the records using the query's where clauses, or all records if no wheres are added.</p>","abstract":false,"args":[],"args_string":" : Int64","args_html":" : <a href=\"../Int64.html\">Int64</a>","location":{"filename":"src/avram/queryable.cr","line_number":86,"url":null},"def":{"name":"delete","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int64","visibility":"Public","body":"clone.delete!"}},{"id":"distinct:self-instance-method","html_id":"distinct:self-instance-method","name":"distinct","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : <span class=\"k\">self</span>","args_html":" : <span class=\"k\">self</span>","location":{"filename":"src/avram/queryable.cr","line_number":52,"url":null},"def":{"name":"distinct","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"clone.tap do |__arg0|\n  __arg0.query.distinct\nend"}},{"id":"distinct_on(&):self-instance-method","html_id":"distinct_on(&):self-instance-method","name":"distinct_on","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"(&) : <span class=\"k\">self</span>","args_html":"(&) : <span class=\"k\">self</span>","location":{"filename":"src/avram/queryable.cr","line_number":68,"url":null},"def":{"name":"distinct_on","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"self","visibility":"Public","body":"criteria = yield clone\ncriteria.private_distinct_on\n"}},{"id":"each(&)-instance-method","html_id":"each(&)-instance-method","name":"each","doc":"Must yield this collection's elements to the block.","summary":"<p>Must yield this collection's elements to the block.</p>","abstract":false,"args":[],"args_string":"(&)","args_html":"(&)","location":{"filename":"src/avram/queryable.cr","line_number":194,"url":null},"def":{"name":"each","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"results.each do |result|\n  yield result\nend"}},{"id":"exec_scalar(&)-instance-method","html_id":"exec_scalar(&)-instance-method","name":"exec_scalar","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"(&)","args_html":"(&)","location":{"filename":"src/avram/queryable.cr","line_number":218,"url":null},"def":{"name":"exec_scalar","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"new_query = yield query.clone\ndatabase.scalar(new_query.statement, args: new_query.args, queryable: schema_class.name)\n"}},{"id":"first-instance-method","html_id":"first-instance-method","name":"first","doc":"Returns the first element in the collection. Raises `Enumerable::EmptyError`\nif the collection is empty.\n\n```\n([1, 2, 3]).first   # => 1\n([] of Int32).first # raises Enumerable::EmptyError\n```","summary":"<p>Returns the first element in the collection.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/queryable.cr","line_number":171,"url":null},"def":{"name":"first","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"first? || (raise(RecordNotFoundError.new(model: table_name, query: :first)))"}},{"id":"first?-instance-method","html_id":"first?-instance-method","name":"first?","doc":"Returns the first element in the collection.\nWhen the collection is empty, returns `nil`.\n\n```\n([1, 2, 3]).first?   # => 1\n([] of Int32).first? # => nil\n```","summary":"<p>Returns the first element in the collection.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/queryable.cr","line_number":164,"url":null},"def":{"name":"first?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(with_ordered_query.limit(1)).results.first?"}},{"id":"group(&):self-instance-method","html_id":"group(&):self-instance-method","name":"group","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"(&) : <span class=\"k\">self</span>","args_html":"(&) : <span class=\"k\">self</span>","location":{"filename":"src/avram/queryable.cr","line_number":147,"url":null},"def":{"name":"group","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"self","visibility":"Public","body":"criteria = yield clone\ncriteria.private_group\n"}},{"id":"join(join_clause:Avram::Join::SqlClause):self-instance-method","html_id":"join(join_clause:Avram::Join::SqlClause):self-instance-method","name":"join","doc":null,"summary":null,"abstract":false,"args":[{"name":"join_clause","doc":null,"default_value":"","external_name":"join_clause","restriction":"Avram::Join::SqlClause"}],"args_string":"(join_clause : Avram::Join::SqlClause) : <span class=\"k\">self</span>","args_html":"(join_clause : <a href=\"../Avram/Join/SqlClause.html\">Avram::Join::SqlClause</a>) : <span class=\"k\">self</span>","location":{"filename":"src/avram/queryable.cr","line_number":105,"url":null},"def":{"name":"join","args":[{"name":"join_clause","doc":null,"default_value":"","external_name":"join_clause","restriction":"Avram::Join::SqlClause"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"clone.tap do |__arg4|\n  __arg4.query.join(join_clause)\nend"}},{"id":"last-instance-method","html_id":"last-instance-method","name":"last","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/queryable.cr","line_number":184,"url":null},"def":{"name":"last","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"last? || (raise(RecordNotFoundError.new(model: table_name, query: :last)))"}},{"id":"last?-instance-method","html_id":"last?-instance-method","name":"last?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/queryable.cr","line_number":175,"url":null},"def":{"name":"last?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(with_ordered_query.clone.tap do |__arg14|\n  __arg14.query.reverse_order\nend.limit(1)).results.first?"}},{"id":"limit(amount):self-instance-method","html_id":"limit(amount):self-instance-method","name":"limit","doc":null,"summary":null,"abstract":false,"args":[{"name":"amount","doc":null,"default_value":"","external_name":"amount","restriction":""}],"args_string":"(amount) : <span class=\"k\">self</span>","args_html":"(amount) : <span class=\"k\">self</span>","location":{"filename":"src/avram/queryable.cr","line_number":156,"url":null},"def":{"name":"limit","args":[{"name":"amount","doc":null,"default_value":"","external_name":"amount","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"clone.tap do |__arg12|\n  __arg12.query.limit(amount)\nend"}},{"id":"merge_query(query_to_merge:Avram::QueryBuilder):self-instance-method","html_id":"merge_query(query_to_merge:Avram::QueryBuilder):self-instance-method","name":"merge_query","doc":null,"summary":null,"abstract":false,"args":[{"name":"query_to_merge","doc":null,"default_value":"","external_name":"query_to_merge","restriction":"Avram::QueryBuilder"}],"args_string":"(query_to_merge : Avram::QueryBuilder) : <span class=\"k\">self</span>","args_html":"(query_to_merge : <a href=\"../Avram/QueryBuilder.html\">Avram::QueryBuilder</a>) : <span class=\"k\">self</span>","location":{"filename":"src/avram/queryable.cr","line_number":125,"url":null},"def":{"name":"merge_query","args":[{"name":"query_to_merge","doc":null,"default_value":"","external_name":"query_to_merge","restriction":"Avram::QueryBuilder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"clone.tap do |__arg8|\n  __arg8.query.merge(query_to_merge)\nend"}},{"id":"none:self-instance-method","html_id":"none:self-instance-method","name":"none","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : <span class=\"k\">self</span>","args_html":" : <span class=\"k\">self</span>","location":{"filename":"src/avram/queryable.cr","line_number":152,"url":null},"def":{"name":"none","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"clone.tap do |__arg11|\n  __arg11.query.where(Avram::Where::Equal.new(\"1\", \"0\"))\nend"}},{"id":"offset(amount):self-instance-method","html_id":"offset(amount):self-instance-method","name":"offset","doc":null,"summary":null,"abstract":false,"args":[{"name":"amount","doc":null,"default_value":"","external_name":"amount","restriction":""}],"args_string":"(amount) : <span class=\"k\">self</span>","args_html":"(amount) : <span class=\"k\">self</span>","location":{"filename":"src/avram/queryable.cr","line_number":160,"url":null},"def":{"name":"offset","args":[{"name":"amount","doc":null,"default_value":"","external_name":"amount","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"clone.tap do |__arg13|\n  __arg13.query.offset(amount)\nend"}},{"id":"or(&):self-instance-method","html_id":"or(&):self-instance-method","name":"or","doc":"Run the `or` block first to grab the last WHERE clause and set its\nconjunction to OR. Then call yield to set the next set of ORs","summary":"<p>Run the <code><a href=\"../Avram/Queryable.html#or(&):self-instance-method\">#or</a></code> block first to grab the last WHERE clause and set its conjunction to OR.</p>","abstract":false,"args":[],"args_string":"(&) : <span class=\"k\">self</span>","args_html":"(&) : <span class=\"k\">self</span>","location":{"filename":"src/avram/queryable.cr","line_number":131,"url":null},"def":{"name":"or","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"self","visibility":"Public","body":"query.or(&.itself)\nyield self\n"}},{"id":"order_by(order:Avram::OrderBy):self-instance-method","html_id":"order_by(order:Avram::OrderBy):self-instance-method","name":"order_by","doc":null,"summary":null,"abstract":false,"args":[{"name":"order","doc":null,"default_value":"","external_name":"order","restriction":"Avram::OrderBy"}],"args_string":"(order : Avram::OrderBy) : <span class=\"k\">self</span>","args_html":"(order : <a href=\"../Avram/OrderBy.html\">Avram::OrderBy</a>) : <span class=\"k\">self</span>","location":{"filename":"src/avram/queryable.cr","line_number":143,"url":null},"def":{"name":"order_by","args":[{"name":"order","doc":null,"default_value":"","external_name":"order","restriction":"Avram::OrderBy"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"clone.tap do |__arg10|\n  __arg10.query.order_by(order)\nend"}},{"id":"order_by(column,direction):self-instance-method","html_id":"order_by(column,direction):self-instance-method","name":"order_by","doc":null,"summary":null,"abstract":false,"args":[{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":""},{"name":"direction","doc":null,"default_value":"","external_name":"direction","restriction":""}],"args_string":"(column, direction) : <span class=\"k\">self</span>","args_html":"(column, direction) : <span class=\"k\">self</span>","location":{"filename":"src/avram/queryable.cr","line_number":136,"url":null},"def":{"name":"order_by","args":[{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":""},{"name":"direction","doc":null,"default_value":"","external_name":"direction","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"begin\n  direction = Avram::OrderBy::Direction.parse(direction.to_s)\n  order_by(Avram::OrderBy.new(column, direction))\nrescue e : ArgumentError\n  raise(\"#{e.message}. Accepted values are: :asc, :desc\")\nend"}},{"id":"preloads-instance-method","html_id":"preloads-instance-method","name":"preloads","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/queryable.cr","line_number":200,"url":null},"def":{"name":"preloads","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@preloads"}},{"id":"primary_key_name(*args,**options,&)-instance-method","html_id":"primary_key_name(*args,**options,&)-instance-method","name":"primary_key_name","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","location":{"filename":"src/avram/queryable.cr","line_number":7,"url":null},"def":{"name":"primary_key_name","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"T.primary_key_name(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"id":"primary_key_name(*args,**options)-instance-method","html_id":"primary_key_name(*args,**options)-instance-method","name":"primary_key_name","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","location":{"filename":"src/avram/queryable.cr","line_number":7,"url":null},"def":{"name":"primary_key_name","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"T.primary_key_name(*args, **options)"}},{"id":"query-instance-method","html_id":"query-instance-method","name":"query","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/queryable.cr","line_number":46,"url":null},"def":{"name":"query","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@query || (@query = Avram::QueryBuilder.new(table: table_name).select(schema_class.column_names))"}},{"id":"query=(query)-instance-method","html_id":"query=(query)-instance-method","name":"query=","doc":null,"summary":null,"abstract":false,"args":[{"name":"query","doc":null,"default_value":"","external_name":"query","restriction":""}],"args_string":"(query)","args_html":"(query)","location":{"filename":"src/avram/queryable.cr","line_number":5,"url":null},"def":{"name":"query=","args":[{"name":"query","doc":null,"default_value":"","external_name":"query","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@query = query"}},{"id":"reset_limit:self-instance-method","html_id":"reset_limit:self-instance-method","name":"reset_limit","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : <span class=\"k\">self</span>","args_html":" : <span class=\"k\">self</span>","location":{"filename":"src/avram/queryable.cr","line_number":60,"url":null},"def":{"name":"reset_limit","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"clone.tap do |__arg2|\n  __arg2.query.limit(nil)\nend"}},{"id":"reset_offset:self-instance-method","html_id":"reset_offset:self-instance-method","name":"reset_offset","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : <span class=\"k\">self</span>","args_html":" : <span class=\"k\">self</span>","location":{"filename":"src/avram/queryable.cr","line_number":64,"url":null},"def":{"name":"reset_offset","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"clone.tap do |__arg3|\n  __arg3.query.offset(nil)\nend"}},{"id":"reset_order:self-instance-method","html_id":"reset_order:self-instance-method","name":"reset_order","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : <span class=\"k\">self</span>","args_html":" : <span class=\"k\">self</span>","location":{"filename":"src/avram/queryable.cr","line_number":56,"url":null},"def":{"name":"reset_order","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"clone.tap do |__arg1|\n  __arg1.query.reset_order\nend"}},{"id":"reset_where(&):self-instance-method","html_id":"reset_where(&):self-instance-method","name":"reset_where","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"(&) : <span class=\"k\">self</span>","args_html":"(&) : <span class=\"k\">self</span>","location":{"filename":"src/avram/queryable.cr","line_number":73,"url":null},"def":{"name":"reset_where","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"self","visibility":"Public","body":"criteria = yield clone\ncriteria.private_reset_where\n"}},{"id":"results:Array(T)-instance-method","html_id":"results:Array(T)-instance-method","name":"results","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(T)","args_html":" : <a href=\"../Array.html\">Array</a>(T)","location":{"filename":"src/avram/queryable.cr","line_number":206,"url":null},"def":{"name":"results","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(T)","visibility":"Public","body":"exec_query.tap do |records|\n  preloads.each(&.call(records))\nend"}},{"id":"schema_class-instance-method","html_id":"schema_class-instance-method","name":"schema_class","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/queryable.cr","line_number":42,"url":null},"def":{"name":"schema_class","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"T"}},{"id":"select_count:Int64-instance-method","html_id":"select_count:Int64-instance-method","name":"select_count","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int64","args_html":" : <a href=\"../Int64.html\">Int64</a>","location":{"filename":"src/avram/queryable.cr","line_number":188,"url":null},"def":{"name":"select_count","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int64","visibility":"Public","body":"begin\n  exec_scalar(&.select_count).as(Int64)\nrescue e : DB::NoResultsError\n  0_i64\nend"}},{"id":"table_name(*args,**options,&)-instance-method","html_id":"table_name(*args,**options,&)-instance-method","name":"table_name","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","location":{"filename":"src/avram/queryable.cr","line_number":7,"url":null},"def":{"name":"table_name","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"T.table_name(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"id":"table_name(*args,**options)-instance-method","html_id":"table_name(*args,**options)-instance-method","name":"table_name","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","location":{"filename":"src/avram/queryable.cr","line_number":7,"url":null},"def":{"name":"table_name","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"T.table_name(*args, **options)"}},{"id":"to_prepared_sql-instance-method","html_id":"to_prepared_sql-instance-method","name":"to_prepared_sql","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/queryable.cr","line_number":255,"url":null},"def":{"name":"to_prepared_sql","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"query.to_prepared_sql"}},{"id":"to_sql-instance-method","html_id":"to_sql-instance-method","name":"to_sql","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/queryable.cr","line_number":251,"url":null},"def":{"name":"to_sql","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"query.to_sql"}},{"id":"update:Int64-instance-method","html_id":"update:Int64-instance-method","name":"update","doc":"Update the records using the query's where clauses, or all records if no wheres are added.\n\nReturns the number of records updated as `Int64`.\n\n```\n# Update all comments with the word \"spam\" as spam\nCommentQuery.new.body.ilike(\"spam\").update(spam: true)\n```","summary":"<p>Update the records using the query's where clauses, or all records if no wheres are added.</p>","abstract":true,"args":[],"args_string":" : Int64","args_html":" : <a href=\"../Int64.html\">Int64</a>","location":{"filename":"src/avram/queryable.cr","line_number":103,"url":null},"def":{"name":"update","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int64","visibility":"Public","body":""}},{"id":"where(statement:String,*bind_vars):self-instance-method","html_id":"where(statement:String,*bind_vars):self-instance-method","name":"where","doc":null,"summary":null,"abstract":false,"args":[{"name":"statement","doc":null,"default_value":"","external_name":"statement","restriction":"String"},{"name":"bind_vars","doc":null,"default_value":"","external_name":"bind_vars","restriction":""}],"args_string":"(statement : String, *bind_vars) : <span class=\"k\">self</span>","args_html":"(statement : <a href=\"../String.html\">String</a>, *bind_vars) : <span class=\"k\">self</span>","location":{"filename":"src/avram/queryable.cr","line_number":113,"url":null},"def":{"name":"where","args":[{"name":"statement","doc":null,"default_value":"","external_name":"statement","restriction":"String"},{"name":"bind_vars","doc":null,"default_value":"","external_name":"bind_vars","restriction":""}],"double_splat":null,"splat_index":1,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"where(statement, args: bind_vars.to_a)"}},{"id":"where(sql_clause:Avram::Where::SqlClause):self-instance-method","html_id":"where(sql_clause:Avram::Where::SqlClause):self-instance-method","name":"where","doc":null,"summary":null,"abstract":false,"args":[{"name":"sql_clause","doc":null,"default_value":"","external_name":"sql_clause","restriction":"Avram::Where::SqlClause"}],"args_string":"(sql_clause : Avram::Where::SqlClause) : <span class=\"k\">self</span>","args_html":"(sql_clause : <a href=\"../Avram/Where/SqlClause.html\">Avram::Where::SqlClause</a>) : <span class=\"k\">self</span>","location":{"filename":"src/avram/queryable.cr","line_number":121,"url":null},"def":{"name":"where","args":[{"name":"sql_clause","doc":null,"default_value":"","external_name":"sql_clause","restriction":"Avram::Where::SqlClause"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"clone.tap do |__arg7|\n  __arg7.query.where(sql_clause)\nend"}},{"id":"where(column:Symbol,value):self-instance-method","html_id":"where(column:Symbol,value):self-instance-method","name":"where","doc":null,"summary":null,"abstract":false,"args":[{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":"Symbol"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(column : Symbol, value) : <span class=\"k\">self</span>","args_html":"(column : Symbol, value) : <span class=\"k\">self</span>","location":{"filename":"src/avram/queryable.cr","line_number":109,"url":null},"def":{"name":"where","args":[{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":"Symbol"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"clone.tap do |__arg5|\n  __arg5.query.where(Avram::Where::Equal.new(column, value.to_s))\nend"}},{"id":"where(statement:String,*,argsbind_vars:Array):self-instance-method","html_id":"where(statement:String,*,argsbind_vars:Array):self-instance-method","name":"where","doc":null,"summary":null,"abstract":false,"args":[{"name":"statement","doc":null,"default_value":"","external_name":"statement","restriction":"String"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"bind_vars","doc":null,"default_value":"","external_name":"args","restriction":"Array"}],"args_string":"(statement : String, *, args bind_vars : Array) : <span class=\"k\">self</span>","args_html":"(statement : <a href=\"../String.html\">String</a>, *, args bind_vars : <a href=\"../Array.html\">Array</a>) : <span class=\"k\">self</span>","location":{"filename":"src/avram/queryable.cr","line_number":117,"url":null},"def":{"name":"where","args":[{"name":"statement","doc":null,"default_value":"","external_name":"statement","restriction":"String"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"bind_vars","doc":null,"default_value":"","external_name":"args","restriction":"Array"}],"double_splat":null,"splat_index":1,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"clone.tap do |__arg6|\n  __arg6.query.where(Avram::Where::Raw.new(statement, args: bind_vars))\nend"}}],"macros":[],"types":[]},{"html_id":"avram/Avram/QueryBuilder","path":"Avram/QueryBuilder.html","kind":"class","full_name":"Avram::QueryBuilder","name":"QueryBuilder","abstract":false,"superclass":{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(table:Symbol)-class-method","html_id":"new(table:Symbol)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"table","doc":null,"default_value":"","external_name":"table","restriction":"Symbol"}],"args_string":"(table : Symbol)","args_html":"(table : Symbol)","location":{"filename":"src/avram/query_builder.cr","line_number":18,"url":null},"def":{"name":"new","args":[{"name":"table","doc":null,"default_value":"","external_name":"table","restriction":"Symbol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(table)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"args-instance-method","html_id":"args-instance-method","name":"args","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/query_builder.cr","line_number":98,"url":null},"def":{"name":"args","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"prepared_statement_values"}},{"id":"args_for_update(params)-instance-method","html_id":"args_for_update(params)-instance-method","name":"args_for_update","doc":null,"summary":null,"abstract":false,"args":[{"name":"params","doc":null,"default_value":"","external_name":"params","restriction":""}],"args_string":"(params)","args_html":"(params)","location":{"filename":"src/avram/query_builder.cr","line_number":69,"url":null},"def":{"name":"args_for_update","args":[{"name":"params","doc":null,"default_value":"","external_name":"params","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(param_values(params)) + prepared_statement_values"}},{"id":"clone-instance-method","html_id":"clone-instance-method","name":"clone","doc":"Returns a copy of `self` with all instance variables cloned.","summary":"<p>Returns a copy of <code>self</code> with all instance variables cloned.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/query_builder.cr","line_number":2,"url":null},"def":{"name":"clone","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"{% if @type < Reference && (!@type.instance_vars.map(&.type).all? do |t|\n  ((((t == ::Bool) || (t == ::Char)) || (t == ::Symbol)) || (t == ::String)) || t < ::Number::Primitive\nend) %}\n        exec_recursive_clone do |hash|\n          clone = {{ @type }}.allocate\n          hash[object_id] = clone.object_id\n          clone.initialize_copy(self)\n          GC.add_finalizer(clone) if clone.responds_to?(:finalize)\n          clone\n        end\n      {% else %}\n        clone = {{ @type }}.allocate\n        clone.initialize_copy(self)\n        GC.add_finalizer(clone) if clone.responds_to?(:finalize)\n        clone\n      {% end %}"}},{"id":"delete-instance-method","html_id":"delete-instance-method","name":"delete","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/query_builder.cr","line_number":106,"url":null},"def":{"name":"delete","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@delete = true\nself\n"}},{"id":"distinct-instance-method","html_id":"distinct-instance-method","name":"distinct","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/query_builder.cr","line_number":111,"url":null},"def":{"name":"distinct","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@distinct = true\nself\n"}},{"id":"distinct?-instance-method","html_id":"distinct?-instance-method","name":"distinct?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/query_builder.cr","line_number":121,"url":null},"def":{"name":"distinct?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@distinct || has_distinct_on?"}},{"id":"distinct_on:ColumnName?-instance-method","html_id":"distinct_on:ColumnName?-instance-method","name":"distinct_on","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : ColumnName?","args_html":" : <a href=\"../Avram/QueryBuilder/ColumnName.html\">ColumnName</a>?","location":{"filename":"src/avram/query_builder.cr","line_number":6,"url":null},"def":{"name":"distinct_on","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"ColumnName | Nil","visibility":"Public","body":"@distinct_on"}},{"id":"distinct_on(column:ColumnName)-instance-method","html_id":"distinct_on(column:ColumnName)-instance-method","name":"distinct_on","doc":null,"summary":null,"abstract":false,"args":[{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":"ColumnName"}],"args_string":"(column : ColumnName)","args_html":"(column : <a href=\"../Avram/QueryBuilder/ColumnName.html\">ColumnName</a>)","location":{"filename":"src/avram/query_builder.cr","line_number":116,"url":null},"def":{"name":"distinct_on","args":[{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":"ColumnName"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@distinct_on = column\nself\n"}},{"id":"group_by(column:ColumnName)-instance-method","html_id":"group_by(column:ColumnName)-instance-method","name":"group_by","doc":null,"summary":null,"abstract":false,"args":[{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":"ColumnName"}],"args_string":"(column : ColumnName)","args_html":"(column : <a href=\"../Avram/QueryBuilder/ColumnName.html\">ColumnName</a>)","location":{"filename":"src/avram/query_builder.cr","line_number":174,"url":null},"def":{"name":"group_by","args":[{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":"ColumnName"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@groups << column\nself\n"}},{"id":"group_sql-instance-method","html_id":"group_sql-instance-method","name":"group_sql","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/query_builder.cr","line_number":179,"url":null},"def":{"name":"group_sql","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if grouped?\n  \"GROUP BY \" + (groups.join(\", \"))\nend"}},{"id":"grouped?-instance-method","html_id":"grouped?-instance-method","name":"grouped?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/query_builder.cr","line_number":189,"url":null},"def":{"name":"grouped?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@groups.any?"}},{"id":"groups:Array(String|Symbol)-instance-method","html_id":"groups:Array(String|Symbol)-instance-method","name":"groups","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(String | Symbol)","args_html":" : <a href=\"../Array.html\">Array</a>(<a href=\"../String.html\">String</a> | Symbol)","location":{"filename":"src/avram/query_builder.cr","line_number":185,"url":null},"def":{"name":"groups","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@groups"}},{"id":"has_distinct_on?-instance-method","html_id":"has_distinct_on?-instance-method","name":"has_distinct_on?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/query_builder.cr","line_number":125,"url":null},"def":{"name":"has_distinct_on?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"!(!@distinct_on)"}},{"id":"join(join_clause:Avram::Join::SqlClause)-instance-method","html_id":"join(join_clause:Avram::Join::SqlClause)-instance-method","name":"join","doc":null,"summary":null,"abstract":false,"args":[{"name":"join_clause","doc":null,"default_value":"","external_name":"join_clause","restriction":"Avram::Join::SqlClause"}],"args_string":"(join_clause : Avram::Join::SqlClause)","args_html":"(join_clause : <a href=\"../Avram/Join/SqlClause.html\">Avram::Join::SqlClause</a>)","location":{"filename":"src/avram/query_builder.cr","line_number":276,"url":null},"def":{"name":"join","args":[{"name":"join_clause","doc":null,"default_value":"","external_name":"join_clause","restriction":"Avram::Join::SqlClause"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (join_clause.to != table) && @joins.none? do |join|\n  join.to == join_clause.to\nend\n  @joins << join_clause\nend\nself\n"}},{"id":"joins-instance-method","html_id":"joins-instance-method","name":"joins","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/query_builder.cr","line_number":283,"url":null},"def":{"name":"joins","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@joins.uniq(&.to_sql)"}},{"id":"limit:Int32?-instance-method","html_id":"limit:Int32?-instance-method","name":"limit","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32?","args_html":" : <a href=\"../Int32.html\">Int32</a>?","location":{"filename":"src/avram/query_builder.cr","line_number":129,"url":null},"def":{"name":"limit","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@limit"}},{"id":"limit(limit)-instance-method","html_id":"limit(limit)-instance-method","name":"limit","doc":null,"summary":null,"abstract":false,"args":[{"name":"limit","doc":null,"default_value":"","external_name":"limit","restriction":""}],"args_string":"(limit)","args_html":"(limit)","location":{"filename":"src/avram/query_builder.cr","line_number":133,"url":null},"def":{"name":"limit","args":[{"name":"limit","doc":null,"default_value":"","external_name":"limit","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@limit = limit\nself\n"}},{"id":"merge(query_to_merge:Avram::QueryBuilder)-instance-method","html_id":"merge(query_to_merge:Avram::QueryBuilder)-instance-method","name":"merge","doc":"Merges the wheres, joins, and orders from the passed in query","summary":"<p>Merges the wheres, joins, and orders from the passed in query</p>","abstract":false,"args":[{"name":"query_to_merge","doc":null,"default_value":"","external_name":"query_to_merge","restriction":"Avram::QueryBuilder"}],"args_string":"(query_to_merge : Avram::QueryBuilder)","args_html":"(query_to_merge : <a href=\"../Avram/QueryBuilder.html\">Avram::QueryBuilder</a>)","location":{"filename":"src/avram/query_builder.cr","line_number":39,"url":null},"def":{"name":"merge","args":[{"name":"query_to_merge","doc":null,"default_value":"","external_name":"query_to_merge","restriction":"Avram::QueryBuilder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"query_to_merge.wheres.each do |where|\n  where(where)\nend\nquery_to_merge.joins.each do |join|\n  join(join)\nend\nquery_to_merge.orders.each do |order|\n  order_by(order)\nend\nquery_to_merge.groups.each do |group|\n  group_by(group)\nend\n"}},{"id":"offset(offset)-instance-method","html_id":"offset(offset)-instance-method","name":"offset","doc":null,"summary":null,"abstract":false,"args":[{"name":"offset","doc":null,"default_value":"","external_name":"offset","restriction":""}],"args_string":"(offset)","args_html":"(offset)","location":{"filename":"src/avram/query_builder.cr","line_number":141,"url":null},"def":{"name":"offset","args":[{"name":"offset","doc":null,"default_value":"","external_name":"offset","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@offset = offset\nself\n"}},{"id":"offset:Int32?-instance-method","html_id":"offset:Int32?-instance-method","name":"offset","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32?","args_html":" : <a href=\"../Int32.html\">Int32</a>?","location":{"filename":"src/avram/query_builder.cr","line_number":137,"url":null},"def":{"name":"offset","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@offset"}},{"id":"or(&block:Avram::QueryBuilder->Avram::QueryBuilder)-instance-method","html_id":"or(&block:Avram::QueryBuilder->Avram::QueryBuilder)-instance-method","name":"or","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"(&block : Avram::QueryBuilder -> Avram::QueryBuilder)","args_html":"(&block : <a href=\"../Avram/QueryBuilder.html\">Avram::QueryBuilder</a> -> <a href=\"../Avram/QueryBuilder.html\">Avram::QueryBuilder</a>)","location":{"filename":"src/avram/query_builder.cr","line_number":301,"url":null},"def":{"name":"or","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(Avram::QueryBuilder -> Avram::QueryBuilder)"},"return_type":"","visibility":"Public","body":"if @wheres.empty?\n  raise(Avram::InvalidQueryError.new(\"Cannot call `or` before calling a `where`\"))\nend\n@wheres.last.conjunction = Avram::Where::Conjunction::Or\nblock.call(self)\n"}},{"id":"order_by(order:OrderBy)-instance-method","html_id":"order_by(order:OrderBy)-instance-method","name":"order_by","doc":null,"summary":null,"abstract":false,"args":[{"name":"order","doc":null,"default_value":"","external_name":"order","restriction":"OrderBy"}],"args_string":"(order : OrderBy)","args_html":"(order : <a href=\"../Avram/OrderBy.html\">OrderBy</a>)","location":{"filename":"src/avram/query_builder.cr","line_number":145,"url":null},"def":{"name":"order_by","args":[{"name":"order","doc":null,"default_value":"","external_name":"order","restriction":"OrderBy"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@orders << order\nself\n"}},{"id":"order_sql-instance-method","html_id":"order_sql-instance-method","name":"order_sql","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/query_builder.cr","line_number":164,"url":null},"def":{"name":"order_sql","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if ordered?\n  \"ORDER BY \" + (orders.map(&.prepare).join(\", \"))\nend"}},{"id":"ordered?-instance-method","html_id":"ordered?-instance-method","name":"ordered?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/query_builder.cr","line_number":249,"url":null},"def":{"name":"ordered?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@orders.any?"}},{"id":"orders-instance-method","html_id":"orders-instance-method","name":"orders","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/query_builder.cr","line_number":170,"url":null},"def":{"name":"orders","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@orders.uniq!(&.column)"}},{"id":"raw_where(where_clause:Avram::Where::Raw)-instance-method","html_id":"raw_where(where_clause:Avram::Where::Raw)-instance-method","name":"raw_where","doc":null,"summary":"<p><span class=\"flag red\">DEPRECATED</span>  Use <code><a href=\"../Avram/QueryBuilder.html#where(where_clause:Avram::Where::Condition)-instance-method\">#where</a></code> instead.</p>\n\n","abstract":false,"args":[{"name":"where_clause","doc":null,"default_value":"","external_name":"where_clause","restriction":"Avram::Where::Raw"}],"args_string":"(where_clause : Avram::Where::Raw)","args_html":"(where_clause : <a href=\"../Avram/Where/Raw.html\">Avram::Where::Raw</a>)","location":{"filename":"src/avram/query_builder.cr","line_number":297,"url":null},"def":{"name":"raw_where","args":[{"name":"where_clause","doc":null,"default_value":"","external_name":"where_clause","restriction":"Avram::Where::Raw"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"where(where_clause)"}},{"id":"raw_wheres-instance-method","html_id":"raw_wheres-instance-method","name":"raw_wheres","doc":null,"summary":"<p><span class=\"flag red\">DEPRECATED</span>  Use <code><a href=\"../Avram/QueryBuilder.html#wheres:Array(Avram::Where::Condition)-instance-method\">#wheres</a></code> instead. Raw wheres are included.</p>\n\n","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/query_builder.cr","line_number":337,"url":null},"def":{"name":"raw_wheres","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"wheres.select do |__arg5|\n  __arg5.is_a?(Avram::Where::Raw)\nend"}},{"id":"reset_order-instance-method","html_id":"reset_order-instance-method","name":"reset_order","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/query_builder.cr","line_number":155,"url":null},"def":{"name":"reset_order","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@orders.clear"}},{"id":"reset_where(column:ColumnName)-instance-method","html_id":"reset_where(column:ColumnName)-instance-method","name":"reset_where","doc":null,"summary":null,"abstract":false,"args":[{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":"ColumnName"}],"args_string":"(column : ColumnName)","args_html":"(column : <a href=\"../Avram/QueryBuilder/ColumnName.html\">ColumnName</a>)","location":{"filename":"src/avram/query_builder.cr","line_number":150,"url":null},"def":{"name":"reset_where","args":[{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":"ColumnName"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@wheres.reject! do |clause|\n  clause.is_a?(Avram::Where::SqlClause) && (clause.column.to_s == column.to_s)\nend\nself\n"}},{"id":"reverse_order-instance-method","html_id":"reverse_order-instance-method","name":"reverse_order","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/query_builder.cr","line_number":159,"url":null},"def":{"name":"reverse_order","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@orders = @orders.map(&.reversed).reverse\nself\n"}},{"id":"select(selection:Array(ColumnName))-instance-method","html_id":"select(selection:Array(ColumnName))-instance-method","name":"select","doc":null,"summary":null,"abstract":false,"args":[{"name":"selection","doc":null,"default_value":"","external_name":"selection","restriction":"Array(ColumnName)"}],"args_string":"(selection : Array(ColumnName))","args_html":"(selection : <a href=\"../Array.html\">Array</a>(<a href=\"../Avram/QueryBuilder/ColumnName.html\">ColumnName</a>))","location":{"filename":"src/avram/query_builder.cr","line_number":242,"url":null},"def":{"name":"select","args":[{"name":"selection","doc":null,"default_value":"","external_name":"selection","restriction":"Array(ColumnName)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@selections = selection.map do |column|\n  \"#{@table}.#{column}\"\nend.join(\", \")\nself\n"}},{"id":"select_average(column:ColumnName)-instance-method","html_id":"select_average(column:ColumnName)-instance-method","name":"select_average","doc":null,"summary":null,"abstract":false,"args":[{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":"ColumnName"}],"args_string":"(column : ColumnName)","args_html":"(column : <a href=\"../Avram/QueryBuilder/ColumnName.html\">ColumnName</a>)","location":{"filename":"src/avram/query_builder.cr","line_number":205,"url":null},"def":{"name":"select_average","args":[{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":"ColumnName"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"add_aggregate(\"AVG(#{column})\")"}},{"id":"select_count-instance-method","html_id":"select_count-instance-method","name":"select_count","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/query_builder.cr","line_number":193,"url":null},"def":{"name":"select_count","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"add_aggregate(\"COUNT(*)\")"}},{"id":"select_max(column:ColumnName)-instance-method","html_id":"select_max(column:ColumnName)-instance-method","name":"select_max","doc":null,"summary":null,"abstract":false,"args":[{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":"ColumnName"}],"args_string":"(column : ColumnName)","args_html":"(column : <a href=\"../Avram/QueryBuilder/ColumnName.html\">ColumnName</a>)","location":{"filename":"src/avram/query_builder.cr","line_number":201,"url":null},"def":{"name":"select_max","args":[{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":"ColumnName"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"add_aggregate(\"MAX(#{column})\")"}},{"id":"select_min(column:ColumnName)-instance-method","html_id":"select_min(column:ColumnName)-instance-method","name":"select_min","doc":null,"summary":null,"abstract":false,"args":[{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":"ColumnName"}],"args_string":"(column : ColumnName)","args_html":"(column : <a href=\"../Avram/QueryBuilder/ColumnName.html\">ColumnName</a>)","location":{"filename":"src/avram/query_builder.cr","line_number":197,"url":null},"def":{"name":"select_min","args":[{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":"ColumnName"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"add_aggregate(\"MIN(#{column})\")"}},{"id":"select_sum(column:ColumnName)-instance-method","html_id":"select_sum(column:ColumnName)-instance-method","name":"select_sum","doc":null,"summary":null,"abstract":false,"args":[{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":"ColumnName"}],"args_string":"(column : ColumnName)","args_html":"(column : <a href=\"../Avram/QueryBuilder/ColumnName.html\">ColumnName</a>)","location":{"filename":"src/avram/query_builder.cr","line_number":209,"url":null},"def":{"name":"select_sum","args":[{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":"ColumnName"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"add_aggregate(\"SUM(#{column})\")"}},{"id":"selects-instance-method","html_id":"selects-instance-method","name":"selects","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/query_builder.cr","line_number":236,"url":null},"def":{"name":"selects","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(@selections.split(\", \")).map do |column|\n  (column.split(\".\")).last\nend"}},{"id":"statement-instance-method","html_id":"statement-instance-method","name":"statement","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/query_builder.cr","line_number":57,"url":null},"def":{"name":"statement","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"join_sql([@delete ? delete_sql : select_sql] + sql_condition_clauses)"}},{"id":"statement_for_update(params,return_columnsreturning?:Bool=true)-instance-method","html_id":"statement_for_update(params,return_columnsreturning?:Bool=true)-instance-method","name":"statement_for_update","doc":null,"summary":null,"abstract":false,"args":[{"name":"params","doc":null,"default_value":"","external_name":"params","restriction":""},{"name":"returning?","doc":null,"default_value":"true","external_name":"return_columns","restriction":"Bool"}],"args_string":"(params, return_columns returning? : Bool = <span class=\"n\">true</span>)","args_html":"(params, return_columns returning? : <a href=\"../Bool.html\">Bool</a> = <span class=\"n\">true</span>)","location":{"filename":"src/avram/query_builder.cr","line_number":61,"url":null},"def":{"name":"statement_for_update","args":[{"name":"params","doc":null,"default_value":"","external_name":"params","restriction":""},{"name":"returning?","doc":null,"default_value":"true","external_name":"return_columns","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"sql = [\"UPDATE #{table}\", set_sql_clause(params)]\nsql = sql + sql_condition_clauses\nif returning?\n  sql = sql + [\"RETURNING #{@selections}\"]\nend\njoin_sql(sql)\n"}},{"id":"table:Symbol-instance-method","html_id":"table:Symbol-instance-method","name":"table","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Symbol","args_html":" : Symbol","location":{"filename":"src/avram/query_builder.cr","line_number":5,"url":null},"def":{"name":"table","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@table"}},{"id":"to_prepared_sql:String-instance-method","html_id":"to_prepared_sql:String-instance-method","name":"to_prepared_sql","doc":"Prepares the SQL statement by combining the `args` and `statement`\nin to a single `String`","summary":"<p>Prepares the SQL statement by combining the <code><a href=\"../Avram/QueryBuilder.html#args-instance-method\">#args</a></code> and <code><a href=\"../Avram/QueryBuilder.html#statement-instance-method\">#statement</a></code> in to a single <code><a href=\"../String.html\">String</a></code></p>","abstract":false,"args":[],"args_string":" : String","args_html":" : <a href=\"../String.html\">String</a>","location":{"filename":"src/avram/query_builder.cr","line_number":27,"url":null},"def":{"name":"to_prepared_sql","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"params = args.map do |arg|\n  \"'#{String.new((PQ::Param.encode(arg)).slice)}'\"\nend\ni = 0\nsql = statement\nsql.scan(/\\$\\d+/) do |match|\n  sql = sql.sub(match[0], params[i])\n  i = i + 1\nend\nsql\n"}},{"id":"to_sql-instance-method","html_id":"to_sql-instance-method","name":"to_sql","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/query_builder.cr","line_number":21,"url":null},"def":{"name":"to_sql","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"[statement] + args"}},{"id":"where(where_clause:Avram::Where::Condition)-instance-method","html_id":"where(where_clause:Avram::Where::Condition)-instance-method","name":"where","doc":null,"summary":null,"abstract":false,"args":[{"name":"where_clause","doc":null,"default_value":"","external_name":"where_clause","restriction":"Avram::Where::Condition"}],"args_string":"(where_clause : Avram::Where::Condition)","args_html":"(where_clause : <a href=\"../Avram/Where/Condition.html\">Avram::Where::Condition</a>)","location":{"filename":"src/avram/query_builder.cr","line_number":291,"url":null},"def":{"name":"where","args":[{"name":"where_clause","doc":null,"default_value":"","external_name":"where_clause","restriction":"Avram::Where::Condition"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@wheres << where_clause\nself\n"}},{"id":"wheres:Array(Avram::Where::Condition)-instance-method","html_id":"wheres:Array(Avram::Where::Condition)-instance-method","name":"wheres","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(Avram::Where::Condition)","args_html":" : <a href=\"../Array.html\">Array</a>(<a href=\"../Avram/Where/Condition.html\">Avram::Where::Condition</a>)","location":{"filename":"src/avram/query_builder.cr","line_number":332,"url":null},"def":{"name":"wheres","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@wheres"}}],"macros":[],"types":[{"html_id":"avram/Avram/QueryBuilder/ColumnName","path":"Avram/QueryBuilder/ColumnName.html","kind":"alias","full_name":"Avram::QueryBuilder::ColumnName","name":"ColumnName","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":true,"aliased":"(String | Symbol)","aliased_html":"<a href=\"../../String.html\">String</a> | Symbol","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Avram/QueryBuilder","kind":"class","full_name":"Avram::QueryBuilder","name":"QueryBuilder"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]},{"html_id":"avram/Avram/RecordNotFoundError","path":"Avram/RecordNotFoundError.html","kind":"class","full_name":"Avram::RecordNotFoundError","name":"RecordNotFoundError","abstract":false,"superclass":{"html_id":"avram/Avram/AvramError","kind":"class","full_name":"Avram::AvramError","name":"AvramError"},"ancestors":[{"html_id":"avram/Avram/AvramError","kind":"class","full_name":"Avram::AvramError","name":"AvramError"},{"html_id":"avram/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":"Raised when Avram cannot find a record by given id","summary":"<p>Raised when Avram cannot find a record by given id</p>","class_methods":[],"constructors":[{"id":"new(model:Symbol,id:String)-class-method","html_id":"new(model:Symbol,id:String)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"model","doc":null,"default_value":"","external_name":"model","restriction":"Symbol"},{"name":"id","doc":null,"default_value":"","external_name":"id","restriction":"String"}],"args_string":"(model : Symbol, id : String)","args_html":"(model : Symbol, id : <a href=\"../String.html\">String</a>)","location":{"filename":"src/avram/errors.cr","line_number":24,"url":null},"def":{"name":"new","args":[{"name":"model","doc":null,"default_value":"","external_name":"model","restriction":"Symbol"},{"name":"id","doc":null,"default_value":"","external_name":"id","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(model, id)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(model:Symbol,query:Symbol)-class-method","html_id":"new(model:Symbol,query:Symbol)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"model","doc":null,"default_value":"","external_name":"model","restriction":"Symbol"},{"name":"query","doc":null,"default_value":"","external_name":"query","restriction":"Symbol"}],"args_string":"(model : Symbol, query : Symbol)","args_html":"(model : Symbol, query : Symbol)","location":{"filename":"src/avram/errors.cr","line_number":28,"url":null},"def":{"name":"new","args":[{"name":"model","doc":null,"default_value":"","external_name":"model","restriction":"Symbol"},{"name":"query","doc":null,"default_value":"","external_name":"query","restriction":"Symbol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(model, query)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[],"macros":[],"types":[]},{"html_id":"avram/Avram/Repo","path":"Avram/Repo.html","kind":"class","full_name":"Avram::Repo","name":"Repo","abstract":false,"superclass":{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[{"id":"class_has_been_renamed_helpful_error-macro","html_id":"class_has_been_renamed_helpful_error-macro","name":"class_has_been_renamed_helpful_error","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","location":{"filename":"src/avram/repo.cr","line_number":9,"url":null},"def":{"name":"class_has_been_renamed_helpful_error","args":[],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    \n{% raise(\"Avram::Repo has been renamed to Avram::Database and requires a subclass now.\\n\\nTry this...\\n\\n  1. Create a database class called 'AppDatabase' that inherits from 'Avram::Database'\\n  2. Configure it with 'AppDatabase.configure'\\n  3. Set the database in 'BaseModel' (can also be specific per model). Example:\\n\\n      class BaseModel < Avram::Model\\n        def self.database\\n          AppDatabase\\n        end\\n      end\\n\") %}\n\n  \n"}},{"id":"method_missing(call)-macro","html_id":"method_missing(call)-macro","name":"method_missing","doc":null,"summary":null,"abstract":false,"args":[{"name":"call","doc":null,"default_value":"","external_name":"call","restriction":""}],"args_string":"(call)","location":{"filename":"src/avram/repo.cr","line_number":2,"url":null},"def":{"name":"method_missing","args":[{"name":"call","doc":null,"default_value":"","external_name":"call","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"      class_has_been_renamed.\n{{ call }}\n\n    \n"}}],"types":[]},{"html_id":"avram/Avram/Rollback","path":"Avram/Rollback.html","kind":"class","full_name":"Avram::Rollback","name":"Rollback","abstract":false,"superclass":{"html_id":"avram/Avram/AvramError","kind":"class","full_name":"Avram::AvramError","name":"AvramError"},"ancestors":[{"html_id":"avram/Avram/AvramError","kind":"class","full_name":"Avram::AvramError","name":"AvramError"},{"html_id":"avram/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":"Raise to rollback a transaction.","summary":"<p>Raise to rollback a transaction.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"avram/Avram/SaveOperation","path":"Avram/SaveOperation.html","kind":"class","full_name":"Avram::SaveOperation(T)","name":"SaveOperation","abstract":true,"superclass":{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"avram/Avram/InheritColumnAttributes","kind":"module","full_name":"Avram::InheritColumnAttributes","name":"InheritColumnAttributes"},{"html_id":"avram/Avram/MarkAsFailed","kind":"module","full_name":"Avram::MarkAsFailed","name":"MarkAsFailed"},{"html_id":"avram/Avram/NestedSaveOperation","kind":"module","full_name":"Avram::NestedSaveOperation","name":"NestedSaveOperation"},{"html_id":"avram/Avram/DatabaseValidations","kind":"module","full_name":"Avram::DatabaseValidations","name":"DatabaseValidations"},{"html_id":"avram/Avram/Callbacks","kind":"module","full_name":"Avram::Callbacks","name":"Callbacks"},{"html_id":"avram/Avram/NeedyInitializerAndSaveMethods","kind":"module","full_name":"Avram::NeedyInitializerAndSaveMethods","name":"NeedyInitializerAndSaveMethods"},{"html_id":"avram/Avram/ParamKeyOverride","kind":"module","full_name":"Avram::ParamKeyOverride","name":"ParamKeyOverride"},{"html_id":"avram/Avram/OperationErrors","kind":"module","full_name":"Avram::OperationErrors","name":"OperationErrors"},{"html_id":"avram/Avram/Validations","kind":"module","full_name":"Avram::Validations","name":"Validations"},{"html_id":"avram/Avram/DefineAttribute","kind":"module","full_name":"Avram::DefineAttribute","name":"DefineAttribute"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[{"id":"ATTRIBUTES","name":"ATTRIBUTES","value":"[] of Nil","doc":null,"summary":null},{"id":"OPERATION_NEEDS","name":"OPERATION_NEEDS","value":"[] of Nil","doc":null,"summary":null}],"included_modules":[{"html_id":"avram/Avram/Callbacks","kind":"module","full_name":"Avram::Callbacks","name":"Callbacks"},{"html_id":"avram/Avram/DatabaseValidations","kind":"module","full_name":"Avram::DatabaseValidations","name":"DatabaseValidations"},{"html_id":"avram/Avram/DefineAttribute","kind":"module","full_name":"Avram::DefineAttribute","name":"DefineAttribute"},{"html_id":"avram/Avram/InheritColumnAttributes","kind":"module","full_name":"Avram::InheritColumnAttributes","name":"InheritColumnAttributes"},{"html_id":"avram/Avram/MarkAsFailed","kind":"module","full_name":"Avram::MarkAsFailed","name":"MarkAsFailed"},{"html_id":"avram/Avram/NeedyInitializerAndSaveMethods","kind":"module","full_name":"Avram::NeedyInitializerAndSaveMethods","name":"NeedyInitializerAndSaveMethods"},{"html_id":"avram/Avram/NestedSaveOperation","kind":"module","full_name":"Avram::NestedSaveOperation","name":"NestedSaveOperation"},{"html_id":"avram/Avram/OperationErrors","kind":"module","full_name":"Avram::OperationErrors","name":"OperationErrors"},{"html_id":"avram/Avram/ParamKeyOverride","kind":"module","full_name":"Avram::ParamKeyOverride","name":"ParamKeyOverride"},{"html_id":"avram/Avram/Validations","kind":"module","full_name":"Avram::Validations","name":"Validations"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":null,"summary":null,"class_methods":[{"id":"param_key-class-method","html_id":"param_key-class-method","name":"param_key","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/save_operation.cr","line_number":41,"url":null},"def":{"name":"param_key","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"T.name.underscore"}}],"constructors":[{"id":"new(params)-class-method","html_id":"new(params)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"params","doc":null,"default_value":"","external_name":"params","restriction":""}],"args_string":"(params)","args_html":"(params)","location":{"filename":"src/avram/save_operation.cr","line_number":45,"url":null},"def":{"name":"new","args":[{"name":"params","doc":null,"default_value":"","external_name":"params","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = SaveOperation(T).allocate\n_.initialize(params)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/save_operation.cr","line_number":48,"url":null},"def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = SaveOperation(T).allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"after_commit(_record:T)-instance-method","html_id":"after_commit(_record:T)-instance-method","name":"after_commit","doc":null,"summary":null,"abstract":false,"args":[{"name":"_record","doc":null,"default_value":"","external_name":"_record","restriction":"T"}],"args_string":"(_record : T)","args_html":"(_record : T)","location":{"filename":"src/avram/save_operation.cr","line_number":361,"url":null},"def":{"name":"after_commit","args":[{"name":"_record","doc":null,"default_value":"","external_name":"_record","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"after_save(_record:T)-instance-method","html_id":"after_save(_record:T)-instance-method","name":"after_save","doc":null,"summary":null,"abstract":false,"args":[{"name":"_record","doc":null,"default_value":"","external_name":"_record","restriction":"T"}],"args_string":"(_record : T)","args_html":"(_record : T)","location":{"filename":"src/avram/save_operation.cr","line_number":359,"url":null},"def":{"name":"after_save","args":[{"name":"_record","doc":null,"default_value":"","external_name":"_record","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"attributes-instance-method","html_id":"attributes-instance-method","name":"attributes","doc":null,"summary":null,"abstract":true,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/save_operation.cr","line_number":39,"url":null},"def":{"name":"attributes","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"before_save-instance-method","html_id":"before_save-instance-method","name":"before_save","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/save_operation.cr","line_number":357,"url":null},"def":{"name":"before_save","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"changes:Hash(Symbol,String?)-instance-method","html_id":"changes:Hash(Symbol,String?)-instance-method","name":"changes","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Hash(Symbol, String?)","args_html":" : Hash(Symbol, <a href=\"../String.html\">String</a>?)","location":{"filename":"src/avram/save_operation.cr","line_number":273,"url":null},"def":{"name":"changes","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Hash(Symbol, String | ::Nil)","visibility":"Public","body":"attributes_to_hash(column_attributes.select(&.changed?))"}},{"id":"custom_errors-instance-method","html_id":"custom_errors-instance-method","name":"custom_errors","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"custom_errors","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@custom_errors"}},{"id":"database(*args,**options)-instance-method","html_id":"database(*args,**options)-instance-method","name":"database","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","location":{"filename":"src/avram/save_operation.cr","line_number":52,"url":null},"def":{"name":"database","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"T.database(*args, **options)"}},{"id":"database(*args,**options,&)-instance-method","html_id":"database(*args,**options,&)-instance-method","name":"database","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","location":{"filename":"src/avram/save_operation.cr","line_number":52,"url":null},"def":{"name":"database","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"T.database(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"id":"generic_attributes-instance-method","html_id":"generic_attributes-instance-method","name":"generic_attributes","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/save_operation.cr","line_number":62,"url":null},"def":{"name":"generic_attributes","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"attributes.map do |attr|\n  Avram::GenericAttribute.new(name: attr.name, param: attr.param.try(&.to_s), value: attr.value.try(&.to_s), original_value: attr.original_value.try(&.to_s), param_key: attr.param_key, errors: attr.errors)\nend"}},{"id":"new_record?:Bool-instance-method","html_id":"new_record?:Bool-instance-method","name":"new_record?","doc":"`#persisted?` always returns `true` in `after_*` hooks, whether\na new record was created, or an existing one was updated.\n\nThis method should always return `true` for a create or `false`\nfor an update, independent of the stage we are at in the operation.","summary":"<p><code><a href=\"../Avram/SaveOperation.html#persisted?:Bool-instance-method\">#persisted?</a></code> always returns <code>true</code> in <code>after_*</code> hooks, whether a new record was created, or an existing one was updated.</p>","abstract":false,"args":[],"args_string":" : Bool","args_html":" : <a href=\"../Bool.html\">Bool</a>","location":{"filename":"src/avram/save_operation.cr","line_number":341,"url":null},"def":{"name":"new_record?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"({{ (T.constant(:PRIMARY_KEY_NAME)).id }}).value.nil?"}},{"id":"params-instance-method","html_id":"params-instance-method","name":"params","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/save_operation.cr","line_number":36,"url":null},"def":{"name":"params","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@params"}},{"id":"persisted?:Bool-instance-method","html_id":"persisted?:Bool-instance-method","name":"persisted?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","args_html":" : <a href=\"../Bool.html\">Bool</a>","location":{"filename":"src/avram/save_operation.cr","line_number":332,"url":null},"def":{"name":"persisted?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"!(!record_id)"}},{"id":"primary_key_name(*args,**options)-instance-method","html_id":"primary_key_name(*args,**options)-instance-method","name":"primary_key_name","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","location":{"filename":"src/avram/save_operation.cr","line_number":52,"url":null},"def":{"name":"primary_key_name","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"T.primary_key_name(*args, **options)"}},{"id":"primary_key_name(*args,**options,&)-instance-method","html_id":"primary_key_name(*args,**options,&)-instance-method","name":"primary_key_name","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","location":{"filename":"src/avram/save_operation.cr","line_number":52,"url":null},"def":{"name":"primary_key_name","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"T.primary_key_name(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"id":"record-instance-method","html_id":"record-instance-method","name":"record","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/save_operation.cr","line_number":36,"url":null},"def":{"name":"record","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@record"}},{"id":"save:Bool-instance-method","html_id":"save:Bool-instance-method","name":"save","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","args_html":" : <a href=\"../Bool.html\">Bool</a>","location":{"filename":"src/avram/save_operation.cr","line_number":292,"url":null},"def":{"name":"save","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"before_save\nif valid?\n  transaction_committed = database.transaction do\n    if changes.any? || (!persisted?)\n      insert_or_update\n    end\n    after_save(record.not_nil!)\n    true\n  end\n  if transaction_committed\n    self.save_status = SaveStatus::Saved\n    after_commit(record.not_nil!)\n    Avram::Events::SaveSuccessEvent.publish(operation_class: self.class.name, attributes: generic_attributes)\n    true\n  else\n    mark_as_failed\n    false\n  end\nelse\n  mark_as_failed\n  false\nend\n"}},{"id":"save!:T-instance-method","html_id":"save!:T-instance-method","name":"save!","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : T","args_html":" : T","location":{"filename":"src/avram/save_operation.cr","line_number":320,"url":null},"def":{"name":"save!","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"T","visibility":"Public","body":"if save\n  record.not_nil!\nelse\n  raise(Avram::InvalidOperationError.new(operation: self))\nend"}},{"id":"save_failed?-instance-method","html_id":"save_failed?-instance-method","name":"save_failed?","doc":"Return true if the operation has run and the record failed to save","summary":"<p>Return true if the operation has run and the record failed to save</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/save_operation.cr","line_number":222,"url":null},"def":{"name":"save_failed?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"save_status == SaveStatus::SaveFailed"}},{"id":"save_status:SaveStatus-instance-method","html_id":"save_status:SaveStatus-instance-method","name":"save_status","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : SaveStatus","args_html":" : <a href=\"../Avram/SaveOperation/SaveStatus.html\">SaveStatus</a>","location":{"filename":"src/avram/save_operation.cr","line_number":37,"url":null},"def":{"name":"save_status","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"SaveStatus","visibility":"Public","body":"@save_status"}},{"id":"save_status=(save_status:SaveStatus)-instance-method","html_id":"save_status=(save_status:SaveStatus)-instance-method","name":"save_status=","doc":null,"summary":null,"abstract":false,"args":[{"name":"save_status","doc":null,"default_value":"","external_name":"save_status","restriction":"SaveStatus"}],"args_string":"(save_status : SaveStatus)","args_html":"(save_status : <a href=\"../Avram/SaveOperation/SaveStatus.html\">SaveStatus</a>)","location":{"filename":"src/avram/save_operation.cr","line_number":37,"url":null},"def":{"name":"save_status=","args":[{"name":"save_status","doc":null,"default_value":"","external_name":"save_status","restriction":"SaveStatus"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@save_status = save_status"}},{"id":"saved?-instance-method","html_id":"saved?-instance-method","name":"saved?","doc":"Returns true if the operation has run and saved the record successfully","summary":"<p>Returns true if the operation has run and saved the record successfully</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/save_operation.cr","line_number":217,"url":null},"def":{"name":"saved?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"save_status == SaveStatus::Saved"}},{"id":"table_name(*args,**options,&)-instance-method","html_id":"table_name(*args,**options,&)-instance-method","name":"table_name","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","location":{"filename":"src/avram/save_operation.cr","line_number":52,"url":null},"def":{"name":"table_name","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"T.table_name(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"id":"table_name(*args,**options)-instance-method","html_id":"table_name(*args,**options)-instance-method","name":"table_name","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","location":{"filename":"src/avram/save_operation.cr","line_number":52,"url":null},"def":{"name":"table_name","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"T.table_name(*args, **options)"}},{"id":"update!:T-instance-method","html_id":"update!:T-instance-method","name":"update!","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : T","args_html":" : T","location":{"filename":"src/avram/save_operation.cr","line_number":328,"url":null},"def":{"name":"update!","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"T","visibility":"Public","body":"save!"}},{"id":"valid?:Bool-instance-method","html_id":"valid?:Bool-instance-method","name":"valid?","doc":"Runs required validation,\nthen returns `true` if all attributes are valid,\nand there's no custom errors","summary":"<p>Runs required validation, then returns <code>true</code> if all attributes are valid, and there's no custom errors</p>","abstract":false,"args":[],"args_string":" : Bool","args_html":" : <a href=\"../Bool.html\">Bool</a>","location":{"filename":"src/avram/save_operation.cr","line_number":208,"url":null},"def":{"name":"valid?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"validate_required(*required_attributes)\ncustom_errors.empty? && attributes.all?(&.valid?)\n"}}],"macros":[{"id":"add_cast_value_methods(columns)-macro","html_id":"add_cast_value_methods(columns)-macro","name":"add_cast_value_methods","doc":null,"summary":null,"abstract":false,"args":[{"name":"columns","doc":null,"default_value":"","external_name":"columns","restriction":""}],"args_string":"(columns)","location":{"filename":"src/avram/save_operation.cr","line_number":277,"url":null},"def":{"name":"add_cast_value_methods","args":[{"name":"columns","doc":null,"default_value":"","external_name":"columns","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    private def cast_value(value : Nil)\n      nil\n    \nend\n\n    \n{% for column in columns %}\n    # pass `value` to it's `Lucky.to_db` for parsing.\n    # In most cases, that's just calling `to_s`, but in the case of an Array,\n    # `value` is passed to `PQ::Param` to properly encode `[true]` to `{t}`, etc...\n    private def cast_value(value : {{ column[:type] }})\n      value.not_nil!.class.adapter.to_db(value.as({{ column[:type] }}))\n    end\n    {% end %}\n\n  \n"}},{"id":"param_key(key)-macro","html_id":"param_key(key)-macro","name":"param_key","doc":null,"summary":null,"abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":""}],"args_string":"(key)","location":null,"def":{"name":"param_key","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"      def self.param_key\n        \n{{ key.id.stringify }}\n\n      \nend\n    \n"}},{"id":"permit_columns(*attribute_names)-macro","html_id":"permit_columns(*attribute_names)-macro","name":"permit_columns","doc":null,"summary":null,"abstract":false,"args":[{"name":"attribute_names","doc":null,"default_value":"","external_name":"attribute_names","restriction":""}],"args_string":"(*attribute_names)","location":{"filename":"src/avram/save_operation.cr","line_number":226,"url":null},"def":{"name":"permit_columns","args":[{"name":"attribute_names","doc":null,"default_value":"","external_name":"attribute_names","restriction":""}],"double_splat":null,"splat_index":0,"block_arg":null,"visibility":"Public","body":"    \n{% for attribute_name in attribute_names %}\n      {% if attribute_name.is_a?(TypeDeclaration) %}\n        {% raise(\"Must use a Symbol or a bare word in 'permit_columns'. Instead, got: #{attribute_name}\\n\\nTry this...\\n\\n  ▸ permit_columns #{attribute_name.var}\\n\") %}\n      {% end %}\n      {% if attribute_name.is_a?(SymbolLiteral) || attribute_name.is_a?(Call) %}{% else %}\n        {% raise(\"Must use a Symbol or a bare word in 'permit_columns'. Instead, got: #{attribute_name}\\n\\nTry this...\\n\\n  ▸ Use a bare word (recommended): 'permit_columns name'\\n  ▸ Use a Symbol: 'permit_columns :name'\\n\") %}\n      {% end %}\n      {% if COLUMN_ATTRIBUTES.any? do |attribute|\n  attribute[:name].id == attribute_name.id\nend %}\n        def {{ attribute_name.id }}\n          _{{ attribute_name.id }}.permitted\n        end\n\n        @@permitted_param_keys << \"{{ attribute_name.id }}\"\n      {% else %}\n        {% raise(\"Can't permit '#{attribute_name}' because the column has not been defined on the model.\\n\\nTry this...\\n\\n  ▸ Make sure you spelled the column correctly.\\n  ▸ Add the column to the model if it doesn't exist.\\n  ▸ Use 'attribute' if you want an attribute that is not saved to the database.\\n\") %}\n      {% end %}\n    {% end %}\n\n  \n"}}],"types":[{"html_id":"avram/Avram/SaveOperation/SaveStatus","path":"Avram/SaveOperation/SaveStatus.html","kind":"enum","full_name":"Avram::SaveOperation::SaveStatus","name":"SaveStatus","abstract":false,"superclass":null,"ancestors":[{"html_id":"avram/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"avram/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"avram/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":true,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[{"id":"Saved","name":"Saved","value":"0","doc":null,"summary":null},{"id":"SaveFailed","name":"SaveFailed","value":"1","doc":null,"summary":null},{"id":"Unperformed","name":"Unperformed","value":"2","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Avram/SaveOperation","kind":"class","full_name":"Avram::SaveOperation(T)","name":"SaveOperation"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"save_failed?-instance-method","html_id":"save_failed?-instance-method","name":"save_failed?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/save_operation.cr","line_number":26,"url":null},"def":{"name":"save_failed?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == SaveFailed"}},{"id":"saved?-instance-method","html_id":"saved?-instance-method","name":"saved?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/save_operation.cr","line_number":25,"url":null},"def":{"name":"saved?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Saved"}},{"id":"unperformed?-instance-method","html_id":"unperformed?-instance-method","name":"unperformed?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/save_operation.cr","line_number":27,"url":null},"def":{"name":"unperformed?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Unperformed"}}],"macros":[],"types":[]}]},{"html_id":"avram/Avram/SaveOperationTemplate","path":"Avram/SaveOperationTemplate.html","kind":"class","full_name":"Avram::SaveOperationTemplate","name":"SaveOperationTemplate","abstract":false,"superclass":{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[{"id":"setup(type,columns,*args,**named_args)-macro","html_id":"setup(type,columns,*args,**named_args)-macro","name":"setup","doc":null,"summary":null,"abstract":false,"args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":""},{"name":"columns","doc":null,"default_value":"","external_name":"columns","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(type, columns, *args, **named_args)","location":{"filename":"src/avram/save_operation_template.cr","line_number":2,"url":null},"def":{"name":"setup","args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":""},{"name":"columns","doc":null,"default_value":"","external_name":"columns","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"named_args","doc":null,"default_value":"","external_name":"named_args","restriction":""},"splat_index":2,"block_arg":null,"visibility":"Public","body":"    \n# This makes it easy for plugins and extensions to use the base SaveOperation\n\n    def base_query_class : ::\n{{ type }}\n::BaseQuery.class\n      ::\n{{ type }}\n::BaseQuery\n    \nend\n\n    def save_operation_class : ::\n{{ type }}\n::SaveOperation.class\n      ::\n{{ type }}\n::SaveOperation\n    \nend\n\n    class ::\n{{ type }}\n::SaveOperation < Avram::SaveOperation(\n{{ type }}\n)\n      \n{% primary_key_type = type.resolve.constant(\"PRIMARY_KEY_TYPE\") %}\n\n      \n{% if primary_key_type.id == UUID.id %}\n        before_save set_uuid\n\n        def set_uuid\n          {% primary_key_name = type.resolve.constant(\"PRIMARY_KEY_NAME\") %}\n          {{ primary_key_name.id }}.value ||= UUID.random()\n        end\n      {% end %}\n\n\n      macro inherited\n        FOREIGN_KEY = \"\n{{ type.stringify.underscore.id }}\n_id\"\n      \nend\n\n      add_column_attributes(\n{{ columns }}\n)\n      add_cast_value_methods(\n{{ columns }}\n)\n    \nend\n  \n"}}],"types":[]},{"html_id":"avram/Avram/SchemaEnforcer","path":"Avram/SchemaEnforcer.html","kind":"module","full_name":"Avram::SchemaEnforcer","name":"SchemaEnforcer","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[{"id":"ALL_MODELS","name":"ALL_MODELS","value":"[] of Avram::Model.class","doc":null,"summary":null},{"id":"MODELS_TO_SKIP","name":"MODELS_TO_SKIP","value":"[] of String","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"avram/Avram/Model","kind":"class","full_name":"Avram::Model","name":"Model"}],"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":null,"summary":null,"class_methods":[{"id":"ensure_correct_column_mappings!-class-method","html_id":"ensure_correct_column_mappings!-class-method","name":"ensure_correct_column_mappings!","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/schema_enforcer.cr","line_number":22,"url":null},"def":{"name":"ensure_correct_column_mappings!","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"{% if !ALL_MODELS.empty? %}\n      ALL_MODELS.each do |model|\n        model.ensure_correct_column_mappings!\n      end\n    {% end %}"}}],"constructors":[],"instance_methods":[],"macros":[{"id":"setup(type,*args,**named_args)-macro","html_id":"setup(type,*args,**named_args)-macro","name":"setup","doc":null,"summary":null,"abstract":false,"args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(type, *args, **named_args)","location":{"filename":"src/avram/schema_enforcer.cr","line_number":8,"url":null},"def":{"name":"setup","args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"named_args","doc":null,"default_value":"","external_name":"named_args","restriction":""},"splat_index":1,"block_arg":null,"visibility":"Public","body":"    class_getter schema_enforcer_validations = [] of Avram::SchemaEnforcer::Validation\n\n    def self.ensure_correct_column_mappings!\n      return if Avram::SchemaEnforcer::MODELS_TO_SKIP.includes?(self.name)\n\n      schema_enforcer_validations.each(&.validate!)\n    \nend\n\n    \n{% if !type.resolve.abstract? %}\n      {% Avram::SchemaEnforcer::ALL_MODELS << type %}\n    {% end %}\n\n  \n"}},{"id":"skip_schema_enforcer-macro","html_id":"skip_schema_enforcer-macro","name":"skip_schema_enforcer","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","location":{"filename":"src/avram/schema_enforcer.cr","line_number":30,"url":null},"def":{"name":"skip_schema_enforcer","args":[],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    \n{% Avram::SchemaEnforcer::MODELS_TO_SKIP << @type.stringify %}\n\n  \n"}}],"types":[{"html_id":"avram/Avram/SchemaEnforcer/EnsureExistingTable","path":"Avram/SchemaEnforcer/EnsureExistingTable.html","kind":"class","full_name":"Avram::SchemaEnforcer::EnsureExistingTable","name":"EnsureExistingTable","abstract":false,"superclass":{"html_id":"avram/Avram/SchemaEnforcer/Validation","kind":"class","full_name":"Avram::SchemaEnforcer::Validation","name":"Validation"},"ancestors":[{"html_id":"avram/Avram/SchemaEnforcer/Validation","kind":"class","full_name":"Avram::SchemaEnforcer::Validation","name":"Validation"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Avram/SchemaEnforcer","kind":"module","full_name":"Avram::SchemaEnforcer","name":"SchemaEnforcer"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"validate!-instance-method","html_id":"validate!-instance-method","name":"validate!","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/schema_enforcer/ensure_existing_table.cr","line_number":2,"url":null},"def":{"name":"validate!","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if table_missing?\n  best_match = Levenshtein::Finder.find(table_name, database_info.table_names, tolerance: 2)\n  message = String.build do |string|\n    string << \"#{model_class.name.colorize.bold} wants to use the '#{table_name.colorize.bold}' table but it is missing.\\n\"\n    if best_match\n      string << \"\\nIf you meant for #{model_class.name.colorize.bold} to use the '#{best_match.colorize.yellow.bold}' table, try this...\\n\\n  ▸ Change the table name in #{model_class.name.colorize.bold}:\\n\\n      table :#{best_match.colorize.bold} do\\n        # ..columns\\n      end\\n\"\n    end\n    string << \"\\nIf you need to create the '#{table_name}' table...\\n\\n  ▸ Generate a migration:\\n\\n      lucky gen.migration Create#{Wordsmith::Inflector.pluralize(model_class.name)}\\n\\n  ▸ Create the table in the migration:\\n\\n      create table_for(#{model_class.name}) do/end\\n\"\n    string << \"\\nOr, you can skip schema checks for this model:\\n\\n    class #{model_class.name} < BaseModel\\n      # Great for models used in migrations, or for legacy schemas\\n      skip_schema_enforcer\\n    end\\n\\n\"\n  end\n  raise(Avram::SchemaMismatchError.new(message))\nend"}}],"macros":[],"types":[]},{"html_id":"avram/Avram/SchemaEnforcer/EnsureMatchingColumns","path":"Avram/SchemaEnforcer/EnsureMatchingColumns.html","kind":"class","full_name":"Avram::SchemaEnforcer::EnsureMatchingColumns","name":"EnsureMatchingColumns","abstract":false,"superclass":{"html_id":"avram/Avram/SchemaEnforcer/Validation","kind":"class","full_name":"Avram::SchemaEnforcer::Validation","name":"Validation"},"ancestors":[{"html_id":"avram/Avram/SchemaEnforcer/Validation","kind":"class","full_name":"Avram::SchemaEnforcer::Validation","name":"Validation"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Avram/SchemaEnforcer","kind":"module","full_name":"Avram::SchemaEnforcer","name":"SchemaEnforcer"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(model_class,check_required)-class-method","html_id":"new(model_class,check_required)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"model_class","doc":null,"default_value":"","external_name":"model_class","restriction":""},{"name":"check_required","doc":null,"default_value":"","external_name":"check_required","restriction":""}],"args_string":"(model_class, check_required)","args_html":"(model_class, check_required)","location":{"filename":"src/avram/schema_enforcer/ensure_matching_columns.cr","line_number":11,"url":null},"def":{"name":"new","args":[{"name":"model_class","doc":null,"default_value":"","external_name":"model_class","restriction":""},{"name":"check_required","doc":null,"default_value":"","external_name":"check_required","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(model_class, check_required)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(model_class)-class-method","html_id":"new(model_class)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"model_class","doc":null,"default_value":"","external_name":"model_class","restriction":""}],"args_string":"(model_class)","args_html":"(model_class)","location":{"filename":"src/avram/schema_enforcer/ensure_matching_columns.cr","line_number":7,"url":null},"def":{"name":"new","args":[{"name":"model_class","doc":null,"default_value":"","external_name":"model_class","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(model_class)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"validate!-instance-method","html_id":"validate!-instance-method","name":"validate!","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/schema_enforcer/ensure_matching_columns.cr","line_number":14,"url":null},"def":{"name":"validate!","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"model_class.columns.each do |attribute|\n  check_column_matches(attribute)\nend\nif matching_error?\n  message = (@missing_columns + @optional_attribute_errors) + @required_attribute_errors\n  raise(Avram::SchemaMismatchError.new(message.join(\"\\n\\n\")))\nend\n"}}],"macros":[],"types":[]},{"html_id":"avram/Avram/SchemaEnforcer/EnsureUUIDPrimaryKeyHasDefault","path":"Avram/SchemaEnforcer/EnsureUUIDPrimaryKeyHasDefault.html","kind":"class","full_name":"Avram::SchemaEnforcer::EnsureUUIDPrimaryKeyHasDefault","name":"EnsureUUIDPrimaryKeyHasDefault","abstract":false,"superclass":{"html_id":"avram/Avram/SchemaEnforcer/Validation","kind":"class","full_name":"Avram::SchemaEnforcer::Validation","name":"Validation"},"ancestors":[{"html_id":"avram/Avram/SchemaEnforcer/Validation","kind":"class","full_name":"Avram::SchemaEnforcer::Validation","name":"Validation"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Avram/SchemaEnforcer","kind":"module","full_name":"Avram::SchemaEnforcer","name":"SchemaEnforcer"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"has_primary_key?-instance-method","html_id":"has_primary_key?-instance-method","name":"has_primary_key?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/schema_enforcer/ensure_uuid_primary_key_has_default.cr","line_number":25,"url":null},"def":{"name":"has_primary_key?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"!model_class.primary_key_name.nil?"}},{"id":"missing_column_default?-instance-method","html_id":"missing_column_default?-instance-method","name":"missing_column_default?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/schema_enforcer/ensure_uuid_primary_key_has_default.cr","line_number":33,"url":null},"def":{"name":"missing_column_default?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"primary_key_info.column_default.nil?"}},{"id":"primary_key_info-instance-method","html_id":"primary_key_info-instance-method","name":"primary_key_info","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/schema_enforcer/ensure_uuid_primary_key_has_default.cr","line_number":37,"url":null},"def":{"name":"primary_key_info","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(table_info.column(model_class.primary_key_name.to_s)).not_nil!"}},{"id":"uuid_primary_key?-instance-method","html_id":"uuid_primary_key?-instance-method","name":"uuid_primary_key?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/schema_enforcer/ensure_uuid_primary_key_has_default.cr","line_number":29,"url":null},"def":{"name":"uuid_primary_key?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"primary_key_info.data_type == \"uuid\""}},{"id":"validate!-instance-method","html_id":"validate!-instance-method","name":"validate!","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/schema_enforcer/ensure_uuid_primary_key_has_default.cr","line_number":2,"url":null},"def":{"name":"validate!","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (has_primary_key? && uuid_primary_key?) && missing_column_default?\nelse\n  return\nend\nmessage = \"Primary key on the '#{table_name.colorize.bold}' table has the type set as uuid but does not have a default value.\\n\\nTo add a default value...\\n\\n  ▸ Generate a migration:\\n\\n      lucky gen.migration AddDefaultTo#{Wordsmith::Inflector.pluralize(model_class.name)}PrimaryKey\\n\\n  ▸ Enable a Postgres extension to generate uuids if one is not already available in the migration:\\n\\n      enable_extension \\\"uuid-ossp\\\" # https://www.postgresql.org/docs/current/uuid-ossp.html\\n\\n  ▸ Update the primary key column to have a default value in the migration:\\n\\n      execute(\\\"ALTER TABLE #{table_name.colorize.bold} ALTER COLUMN #{primary_key_info.column_name.colorize.bold} SET DEFAULT uuid_generate_v4();\\\")\"\nraise(Avram::SchemaMismatchError.new(message))\n"}}],"macros":[],"types":[]},{"html_id":"avram/Avram/SchemaEnforcer/Validation","path":"Avram/SchemaEnforcer/Validation.html","kind":"class","full_name":"Avram::SchemaEnforcer::Validation","name":"Validation","abstract":true,"superclass":{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"avram/Avram/SchemaEnforcer/EnsureExistingTable","kind":"class","full_name":"Avram::SchemaEnforcer::EnsureExistingTable","name":"EnsureExistingTable"},{"html_id":"avram/Avram/SchemaEnforcer/EnsureMatchingColumns","kind":"class","full_name":"Avram::SchemaEnforcer::EnsureMatchingColumns","name":"EnsureMatchingColumns"},{"html_id":"avram/Avram/SchemaEnforcer/EnsureUUIDPrimaryKeyHasDefault","kind":"class","full_name":"Avram::SchemaEnforcer::EnsureUUIDPrimaryKeyHasDefault","name":"EnsureUUIDPrimaryKeyHasDefault"}],"including_types":[],"namespace":{"html_id":"avram/Avram/SchemaEnforcer","kind":"module","full_name":"Avram::SchemaEnforcer","name":"SchemaEnforcer"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(model_class)-class-method","html_id":"new(model_class)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"model_class","doc":null,"default_value":"","external_name":"model_class","restriction":""}],"args_string":"(model_class)","args_html":"(model_class)","location":{"filename":"src/avram/schema_enforcer/validation.cr","line_number":4,"url":null},"def":{"name":"new","args":[{"name":"model_class","doc":null,"default_value":"","external_name":"model_class","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(model_class)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"validate!-instance-method","html_id":"validate!-instance-method","name":"validate!","doc":null,"summary":null,"abstract":true,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/schema_enforcer/validation.cr","line_number":7,"url":null},"def":{"name":"validate!","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}}],"macros":[],"types":[]}]},{"html_id":"avram/Avram/SchemaMismatchError","path":"Avram/SchemaMismatchError.html","kind":"class","full_name":"Avram::SchemaMismatchError","name":"SchemaMismatchError","abstract":false,"superclass":{"html_id":"avram/Avram/AvramError","kind":"class","full_name":"Avram::AvramError","name":"AvramError"},"ancestors":[{"html_id":"avram/Avram/AvramError","kind":"class","full_name":"Avram::AvramError","name":"AvramError"},{"html_id":"avram/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":"Raised by Avram::SchemaEnforcer when columns or tables don't match the database.","summary":"<p>Raised by Avram::SchemaEnforcer when columns or tables don't match the database.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"avram/Avram/SoftDelete","path":"Avram/SoftDelete.html","kind":"module","full_name":"Avram::SoftDelete","name":"SoftDelete","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"avram/Avram/SoftDelete/Model","path":"Avram/SoftDelete/Model.html","kind":"module","full_name":"Avram::SoftDelete::Model","name":"Model","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Avram/SoftDelete","kind":"module","full_name":"Avram::SoftDelete","name":"SoftDelete"},"doc":"  table do\n    column soft_deleted_at : Time?\n  end\nend\n```\n\nYou should also add the `Avram::SoftDeleteQuery` to your query\n\n```\nclass ArticleQuery < Article::BaseQuery\n  include Avram::SoftDelete::Query\nend\n```","summary":"<p>table do     column soft_deleted_at : Time?   end end <code></code>`</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"restore:self-instance-method","html_id":"restore:self-instance-method","name":"restore","doc":"Restore the record\n\nThis will set `soft_deleted_at` to `nil`","summary":"<p>Restore the record</p>","abstract":false,"args":[],"args_string":" : <span class=\"k\">self</span>","args_html":" : <span class=\"k\">self</span>","location":{"filename":"src/avram/soft_delete/model.cr","line_number":38,"url":null},"def":{"name":"restore","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"save_operation_class.update!(self, soft_deleted_at: nil)"}},{"id":"save_operation_class-instance-method","html_id":"save_operation_class-instance-method","name":"save_operation_class","doc":null,"summary":null,"abstract":true,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/soft_delete/model.cr","line_number":42,"url":null},"def":{"name":"save_operation_class","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"soft_delete:self-instance-method","html_id":"soft_delete:self-instance-method","name":"soft_delete","doc":"Soft delete the record\n\nThis will set `soft_deleted_at` to the current time (`Time.utc`)","summary":"<p>Soft delete the record</p>","abstract":false,"args":[],"args_string":" : <span class=\"k\">self</span>","args_html":" : <span class=\"k\">self</span>","location":{"filename":"src/avram/soft_delete/model.cr","line_number":31,"url":null},"def":{"name":"soft_delete","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"save_operation_class.update!(self, soft_deleted_at: Time.utc)"}},{"id":"soft_deleted?:Bool-instance-method","html_id":"soft_deleted?:Bool-instance-method","name":"soft_deleted?","doc":"Returns true if soft deleted, otherwise false\n\nIf the `soft_deleted_at` has a time value the record is \"soft deleted\".\nIf `soft_deleted_at` is `nil` the record has not been deleted yet.","summary":"<p>Returns true if soft deleted, otherwise false</p>","abstract":false,"args":[],"args_string":" : Bool","args_html":" : <a href=\"../../Bool.html\">Bool</a>","location":{"filename":"src/avram/soft_delete/model.cr","line_number":48,"url":null},"def":{"name":"soft_deleted?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"soft_deleted_at.present?"}},{"id":"soft_deleted_at:Time?-instance-method","html_id":"soft_deleted_at:Time?-instance-method","name":"soft_deleted_at","doc":null,"summary":null,"abstract":true,"args":[],"args_string":" : Time?","args_html":" : <a href=\"../../Time.html\">Time</a>?","location":{"filename":"src/avram/soft_delete/model.cr","line_number":52,"url":null},"def":{"name":"soft_deleted_at","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Time | ::Nil","visibility":"Public","body":""}}],"macros":[],"types":[]},{"html_id":"avram/Avram/SoftDelete/Query","path":"Avram/SoftDelete/Query.html","kind":"module","full_name":"Avram::SoftDelete::Query","name":"Query","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Avram/SoftDelete","kind":"module","full_name":"Avram::SoftDelete","name":"SoftDelete"},"doc":"Add methods for querying/updating soft deleted and kept records.\n\nFirst include the model module in your model: `Avram::SoftDelete::Model`\n\nThen add this module your query\n\n```\nclass ArticleQuery < Article::BaseQuery\n  include Avram::SoftDelete::Query\nend\n```","summary":"<p>Add methods for querying/updating soft deleted and kept records.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"only_kept-instance-method","html_id":"only_kept-instance-method","name":"only_kept","doc":"Only return kept records\n\nKept records are considered \"kept/not soft deleted\" if the\n`soft_deleted_at` column is `nil`","summary":"<p>Only return kept records</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/soft_delete/query.cr","line_number":17,"url":null},"def":{"name":"only_kept","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"reset_where(&.soft_deleted_at).soft_deleted_at.is_nil"}},{"id":"only_soft_deleted-instance-method","html_id":"only_soft_deleted-instance-method","name":"only_soft_deleted","doc":"Only return soft deleted records\n\nSoft deleted records are considered \"soft deleted\" if the\n`soft_deleted_at` column has a non-nil value","summary":"<p>Only return soft deleted records</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/soft_delete/query.cr","line_number":25,"url":null},"def":{"name":"only_soft_deleted","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"reset_where(&.soft_deleted_at).soft_deleted_at.is_not_nil"}},{"id":"restore:Int64-instance-method","html_id":"restore:Int64-instance-method","name":"restore","doc":"Bulk restore records\n\n## Example\n\nThis will restore `Article` records updated in the last week:\n\n```\nArticleQuery.new.updated_at.gt(1.week.ago).restore\n```","summary":"<p>Bulk restore records</p>","abstract":false,"args":[],"args_string":" : Int64","args_html":" : <a href=\"../../Int64.html\">Int64</a>","location":{"filename":"src/avram/soft_delete/query.cr","line_number":60,"url":null},"def":{"name":"restore","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int64","visibility":"Public","body":"only_soft_deleted.update(soft_deleted_at: nil)"}},{"id":"soft_delete-instance-method","html_id":"soft_delete-instance-method","name":"soft_delete","doc":"Bulk soft delete records\n\n## Example\n\nThis will soft delete all `Article` record older than 1 year:\n\n```\nArticleQuery.new.created_at.lt(1.year.ago).soft_delete\n```","summary":"<p>Bulk soft delete records</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/soft_delete/query.cr","line_number":47,"url":null},"def":{"name":"soft_delete","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"only_kept.update(soft_deleted_at: Time.utc)"}},{"id":"soft_deleted_at-instance-method","html_id":"soft_deleted_at-instance-method","name":"soft_deleted_at","doc":null,"summary":null,"abstract":true,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/soft_delete/query.cr","line_number":64,"url":null},"def":{"name":"soft_deleted_at","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"with_soft_deleted-instance-method","html_id":"with_soft_deleted-instance-method","name":"with_soft_deleted","doc":"Returns all records\n\nThis works be removing where clauses for the `soft_deleted_at` column.\nThat means you can do `MyQuery.new.only_kept.with_soft_deleted` and you\nwill get all records, not just the kept ones.","summary":"<p>Returns all records</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/soft_delete/query.cr","line_number":34,"url":null},"def":{"name":"with_soft_deleted","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"reset_where(&.soft_deleted_at)"}}],"macros":[],"types":[]}]},{"html_id":"avram/Avram/TableFor","path":"Avram/TableFor.html","kind":"module","full_name":"Avram::TableFor","name":"TableFor","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"avram/Avram/Migrator/StatementHelpers","kind":"module","full_name":"Avram::Migrator::StatementHelpers","name":"StatementHelpers"}],"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[{"id":"table_for(model)-macro","html_id":"table_for(model)-macro","name":"table_for","doc":"Returns a `Symbol` representing the table name\nof the `model` passed in.\ne.g. `User` => `:users`","summary":"<p>Returns a <code>Symbol</code> representing the table name of the <code>model</code> passed in.</p>","abstract":false,"args":[{"name":"model","doc":null,"default_value":"","external_name":"model","restriction":""}],"args_string":"(model)","location":{"filename":"src/avram/table_for.cr","line_number":5,"url":null},"def":{"name":"table_for","args":[{"name":"model","doc":null,"default_value":"","external_name":"model","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    :\n{{ run(\"../run_macros/infer_table_name.cr\", model.id) }}\n\n  \n"}}],"types":[]},{"html_id":"avram/Avram/Type","path":"Avram/Type.html","kind":"module","full_name":"Avram::Type","name":"Type","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"avram/Avram/Uploadable/Lucky","kind":"module","full_name":"Avram::Uploadable::Lucky","name":"Lucky"},{"html_id":"avram/Bool/Lucky","kind":"module","full_name":"Bool::Lucky","name":"Lucky"},{"html_id":"avram/Float64/Lucky","kind":"module","full_name":"Float64::Lucky","name":"Lucky"},{"html_id":"avram/Int16/Lucky","kind":"module","full_name":"Int16::Lucky","name":"Lucky"},{"html_id":"avram/Int32/Lucky","kind":"module","full_name":"Int32::Lucky","name":"Lucky"},{"html_id":"avram/Int64/Lucky","kind":"module","full_name":"Int64::Lucky","name":"Lucky"},{"html_id":"avram/JSON/Any/Lucky","kind":"module","full_name":"JSON::Any::Lucky","name":"Lucky"},{"html_id":"avram/String/Lucky","kind":"module","full_name":"String::Lucky","name":"Lucky"},{"html_id":"avram/Time/Lucky","kind":"module","full_name":"Time::Lucky","name":"Lucky"},{"html_id":"avram/UUID/Lucky","kind":"module","full_name":"UUID::Lucky","name":"Lucky"}],"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"from_db!(value)-instance-method","html_id":"from_db!(value)-instance-method","name":"from_db!","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(value)","args_html":"(value)","location":{"filename":"src/avram/type.cr","line_number":6,"url":null},"def":{"name":"from_db!","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"parse!(value)"}},{"id":"parse(value:Nil)-instance-method","html_id":"parse(value:Nil)-instance-method","name":"parse","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Nil"}],"args_string":"(value : Nil)","args_html":"(value : <a href=\"../Nil.html\">Nil</a>)","location":{"filename":"src/avram/type.cr","line_number":10,"url":null},"def":{"name":"parse","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SuccessfulCast(Nil).new(nil)"}},{"id":"parse(values:Array(String))-instance-method","html_id":"parse(values:Array(String))-instance-method","name":"parse","doc":null,"summary":null,"abstract":false,"args":[{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":"Array(String)"}],"args_string":"(values : Array(String))","args_html":"(values : <a href=\"../Array.html\">Array</a>(<a href=\"../String.html\">String</a>))","location":{"filename":"src/avram/type.cr","line_number":14,"url":null},"def":{"name":"parse","args":[{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":"Array(String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"casts = values.map do |value|\n  parse(value)\nend\nif casts.all? do |__arg0|\n  __arg0.is_a?(SuccessfulCast)\nend\n  values = casts.map do |c|\n    (c.as(SuccessfulCast)).value\n  end\n  parse(values)\nelse\n  FailedCast.new\nend\n"}},{"id":"parse!(value)-instance-method","html_id":"parse!(value)-instance-method","name":"parse!","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(value)","args_html":"(value)","location":{"filename":"src/avram/type.cr","line_number":24,"url":null},"def":{"name":"parse!","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"((parse(value)).as(SuccessfulCast)).value"}},{"id":"to_db(value:Nil)-instance-method","html_id":"to_db(value:Nil)-instance-method","name":"to_db","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Nil"}],"args_string":"(value : Nil)","args_html":"(value : <a href=\"../Nil.html\">Nil</a>)","location":{"filename":"src/avram/type.cr","line_number":28,"url":null},"def":{"name":"to_db","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"nil"}},{"id":"to_db!(value)-instance-method","html_id":"to_db!(value)-instance-method","name":"to_db!","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(value)","args_html":"(value)","location":{"filename":"src/avram/type.cr","line_number":32,"url":null},"def":{"name":"to_db!","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"parsed_value = parse!(value)\nto_db(parsed_value)\n"}}],"macros":[],"types":[{"html_id":"avram/Avram/Type/FailedCast","path":"Avram/Type/FailedCast.html","kind":"class","full_name":"Avram::Type::FailedCast","name":"FailedCast","abstract":false,"superclass":{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Avram/Type","kind":"module","full_name":"Avram::Type","name":"Type"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"value-instance-method","html_id":"value-instance-method","name":"value","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/type.cr","line_number":45,"url":null},"def":{"name":"value","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"nil"}}],"macros":[],"types":[]},{"html_id":"avram/Avram/Type/SuccessfulCast","path":"Avram/Type/SuccessfulCast.html","kind":"class","full_name":"Avram::Type::SuccessfulCast(T)","name":"SuccessfulCast","abstract":false,"superclass":{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Avram/Type","kind":"module","full_name":"Avram::Type","name":"Type"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(value:T)-class-method","html_id":"new(value:T)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"T"}],"args_string":"(value : T)","args_html":"(value : T)","location":{"filename":"src/avram/type.cr","line_number":40,"url":null},"def":{"name":"new","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = SuccessfulCast(T).allocate\n_.initialize(value)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"value-instance-method","html_id":"value-instance-method","name":"value","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/type.cr","line_number":38,"url":null},"def":{"name":"value","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@value"}}],"macros":[],"types":[]}]},{"html_id":"avram/Avram/UnsupportedQueryError","path":"Avram/UnsupportedQueryError.html","kind":"class","full_name":"Avram::UnsupportedQueryError","name":"UnsupportedQueryError","abstract":false,"superclass":{"html_id":"avram/Avram/AvramError","kind":"class","full_name":"Avram::AvramError","name":"AvramError"},"ancestors":[{"html_id":"avram/Avram/AvramError","kind":"class","full_name":"Avram::AvramError","name":"AvramError"},{"html_id":"avram/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":"Raised when an unimplemented or deprecated query is made.","summary":"<p>Raised when an unimplemented or deprecated query is made.</p>","class_methods":[],"constructors":[{"id":"new(message:String)-class-method","html_id":"new(message:String)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"}],"args_string":"(message : String)","args_html":"(message : <a href=\"../String.html\">String</a>)","location":{"filename":"src/avram/errors.cr","line_number":70,"url":null},"def":{"name":"new","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(message)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[],"macros":[],"types":[]},{"html_id":"avram/Avram/Uploadable","path":"Avram/Uploadable.html","kind":"module","full_name":"Avram::Uploadable","name":"Uploadable","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":null,"summary":null,"class_methods":[{"id":"adapter-class-method","html_id":"adapter-class-method","name":"adapter","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/uploadable.cr","line_number":9,"url":null},"def":{"name":"adapter","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Lucky"}}],"constructors":[],"instance_methods":[{"id":"blank?:Bool-instance-method","html_id":"blank?:Bool-instance-method","name":"blank?","doc":"This should test if the filename is a blank string.","summary":"<p>This should test if the filename is a blank string.</p>","abstract":true,"args":[],"args_string":" : Bool","args_html":" : <a href=\"../Bool.html\">Bool</a>","location":{"filename":"src/avram/uploadable.cr","line_number":7,"url":null},"def":{"name":"blank?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":""}},{"id":"filename:String-instance-method","html_id":"filename:String-instance-method","name":"filename","doc":"Typically, this should return the filename as found in the `metadata`.","summary":"<p>Typically, this should return the filename as found in the <code><a href=\"../Avram/Uploadable.html#metadata:HTTP::FormData::FileMetadata-instance-method\">#metadata</a></code>.</p>","abstract":true,"args":[],"args_string":" : String","args_html":" : <a href=\"../String.html\">String</a>","location":{"filename":"src/avram/uploadable.cr","line_number":5,"url":null},"def":{"name":"filename","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":""}},{"id":"metadata:HTTP::FormData::FileMetadata-instance-method","html_id":"metadata:HTTP::FormData::FileMetadata-instance-method","name":"metadata","doc":null,"summary":null,"abstract":true,"args":[],"args_string":" : HTTP::FormData::FileMetadata","args_html":" : HTTP::FormData::FileMetadata","location":{"filename":"src/avram/uploadable.cr","line_number":3,"url":null},"def":{"name":"metadata","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"HTTP::FormData::FileMetadata","visibility":"Public","body":""}},{"id":"tempfile:File-instance-method","html_id":"tempfile:File-instance-method","name":"tempfile","doc":null,"summary":null,"abstract":true,"args":[],"args_string":" : File","args_html":" : File","location":{"filename":"src/avram/uploadable.cr","line_number":2,"url":null},"def":{"name":"tempfile","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"File","visibility":"Public","body":""}}],"macros":[],"types":[{"html_id":"avram/Avram/Uploadable/Lucky","path":"Avram/Uploadable/Lucky.html","kind":"module","full_name":"Avram::Uploadable::Lucky","name":"Lucky","abstract":false,"superclass":null,"ancestors":[{"html_id":"avram/Avram/Type","kind":"module","full_name":"Avram::Type","name":"Type"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[{"html_id":"avram/Avram/Type","kind":"module","full_name":"Avram::Type","name":"Type"}],"extended_modules":[{"html_id":"avram/Avram/Uploadable/Lucky","kind":"module","full_name":"Avram::Uploadable::Lucky","name":"Lucky"}],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Avram/Uploadable","kind":"module","full_name":"Avram::Uploadable","name":"Uploadable"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"parse(value:Avram::Uploadable)-instance-method","html_id":"parse(value:Avram::Uploadable)-instance-method","name":"parse","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Avram::Uploadable"}],"args_string":"(value : Avram::Uploadable)","args_html":"(value : <a href=\"../../Avram/Uploadable.html\">Avram::Uploadable</a>)","location":{"filename":"src/avram/uploadable.cr","line_number":16,"url":null},"def":{"name":"parse","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Avram::Uploadable"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SuccessfulCast(Avram::Uploadable).new(value)"}},{"id":"parse(values:Array(Avram::Uploadable))-instance-method","html_id":"parse(values:Array(Avram::Uploadable))-instance-method","name":"parse","doc":null,"summary":null,"abstract":false,"args":[{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":"Array(Avram::Uploadable)"}],"args_string":"(values : Array(Avram::Uploadable))","args_html":"(values : <a href=\"../../Array.html\">Array</a>(<a href=\"../../Avram/Uploadable.html\">Avram::Uploadable</a>))","location":{"filename":"src/avram/uploadable.cr","line_number":20,"url":null},"def":{"name":"parse","args":[{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":"Array(Avram::Uploadable)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SuccessfulCast(Array(Avram::Uploadable)).new(values)"}},{"id":"parse(value:String?)-instance-method","html_id":"parse(value:String?)-instance-method","name":"parse","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"String | ::Nil"}],"args_string":"(value : String?)","args_html":"(value : <a href=\"../../String.html\">String</a>?)","location":{"filename":"src/avram/uploadable.cr","line_number":24,"url":null},"def":{"name":"parse","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"FailedCast.new"}}],"macros":[],"types":[]}]},{"html_id":"avram/Avram/Validations","path":"Avram/Validations.html","kind":"module","full_name":"Avram::Validations","name":"Validations","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[{"html_id":"avram/Avram/Validations","kind":"module","full_name":"Avram::Validations","name":"Validations"}],"subclasses":[],"including_types":[{"html_id":"avram/Avram/DeleteOperation","kind":"class","full_name":"Avram::DeleteOperation(T)","name":"DeleteOperation"},{"html_id":"avram/Avram/Operation","kind":"class","full_name":"Avram::Operation","name":"Operation"},{"html_id":"avram/Avram/SaveOperation","kind":"class","full_name":"Avram::SaveOperation(T)","name":"SaveOperation"}],"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":"A number of methods for validating Avram::Attributes\n\nThis module is included in `Avram::Operation` and `Avram::SaveOperation`","summary":"<p>A number of methods for validating Avram::Attributes</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"validate_acceptance_of(attribute:Avram::Attribute(Bool),message:Avram::Attribute::ErrorMessage=&quot;mustbeaccepted&quot;)-instance-method","html_id":"validate_acceptance_of(attribute:Avram::Attribute(Bool),message:Avram::Attribute::ErrorMessage=&quot;mustbeaccepted&quot;)-instance-method","name":"validate_acceptance_of","doc":"Validate whether an attribute was accepted (`true`)\n\nThis validation is only for Boolean Attributes. The attribute will be marked\nas invalid for any value other than `true`.","summary":"<p>Validate whether an attribute was accepted (<code>true</code>)</p>","abstract":false,"args":[{"name":"attribute","doc":null,"default_value":"","external_name":"attribute","restriction":"Avram::Attribute(Bool)"},{"name":"message","doc":null,"default_value":"\"must be accepted\"","external_name":"message","restriction":"Avram::Attribute::ErrorMessage"}],"args_string":"(attribute : Avram::Attribute(Bool), message : Avram::Attribute::ErrorMessage = <span class=\"s\">&quot;must be accepted&quot;</span>)","args_html":"(attribute : <a href=\"../Avram/Attribute.html\">Avram::Attribute</a>(<a href=\"../Bool.html\">Bool</a>), message : <a href=\"../Avram/Attribute/ErrorMessage.html\">Avram::Attribute::ErrorMessage</a> = <span class=\"s\">&quot;must be accepted&quot;</span>)","location":{"filename":"src/avram/validations.cr","line_number":61,"url":null},"def":{"name":"validate_acceptance_of","args":[{"name":"attribute","doc":null,"default_value":"","external_name":"attribute","restriction":"Avram::Attribute(Bool)"},{"name":"message","doc":null,"default_value":"\"must be accepted\"","external_name":"message","restriction":"Avram::Attribute::ErrorMessage"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if attribute.value != true\n  attribute.add_error(message)\nend"}},{"id":"validate_at_most_one_filled(*attributes,message:Avram::Attribute::ErrorMessage=&quot;mustbeblank&quot;)-instance-method","html_id":"validate_at_most_one_filled(*attributes,message:Avram::Attribute::ErrorMessage=&quot;mustbeblank&quot;)-instance-method","name":"validate_at_most_one_filled","doc":"Validates that at most one attribute is filled\n\nIf more than one attribute is filled it will mark all but the first filled\nfield invalid.","summary":"<p>Validates that at most one attribute is filled</p>","abstract":false,"args":[{"name":"attributes","doc":null,"default_value":"","external_name":"attributes","restriction":""},{"name":"message","doc":null,"default_value":"\"must be blank\"","external_name":"message","restriction":"Avram::Attribute::ErrorMessage"}],"args_string":"(*attributes, message : Avram::Attribute::ErrorMessage = <span class=\"s\">&quot;must be blank&quot;</span>)","args_html":"(*attributes, message : <a href=\"../Avram/Attribute/ErrorMessage.html\">Avram::Attribute::ErrorMessage</a> = <span class=\"s\">&quot;must be blank&quot;</span>)","location":{"filename":"src/avram/validations.cr","line_number":13,"url":null},"def":{"name":"validate_at_most_one_filled","args":[{"name":"attributes","doc":null,"default_value":"","external_name":"attributes","restriction":""},{"name":"message","doc":null,"default_value":"\"must be blank\"","external_name":"message","restriction":"Avram::Attribute::ErrorMessage"}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"present_attributes = attributes.reject do |__arg0|\n  __arg0.value.blank?\nend\nif present_attributes.size > 1\n  (present_attributes.skip(1)).each(&.add_error(message))\nend\n"}},{"id":"validate_confirmation_of(attribute:Avram::Attribute(T),withconfirmation_attribute:Avram::Attribute(T),message:Avram::Attribute::ErrorMessage=&quot;mustmatch&quot;)forallT-instance-method","html_id":"validate_confirmation_of(attribute:Avram::Attribute(T),withconfirmation_attribute:Avram::Attribute(T),message:Avram::Attribute::ErrorMessage=&quot;mustmatch&quot;)forallT-instance-method","name":"validate_confirmation_of","doc":"Validates that the values of two attributes are the same\n\nTakes two attributes and if the values are different the second attribute\n(`with`/`confirmation_attribute`) will be marked as invalid\n\nExample:\n\n```\nvalidate_confirmation_of password, with: password_confirmation\n```\n\nIf `password_confirmation` does not match, it will be marked invalid.","summary":"<p>Validates that the values of two attributes are the same</p>","abstract":false,"args":[{"name":"attribute","doc":null,"default_value":"","external_name":"attribute","restriction":"Avram::Attribute(T)"},{"name":"confirmation_attribute","doc":null,"default_value":"","external_name":"with","restriction":"Avram::Attribute(T)"},{"name":"message","doc":null,"default_value":"\"must match\"","external_name":"message","restriction":"Avram::Attribute::ErrorMessage"}],"args_string":"(attribute : Avram::Attribute(T), with confirmation_attribute : Avram::Attribute(T), message : Avram::Attribute::ErrorMessage = <span class=\"s\">&quot;must match&quot;</span>) forall T","args_html":"(attribute : <a href=\"../Avram/Attribute.html\">Avram::Attribute</a>(T), with confirmation_attribute : <a href=\"../Avram/Attribute.html\">Avram::Attribute</a>(T), message : <a href=\"../Avram/Attribute/ErrorMessage.html\">Avram::Attribute::ErrorMessage</a> = <span class=\"s\">&quot;must match&quot;</span>) forall T","location":{"filename":"src/avram/validations.cr","line_number":79,"url":null},"def":{"name":"validate_confirmation_of","args":[{"name":"attribute","doc":null,"default_value":"","external_name":"attribute","restriction":"Avram::Attribute(T)"},{"name":"confirmation_attribute","doc":null,"default_value":"","external_name":"with","restriction":"Avram::Attribute(T)"},{"name":"message","doc":null,"default_value":"\"must match\"","external_name":"message","restriction":"Avram::Attribute::ErrorMessage"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if attribute.value != confirmation_attribute.value\n  confirmation_attribute.add_error(message)\nend"}},{"id":"validate_exactly_one_filled(*attributes,message:Avram::Attribute::ErrorMessage=&quot;atleastonemustbefilled&quot;)-instance-method","html_id":"validate_exactly_one_filled(*attributes,message:Avram::Attribute::ErrorMessage=&quot;atleastonemustbefilled&quot;)-instance-method","name":"validate_exactly_one_filled","doc":"Validates that at exactly one attribute is filled\n\nThis validation is used by `Avram::Polymorphic.polymorphic` to ensure\nthat a required polymorphic association is set.\n\nIf more than one attribute is filled it will mark all but the first filled\nfield invalid.\n\nIf no field is filled, the first field will be marked as invalid.","summary":"<p>Validates that at exactly one attribute is filled</p>","abstract":false,"args":[{"name":"attributes","doc":null,"default_value":"","external_name":"attributes","restriction":""},{"name":"message","doc":null,"default_value":"\"at least one must be filled\"","external_name":"message","restriction":"Avram::Attribute::ErrorMessage"}],"args_string":"(*attributes, message : Avram::Attribute::ErrorMessage = <span class=\"s\">&quot;at least one must be filled&quot;</span>)","args_html":"(*attributes, message : <a href=\"../Avram/Attribute/ErrorMessage.html\">Avram::Attribute::ErrorMessage</a> = <span class=\"s\">&quot;at least one must be filled&quot;</span>)","location":{"filename":"src/avram/validations.cr","line_number":30,"url":null},"def":{"name":"validate_exactly_one_filled","args":[{"name":"attributes","doc":null,"default_value":"","external_name":"attributes","restriction":""},{"name":"message","doc":null,"default_value":"\"at least one must be filled\"","external_name":"message","restriction":"Avram::Attribute::ErrorMessage"}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"validate_at_most_one_filled(*attributes)\npresent_attributes = attributes.reject do |__arg2|\n  __arg2.value.blank?\nend\nif present_attributes.size.zero?\n  attributes.first.add_error(message)\nend\n"}},{"id":"validate_inclusion_of(attribute:Avram::Attribute(T),inallowed_values:Enumerable(T),message:Avram::Attribute::ErrorMessage=&quot;isinvalid&quot;,allow_nil:Bool=false)forallT-instance-method","html_id":"validate_inclusion_of(attribute:Avram::Attribute(T),inallowed_values:Enumerable(T),message:Avram::Attribute::ErrorMessage=&quot;isinvalid&quot;,allow_nil:Bool=false)forallT-instance-method","name":"validate_inclusion_of","doc":"Validates that the attribute value is in a list of allowed values\n\n```\nvalidate_inclusion_of state, in: [\"NY\", \"MA\"]\n```\n\nThis will mark `state` as invalid unless the value is `\"NY\"`, or `\"MA\"`.","summary":"<p>Validates that the attribute value is in a list of allowed values</p>","abstract":false,"args":[{"name":"attribute","doc":null,"default_value":"","external_name":"attribute","restriction":"Avram::Attribute(T)"},{"name":"allowed_values","doc":null,"default_value":"","external_name":"in","restriction":"Enumerable(T)"},{"name":"message","doc":null,"default_value":"\"is invalid\"","external_name":"message","restriction":"Avram::Attribute::ErrorMessage"},{"name":"allow_nil","doc":null,"default_value":"false","external_name":"allow_nil","restriction":"Bool"}],"args_string":"(attribute : Avram::Attribute(T), in allowed_values : Enumerable(T), message : Avram::Attribute::ErrorMessage = <span class=\"s\">&quot;is invalid&quot;</span>, allow_nil : Bool = <span class=\"n\">false</span>) forall T","args_html":"(attribute : <a href=\"../Avram/Attribute.html\">Avram::Attribute</a>(T), in allowed_values : Enumerable(T), message : <a href=\"../Avram/Attribute/ErrorMessage.html\">Avram::Attribute::ErrorMessage</a> = <span class=\"s\">&quot;is invalid&quot;</span>, allow_nil : <a href=\"../Bool.html\">Bool</a> = <span class=\"n\">false</span>) forall T","location":{"filename":"src/avram/validations.cr","line_number":96,"url":null},"def":{"name":"validate_inclusion_of","args":[{"name":"attribute","doc":null,"default_value":"","external_name":"attribute","restriction":"Avram::Attribute(T)"},{"name":"allowed_values","doc":null,"default_value":"","external_name":"in","restriction":"Enumerable(T)"},{"name":"message","doc":null,"default_value":"\"is invalid\"","external_name":"message","restriction":"Avram::Attribute::ErrorMessage"},{"name":"allow_nil","doc":null,"default_value":"false","external_name":"allow_nil","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if allowed_values.includes?(attribute.value)\nelse\n  if allow_nil && attribute.value.nil?\n  else\n    attribute.add_error(message)\n  end\nend"}},{"id":"validate_numeric(attribute:Avram::Attribute(Number),greater_than=nil,less_than=nil,allow_nil:Bool=false)-instance-method","html_id":"validate_numeric(attribute:Avram::Attribute(Number),greater_than=nil,less_than=nil,allow_nil:Bool=false)-instance-method","name":"validate_numeric","doc":"Validate a number is `greater_than` and/or `less_than`\n\n```\nvalidate_numeric age, greater_than: 18\nvalidate_numeric count, greater_than: 0, less_than: 1200\n```","summary":"<p>Validate a number is <code>greater_than</code> and/or <code>less_than</code></p>","abstract":false,"args":[{"name":"attribute","doc":null,"default_value":"","external_name":"attribute","restriction":"Avram::Attribute(Number)"},{"name":"greater_than","doc":null,"default_value":"nil","external_name":"greater_than","restriction":""},{"name":"less_than","doc":null,"default_value":"nil","external_name":"less_than","restriction":""},{"name":"allow_nil","doc":null,"default_value":"false","external_name":"allow_nil","restriction":"Bool"}],"args_string":"(attribute : Avram::Attribute(Number), greater_than = <span class=\"n\">nil</span>, less_than = <span class=\"n\">nil</span>, allow_nil : Bool = <span class=\"n\">false</span>)","args_html":"(attribute : <a href=\"../Avram/Attribute.html\">Avram::Attribute</a>(Number), greater_than = <span class=\"n\">nil</span>, less_than = <span class=\"n\">nil</span>, allow_nil : <a href=\"../Bool.html\">Bool</a> = <span class=\"n\">false</span>)","location":{"filename":"src/avram/validations.cr","line_number":161,"url":null},"def":{"name":"validate_numeric","args":[{"name":"attribute","doc":null,"default_value":"","external_name":"attribute","restriction":"Avram::Attribute(Number)"},{"name":"greater_than","doc":null,"default_value":"nil","external_name":"greater_than","restriction":""},{"name":"less_than","doc":null,"default_value":"nil","external_name":"less_than","restriction":""},{"name":"allow_nil","doc":null,"default_value":"false","external_name":"allow_nil","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (greater_than && less_than) && greater_than > less_than\n  raise(ImpossibleValidation.new(attribute: attribute.name, message: \"number greater than #{greater_than} but less than #{less_than}\"))\nend\nnumber = attribute.value\nif number.nil?\n  if allow_nil\n  else\n    attribute.add_error(\"is nil\")\n  end\n  return\nend\nif greater_than && number < greater_than\n  attribute.add_error(\"is too small\")\nend\nif less_than && number > less_than\n  attribute.add_error(\"is too large\")\nend\n"}},{"id":"validate_required(*attributes,message:Avram::Attribute::ErrorMessage=&quot;isrequired&quot;)-instance-method","html_id":"validate_required(*attributes,message:Avram::Attribute::ErrorMessage=&quot;isrequired&quot;)-instance-method","name":"validate_required","doc":"Validates that the passed in attributes have values\n\nYou can pass in one or more attributes at a time. The attribute will be\nmarked as invalid if the value is `nil`, or \"blank\" (empty strings or strings with just whitespace)\n\n`false` is not considered invalid.\n\n```\nvalidate_required name, age, email\n```","summary":"<p>Validates that the passed in attributes have values</p>","abstract":false,"args":[{"name":"attributes","doc":null,"default_value":"","external_name":"attributes","restriction":""},{"name":"message","doc":null,"default_value":"\"is required\"","external_name":"message","restriction":"Avram::Attribute::ErrorMessage"}],"args_string":"(*attributes, message : Avram::Attribute::ErrorMessage = <span class=\"s\">&quot;is required&quot;</span>)","args_html":"(*attributes, message : <a href=\"../Avram/Attribute/ErrorMessage.html\">Avram::Attribute::ErrorMessage</a> = <span class=\"s\">&quot;is required&quot;</span>)","location":{"filename":"src/avram/validations.cr","line_number":49,"url":null},"def":{"name":"validate_required","args":[{"name":"attributes","doc":null,"default_value":"","external_name":"attributes","restriction":""},{"name":"message","doc":null,"default_value":"\"is required\"","external_name":"message","restriction":"Avram::Attribute::ErrorMessage"}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"attributes.each do |attribute|\n  if attribute.value.blank_for_validates_required?\n    attribute.add_error(message)\n  end\nend"}},{"id":"validate_size_of(attribute:Avram::Attribute(String),min=nil,max=nil,allow_nil:Bool=false)-instance-method","html_id":"validate_size_of(attribute:Avram::Attribute(String),min=nil,max=nil,allow_nil:Bool=false)-instance-method","name":"validate_size_of","doc":"Validate the size of a `String` is within a `min` and/or `max`\n\n```\nvalidate_size_of feedback, min: 18, max: 100\nvalidate_size_of password, min: 12\n```","summary":"<p>Validate the size of a <code><a href=\"../String.html\">String</a></code> is within a <code>min</code> and/or <code>max</code></p>","abstract":false,"args":[{"name":"attribute","doc":null,"default_value":"","external_name":"attribute","restriction":"Avram::Attribute(String)"},{"name":"min","doc":null,"default_value":"nil","external_name":"min","restriction":""},{"name":"max","doc":null,"default_value":"nil","external_name":"max","restriction":""},{"name":"allow_nil","doc":null,"default_value":"false","external_name":"allow_nil","restriction":"Bool"}],"args_string":"(attribute : Avram::Attribute(String), min = <span class=\"n\">nil</span>, max = <span class=\"n\">nil</span>, allow_nil : Bool = <span class=\"n\">false</span>)","args_html":"(attribute : <a href=\"../Avram/Attribute.html\">Avram::Attribute</a>(<a href=\"../String.html\">String</a>), min = <span class=\"n\">nil</span>, max = <span class=\"n\">nil</span>, allow_nil : <a href=\"../Bool.html\">Bool</a> = <span class=\"n\">false</span>)","location":{"filename":"src/avram/validations.cr","line_number":130,"url":null},"def":{"name":"validate_size_of","args":[{"name":"attribute","doc":null,"default_value":"","external_name":"attribute","restriction":"Avram::Attribute(String)"},{"name":"min","doc":null,"default_value":"nil","external_name":"min","restriction":""},{"name":"max","doc":null,"default_value":"nil","external_name":"max","restriction":""},{"name":"allow_nil","doc":null,"default_value":"false","external_name":"allow_nil","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if ((!min.nil?) && (!max.nil?)) && min > max\n  raise(ImpossibleValidation.new(attribute: attribute.name, message: \"size greater than #{min} but less than #{max}\"))\nend\nif allow_nil && attribute.value.nil?\nelse\n  size = attribute.value.to_s.size\n  if (!min.nil?) && size < min\n    attribute.add_error(\"is too short\")\n  end\n  if (!max.nil?) && size > max\n    attribute.add_error(\"is too long\")\n  end\nend\n"}},{"id":"validate_size_of(attribute:Avram::Attribute(String),*,isexact_size,message:Avram::Attribute::ErrorMessage=&quot;isinvalid&quot;,allow_nil:Bool=false)-instance-method","html_id":"validate_size_of(attribute:Avram::Attribute(String),*,isexact_size,message:Avram::Attribute::ErrorMessage=&quot;isinvalid&quot;,allow_nil:Bool=false)-instance-method","name":"validate_size_of","doc":"Validate the size of a `String` is exactly a certain size\n\n```\nvalidate_size_of api_key, is: 32\n```","summary":"<p>Validate the size of a <code><a href=\"../String.html\">String</a></code> is exactly a certain size</p>","abstract":false,"args":[{"name":"attribute","doc":null,"default_value":"","external_name":"attribute","restriction":"Avram::Attribute(String)"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"exact_size","doc":null,"default_value":"","external_name":"is","restriction":""},{"name":"message","doc":null,"default_value":"\"is invalid\"","external_name":"message","restriction":"Avram::Attribute::ErrorMessage"},{"name":"allow_nil","doc":null,"default_value":"false","external_name":"allow_nil","restriction":"Bool"}],"args_string":"(attribute : Avram::Attribute(String), *, is exact_size, message : Avram::Attribute::ErrorMessage = <span class=\"s\">&quot;is invalid&quot;</span>, allow_nil : Bool = <span class=\"n\">false</span>)","args_html":"(attribute : <a href=\"../Avram/Attribute.html\">Avram::Attribute</a>(<a href=\"../String.html\">String</a>), *, is exact_size, message : <a href=\"../Avram/Attribute/ErrorMessage.html\">Avram::Attribute::ErrorMessage</a> = <span class=\"s\">&quot;is invalid&quot;</span>, allow_nil : <a href=\"../Bool.html\">Bool</a> = <span class=\"n\">false</span>)","location":{"filename":"src/avram/validations.cr","line_number":112,"url":null},"def":{"name":"validate_size_of","args":[{"name":"attribute","doc":null,"default_value":"","external_name":"attribute","restriction":"Avram::Attribute(String)"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"exact_size","doc":null,"default_value":"","external_name":"is","restriction":""},{"name":"message","doc":null,"default_value":"\"is invalid\"","external_name":"message","restriction":"Avram::Attribute::ErrorMessage"},{"name":"allow_nil","doc":null,"default_value":"false","external_name":"allow_nil","restriction":"Bool"}],"double_splat":null,"splat_index":1,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if attribute.value.to_s.size != exact_size\n  if allow_nil && attribute.value.nil?\n  else\n    attribute.add_error(message)\n  end\nend"}}],"macros":[],"types":[]},{"html_id":"avram/Avram/Where","path":"Avram/Where.html","kind":"module","full_name":"Avram::Where","name":"Where","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"avram/Avram/Where/Condition","path":"Avram/Where/Condition.html","kind":"class","full_name":"Avram::Where::Condition","name":"Condition","abstract":true,"superclass":{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"avram/Avram/Where/Raw","kind":"class","full_name":"Avram::Where::Raw","name":"Raw"},{"html_id":"avram/Avram/Where/SqlClause","kind":"class","full_name":"Avram::Where::SqlClause","name":"SqlClause"}],"including_types":[],"namespace":{"html_id":"avram/Avram/Where","kind":"module","full_name":"Avram::Where","name":"Where"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"clone-instance-method","html_id":"clone-instance-method","name":"clone","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/where.cr","line_number":21,"url":null},"def":{"name":"clone","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self"}},{"id":"conjunction:Conjunction-instance-method","html_id":"conjunction:Conjunction-instance-method","name":"conjunction","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Conjunction","args_html":" : <a href=\"../../Avram/Where/Conjunction.html\">Conjunction</a>","location":{"filename":"src/avram/where.cr","line_number":17,"url":null},"def":{"name":"conjunction","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Conjunction","visibility":"Public","body":"@conjunction"}},{"id":"conjunction=(conjunction:Conjunction)-instance-method","html_id":"conjunction=(conjunction:Conjunction)-instance-method","name":"conjunction=","doc":null,"summary":null,"abstract":false,"args":[{"name":"conjunction","doc":null,"default_value":"","external_name":"conjunction","restriction":"Conjunction"}],"args_string":"(conjunction : Conjunction)","args_html":"(conjunction : <a href=\"../../Avram/Where/Conjunction.html\">Conjunction</a>)","location":{"filename":"src/avram/where.cr","line_number":17,"url":null},"def":{"name":"conjunction=","args":[{"name":"conjunction","doc":null,"default_value":"","external_name":"conjunction","restriction":"Conjunction"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@conjunction = conjunction"}},{"id":"prepare(placeholder_supplier:Proc(String)):String-instance-method","html_id":"prepare(placeholder_supplier:Proc(String)):String-instance-method","name":"prepare","doc":null,"summary":null,"abstract":true,"args":[{"name":"placeholder_supplier","doc":null,"default_value":"","external_name":"placeholder_supplier","restriction":"Proc(String)"}],"args_string":"(placeholder_supplier : Proc(String)) : String","args_html":"(placeholder_supplier : Proc(<a href=\"../../String.html\">String</a>)) : <a href=\"../../String.html\">String</a>","location":{"filename":"src/avram/where.cr","line_number":19,"url":null},"def":{"name":"prepare","args":[{"name":"placeholder_supplier","doc":null,"default_value":"","external_name":"placeholder_supplier","restriction":"Proc(String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":""}}],"macros":[],"types":[]},{"html_id":"avram/Avram/Where/Conjunction","path":"Avram/Where/Conjunction.html","kind":"enum","full_name":"Avram::Where::Conjunction","name":"Conjunction","abstract":false,"superclass":null,"ancestors":[{"html_id":"avram/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"avram/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"avram/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":true,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[{"id":"And","name":"And","value":"0","doc":null,"summary":null},{"id":"Or","name":"Or","value":"1","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Avram/Where","kind":"module","full_name":"Avram::Where","name":"Where"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"and?-instance-method","html_id":"and?-instance-method","name":"and?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/where.cr","line_number":3,"url":null},"def":{"name":"and?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == And"}},{"id":"or?-instance-method","html_id":"or?-instance-method","name":"or?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/where.cr","line_number":4,"url":null},"def":{"name":"or?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Or"}},{"id":"to_s-instance-method","html_id":"to_s-instance-method","name":"to_s","doc":"Returns a `String` representation of this enum member.\nIn the case of regular enums, this is just the name of the member.\nIn the case of flag enums, it's the names joined by vertical bars, or \"None\",\nif the value is zero.\n\nIf an enum's value doesn't match a member's value, the raw value\nis returned as a string.\n\n```\nColor::Red.to_s                     # => \"Red\"\nIOMode::None.to_s                   # => \"None\"\n(IOMode::Read | IOMode::Write).to_s # => \"Read | Write\"\n\nColor.new(10).to_s # => \"10\"\n```","summary":"<p>Returns a <code><a href=\"../../String.html\">String</a></code> representation of this enum member.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/where.cr","line_number":6,"url":null},"def":{"name":"to_s","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"case self\nwhen .and?\n  \"AND\"\nwhen .or?\n  \"OR\"\nend"}}],"macros":[],"types":[]},{"html_id":"avram/Avram/Where/Equal","path":"Avram/Where/Equal.html","kind":"class","full_name":"Avram::Where::Equal","name":"Equal","abstract":false,"superclass":{"html_id":"avram/Avram/Where/ValueHoldingSqlClause","kind":"class","full_name":"Avram::Where::ValueHoldingSqlClause","name":"ValueHoldingSqlClause"},"ancestors":[{"html_id":"avram/Avram/Where/ValueHoldingSqlClause","kind":"class","full_name":"Avram::Where::ValueHoldingSqlClause","name":"ValueHoldingSqlClause"},{"html_id":"avram/Avram/Where/SqlClause","kind":"class","full_name":"Avram::Where::SqlClause","name":"SqlClause"},{"html_id":"avram/Avram/Where/Condition","kind":"class","full_name":"Avram::Where::Condition","name":"Condition"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Avram/Where","kind":"module","full_name":"Avram::Where","name":"Where"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"negated:NotEqual-instance-method","html_id":"negated:NotEqual-instance-method","name":"negated","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : NotEqual","args_html":" : <a href=\"../../Avram/Where/NotEqual.html\">NotEqual</a>","location":{"filename":"src/avram/where.cr","line_number":78,"url":null},"def":{"name":"negated","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"NotEqual","visibility":"Public","body":"NotEqual.new(column, value)"}},{"id":"operator:String-instance-method","html_id":"operator:String-instance-method","name":"operator","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","args_html":" : <a href=\"../../String.html\">String</a>","location":{"filename":"src/avram/where.cr","line_number":74,"url":null},"def":{"name":"operator","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"\"=\""}}],"macros":[],"types":[]},{"html_id":"avram/Avram/Where/GreaterThan","path":"Avram/Where/GreaterThan.html","kind":"class","full_name":"Avram::Where::GreaterThan","name":"GreaterThan","abstract":false,"superclass":{"html_id":"avram/Avram/Where/ValueHoldingSqlClause","kind":"class","full_name":"Avram::Where::ValueHoldingSqlClause","name":"ValueHoldingSqlClause"},"ancestors":[{"html_id":"avram/Avram/Where/ValueHoldingSqlClause","kind":"class","full_name":"Avram::Where::ValueHoldingSqlClause","name":"ValueHoldingSqlClause"},{"html_id":"avram/Avram/Where/SqlClause","kind":"class","full_name":"Avram::Where::SqlClause","name":"SqlClause"},{"html_id":"avram/Avram/Where/Condition","kind":"class","full_name":"Avram::Where::Condition","name":"Condition"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Avram/Where","kind":"module","full_name":"Avram::Where","name":"Where"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"negated:LessThanOrEqualTo-instance-method","html_id":"negated:LessThanOrEqualTo-instance-method","name":"negated","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : LessThanOrEqualTo","args_html":" : <a href=\"../../Avram/Where/LessThanOrEqualTo.html\">LessThanOrEqualTo</a>","location":{"filename":"src/avram/where.cr","line_number":98,"url":null},"def":{"name":"negated","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"LessThanOrEqualTo","visibility":"Public","body":"LessThanOrEqualTo.new(column, value)"}},{"id":"operator:String-instance-method","html_id":"operator:String-instance-method","name":"operator","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","args_html":" : <a href=\"../../String.html\">String</a>","location":{"filename":"src/avram/where.cr","line_number":94,"url":null},"def":{"name":"operator","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"\">\""}}],"macros":[],"types":[]},{"html_id":"avram/Avram/Where/GreaterThanOrEqualTo","path":"Avram/Where/GreaterThanOrEqualTo.html","kind":"class","full_name":"Avram::Where::GreaterThanOrEqualTo","name":"GreaterThanOrEqualTo","abstract":false,"superclass":{"html_id":"avram/Avram/Where/ValueHoldingSqlClause","kind":"class","full_name":"Avram::Where::ValueHoldingSqlClause","name":"ValueHoldingSqlClause"},"ancestors":[{"html_id":"avram/Avram/Where/ValueHoldingSqlClause","kind":"class","full_name":"Avram::Where::ValueHoldingSqlClause","name":"ValueHoldingSqlClause"},{"html_id":"avram/Avram/Where/SqlClause","kind":"class","full_name":"Avram::Where::SqlClause","name":"SqlClause"},{"html_id":"avram/Avram/Where/Condition","kind":"class","full_name":"Avram::Where::Condition","name":"Condition"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Avram/Where","kind":"module","full_name":"Avram::Where","name":"Where"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"negated:LessThan-instance-method","html_id":"negated:LessThan-instance-method","name":"negated","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : LessThan","args_html":" : <a href=\"../../Avram/Where/LessThan.html\">LessThan</a>","location":{"filename":"src/avram/where.cr","line_number":108,"url":null},"def":{"name":"negated","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"LessThan","visibility":"Public","body":"LessThan.new(column, value)"}},{"id":"operator:String-instance-method","html_id":"operator:String-instance-method","name":"operator","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","args_html":" : <a href=\"../../String.html\">String</a>","location":{"filename":"src/avram/where.cr","line_number":104,"url":null},"def":{"name":"operator","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"\">=\""}}],"macros":[],"types":[]},{"html_id":"avram/Avram/Where/Ilike","path":"Avram/Where/Ilike.html","kind":"class","full_name":"Avram::Where::Ilike","name":"Ilike","abstract":false,"superclass":{"html_id":"avram/Avram/Where/ValueHoldingSqlClause","kind":"class","full_name":"Avram::Where::ValueHoldingSqlClause","name":"ValueHoldingSqlClause"},"ancestors":[{"html_id":"avram/Avram/Where/ValueHoldingSqlClause","kind":"class","full_name":"Avram::Where::ValueHoldingSqlClause","name":"ValueHoldingSqlClause"},{"html_id":"avram/Avram/Where/SqlClause","kind":"class","full_name":"Avram::Where::SqlClause","name":"SqlClause"},{"html_id":"avram/Avram/Where/Condition","kind":"class","full_name":"Avram::Where::Condition","name":"Condition"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Avram/Where","kind":"module","full_name":"Avram::Where","name":"Where"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"negated:NotIlike-instance-method","html_id":"negated:NotIlike-instance-method","name":"negated","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : NotIlike","args_html":" : <a href=\"../../Avram/Where/NotIlike.html\">NotIlike</a>","location":{"filename":"src/avram/where.cr","line_number":148,"url":null},"def":{"name":"negated","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"NotIlike","visibility":"Public","body":"NotIlike.new(column, value)"}},{"id":"operator:String-instance-method","html_id":"operator:String-instance-method","name":"operator","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","args_html":" : <a href=\"../../String.html\">String</a>","location":{"filename":"src/avram/where.cr","line_number":144,"url":null},"def":{"name":"operator","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"\"ILIKE\""}}],"macros":[],"types":[]},{"html_id":"avram/Avram/Where/In","path":"Avram/Where/In.html","kind":"class","full_name":"Avram::Where::In","name":"In","abstract":false,"superclass":{"html_id":"avram/Avram/Where/ValueHoldingSqlClause","kind":"class","full_name":"Avram::Where::ValueHoldingSqlClause","name":"ValueHoldingSqlClause"},"ancestors":[{"html_id":"avram/Avram/Where/ValueHoldingSqlClause","kind":"class","full_name":"Avram::Where::ValueHoldingSqlClause","name":"ValueHoldingSqlClause"},{"html_id":"avram/Avram/Where/SqlClause","kind":"class","full_name":"Avram::Where::SqlClause","name":"SqlClause"},{"html_id":"avram/Avram/Where/Condition","kind":"class","full_name":"Avram::Where::Condition","name":"Condition"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Avram/Where","kind":"module","full_name":"Avram::Where","name":"Where"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"negated:NotIn-instance-method","html_id":"negated:NotIn-instance-method","name":"negated","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : NotIn","args_html":" : <a href=\"../../Avram/Where/NotIn.html\">NotIn</a>","location":{"filename":"src/avram/where.cr","line_number":178,"url":null},"def":{"name":"negated","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"NotIn","visibility":"Public","body":"NotIn.new(column, value)"}},{"id":"operator:String-instance-method","html_id":"operator:String-instance-method","name":"operator","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","args_html":" : <a href=\"../../String.html\">String</a>","location":{"filename":"src/avram/where.cr","line_number":174,"url":null},"def":{"name":"operator","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"\"= ANY\""}},{"id":"prepare(placeholder_supplier:Proc(String)):String-instance-method","html_id":"prepare(placeholder_supplier:Proc(String)):String-instance-method","name":"prepare","doc":null,"summary":null,"abstract":false,"args":[{"name":"placeholder_supplier","doc":null,"default_value":"","external_name":"placeholder_supplier","restriction":"Proc(String)"}],"args_string":"(placeholder_supplier : Proc(String)) : String","args_html":"(placeholder_supplier : Proc(<a href=\"../../String.html\">String</a>)) : <a href=\"../../String.html\">String</a>","location":{"filename":"src/avram/where.cr","line_number":182,"url":null},"def":{"name":"prepare","args":[{"name":"placeholder_supplier","doc":null,"default_value":"","external_name":"placeholder_supplier","restriction":"Proc(String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"\"#{column} #{operator} (#{placeholder_supplier.call})\""}}],"macros":[],"types":[]},{"html_id":"avram/Avram/Where/LessThan","path":"Avram/Where/LessThan.html","kind":"class","full_name":"Avram::Where::LessThan","name":"LessThan","abstract":false,"superclass":{"html_id":"avram/Avram/Where/ValueHoldingSqlClause","kind":"class","full_name":"Avram::Where::ValueHoldingSqlClause","name":"ValueHoldingSqlClause"},"ancestors":[{"html_id":"avram/Avram/Where/ValueHoldingSqlClause","kind":"class","full_name":"Avram::Where::ValueHoldingSqlClause","name":"ValueHoldingSqlClause"},{"html_id":"avram/Avram/Where/SqlClause","kind":"class","full_name":"Avram::Where::SqlClause","name":"SqlClause"},{"html_id":"avram/Avram/Where/Condition","kind":"class","full_name":"Avram::Where::Condition","name":"Condition"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Avram/Where","kind":"module","full_name":"Avram::Where","name":"Where"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"negated:GreaterThanOrEqualTo-instance-method","html_id":"negated:GreaterThanOrEqualTo-instance-method","name":"negated","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : GreaterThanOrEqualTo","args_html":" : <a href=\"../../Avram/Where/GreaterThanOrEqualTo.html\">GreaterThanOrEqualTo</a>","location":{"filename":"src/avram/where.cr","line_number":118,"url":null},"def":{"name":"negated","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"GreaterThanOrEqualTo","visibility":"Public","body":"GreaterThanOrEqualTo.new(column, value)"}},{"id":"operator:String-instance-method","html_id":"operator:String-instance-method","name":"operator","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","args_html":" : <a href=\"../../String.html\">String</a>","location":{"filename":"src/avram/where.cr","line_number":114,"url":null},"def":{"name":"operator","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"\"<\""}}],"macros":[],"types":[]},{"html_id":"avram/Avram/Where/LessThanOrEqualTo","path":"Avram/Where/LessThanOrEqualTo.html","kind":"class","full_name":"Avram::Where::LessThanOrEqualTo","name":"LessThanOrEqualTo","abstract":false,"superclass":{"html_id":"avram/Avram/Where/ValueHoldingSqlClause","kind":"class","full_name":"Avram::Where::ValueHoldingSqlClause","name":"ValueHoldingSqlClause"},"ancestors":[{"html_id":"avram/Avram/Where/ValueHoldingSqlClause","kind":"class","full_name":"Avram::Where::ValueHoldingSqlClause","name":"ValueHoldingSqlClause"},{"html_id":"avram/Avram/Where/SqlClause","kind":"class","full_name":"Avram::Where::SqlClause","name":"SqlClause"},{"html_id":"avram/Avram/Where/Condition","kind":"class","full_name":"Avram::Where::Condition","name":"Condition"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Avram/Where","kind":"module","full_name":"Avram::Where","name":"Where"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"negated:GreaterThan-instance-method","html_id":"negated:GreaterThan-instance-method","name":"negated","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : GreaterThan","args_html":" : <a href=\"../../Avram/Where/GreaterThan.html\">GreaterThan</a>","location":{"filename":"src/avram/where.cr","line_number":128,"url":null},"def":{"name":"negated","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"GreaterThan","visibility":"Public","body":"GreaterThan.new(column, value)"}},{"id":"operator:String-instance-method","html_id":"operator:String-instance-method","name":"operator","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","args_html":" : <a href=\"../../String.html\">String</a>","location":{"filename":"src/avram/where.cr","line_number":124,"url":null},"def":{"name":"operator","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"\"<=\""}}],"macros":[],"types":[]},{"html_id":"avram/Avram/Where/Like","path":"Avram/Where/Like.html","kind":"class","full_name":"Avram::Where::Like","name":"Like","abstract":false,"superclass":{"html_id":"avram/Avram/Where/ValueHoldingSqlClause","kind":"class","full_name":"Avram::Where::ValueHoldingSqlClause","name":"ValueHoldingSqlClause"},"ancestors":[{"html_id":"avram/Avram/Where/ValueHoldingSqlClause","kind":"class","full_name":"Avram::Where::ValueHoldingSqlClause","name":"ValueHoldingSqlClause"},{"html_id":"avram/Avram/Where/SqlClause","kind":"class","full_name":"Avram::Where::SqlClause","name":"SqlClause"},{"html_id":"avram/Avram/Where/Condition","kind":"class","full_name":"Avram::Where::Condition","name":"Condition"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Avram/Where","kind":"module","full_name":"Avram::Where","name":"Where"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"negated:NotLike-instance-method","html_id":"negated:NotLike-instance-method","name":"negated","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : NotLike","args_html":" : <a href=\"../../Avram/Where/NotLike.html\">NotLike</a>","location":{"filename":"src/avram/where.cr","line_number":138,"url":null},"def":{"name":"negated","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"NotLike","visibility":"Public","body":"NotLike.new(column, value)"}},{"id":"operator:String-instance-method","html_id":"operator:String-instance-method","name":"operator","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","args_html":" : <a href=\"../../String.html\">String</a>","location":{"filename":"src/avram/where.cr","line_number":134,"url":null},"def":{"name":"operator","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"\"LIKE\""}}],"macros":[],"types":[]},{"html_id":"avram/Avram/Where/NotEqual","path":"Avram/Where/NotEqual.html","kind":"class","full_name":"Avram::Where::NotEqual","name":"NotEqual","abstract":false,"superclass":{"html_id":"avram/Avram/Where/ValueHoldingSqlClause","kind":"class","full_name":"Avram::Where::ValueHoldingSqlClause","name":"ValueHoldingSqlClause"},"ancestors":[{"html_id":"avram/Avram/Where/ValueHoldingSqlClause","kind":"class","full_name":"Avram::Where::ValueHoldingSqlClause","name":"ValueHoldingSqlClause"},{"html_id":"avram/Avram/Where/SqlClause","kind":"class","full_name":"Avram::Where::SqlClause","name":"SqlClause"},{"html_id":"avram/Avram/Where/Condition","kind":"class","full_name":"Avram::Where::Condition","name":"Condition"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Avram/Where","kind":"module","full_name":"Avram::Where","name":"Where"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"negated:Equal-instance-method","html_id":"negated:Equal-instance-method","name":"negated","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Equal","args_html":" : <a href=\"../../Avram/Where/Equal.html\">Equal</a>","location":{"filename":"src/avram/where.cr","line_number":88,"url":null},"def":{"name":"negated","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Equal","visibility":"Public","body":"Equal.new(column, value)"}},{"id":"operator:String-instance-method","html_id":"operator:String-instance-method","name":"operator","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","args_html":" : <a href=\"../../String.html\">String</a>","location":{"filename":"src/avram/where.cr","line_number":84,"url":null},"def":{"name":"operator","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"\"!=\""}}],"macros":[],"types":[]},{"html_id":"avram/Avram/Where/NotIlike","path":"Avram/Where/NotIlike.html","kind":"class","full_name":"Avram::Where::NotIlike","name":"NotIlike","abstract":false,"superclass":{"html_id":"avram/Avram/Where/ValueHoldingSqlClause","kind":"class","full_name":"Avram::Where::ValueHoldingSqlClause","name":"ValueHoldingSqlClause"},"ancestors":[{"html_id":"avram/Avram/Where/ValueHoldingSqlClause","kind":"class","full_name":"Avram::Where::ValueHoldingSqlClause","name":"ValueHoldingSqlClause"},{"html_id":"avram/Avram/Where/SqlClause","kind":"class","full_name":"Avram::Where::SqlClause","name":"SqlClause"},{"html_id":"avram/Avram/Where/Condition","kind":"class","full_name":"Avram::Where::Condition","name":"Condition"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Avram/Where","kind":"module","full_name":"Avram::Where","name":"Where"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"negated:Ilike-instance-method","html_id":"negated:Ilike-instance-method","name":"negated","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Ilike","args_html":" : <a href=\"../../Avram/Where/Ilike.html\">Ilike</a>","location":{"filename":"src/avram/where.cr","line_number":168,"url":null},"def":{"name":"negated","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Ilike","visibility":"Public","body":"Ilike.new(column, value)"}},{"id":"operator:String-instance-method","html_id":"operator:String-instance-method","name":"operator","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","args_html":" : <a href=\"../../String.html\">String</a>","location":{"filename":"src/avram/where.cr","line_number":164,"url":null},"def":{"name":"operator","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"\"NOT ILIKE\""}}],"macros":[],"types":[]},{"html_id":"avram/Avram/Where/NotIn","path":"Avram/Where/NotIn.html","kind":"class","full_name":"Avram::Where::NotIn","name":"NotIn","abstract":false,"superclass":{"html_id":"avram/Avram/Where/ValueHoldingSqlClause","kind":"class","full_name":"Avram::Where::ValueHoldingSqlClause","name":"ValueHoldingSqlClause"},"ancestors":[{"html_id":"avram/Avram/Where/ValueHoldingSqlClause","kind":"class","full_name":"Avram::Where::ValueHoldingSqlClause","name":"ValueHoldingSqlClause"},{"html_id":"avram/Avram/Where/SqlClause","kind":"class","full_name":"Avram::Where::SqlClause","name":"SqlClause"},{"html_id":"avram/Avram/Where/Condition","kind":"class","full_name":"Avram::Where::Condition","name":"Condition"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Avram/Where","kind":"module","full_name":"Avram::Where","name":"Where"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"negated:In-instance-method","html_id":"negated:In-instance-method","name":"negated","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : In","args_html":" : <a href=\"../../Avram/Where/In.html\">In</a>","location":{"filename":"src/avram/where.cr","line_number":192,"url":null},"def":{"name":"negated","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"In","visibility":"Public","body":"In.new(column, value)"}},{"id":"operator:String-instance-method","html_id":"operator:String-instance-method","name":"operator","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","args_html":" : <a href=\"../../String.html\">String</a>","location":{"filename":"src/avram/where.cr","line_number":188,"url":null},"def":{"name":"operator","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"\"!= ALL\""}},{"id":"prepare(placeholder_supplier:Proc(String)):String-instance-method","html_id":"prepare(placeholder_supplier:Proc(String)):String-instance-method","name":"prepare","doc":null,"summary":null,"abstract":false,"args":[{"name":"placeholder_supplier","doc":null,"default_value":"","external_name":"placeholder_supplier","restriction":"Proc(String)"}],"args_string":"(placeholder_supplier : Proc(String)) : String","args_html":"(placeholder_supplier : Proc(<a href=\"../../String.html\">String</a>)) : <a href=\"../../String.html\">String</a>","location":{"filename":"src/avram/where.cr","line_number":196,"url":null},"def":{"name":"prepare","args":[{"name":"placeholder_supplier","doc":null,"default_value":"","external_name":"placeholder_supplier","restriction":"Proc(String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"\"#{column} #{operator} (#{placeholder_supplier.call})\""}}],"macros":[],"types":[]},{"html_id":"avram/Avram/Where/NotLike","path":"Avram/Where/NotLike.html","kind":"class","full_name":"Avram::Where::NotLike","name":"NotLike","abstract":false,"superclass":{"html_id":"avram/Avram/Where/ValueHoldingSqlClause","kind":"class","full_name":"Avram::Where::ValueHoldingSqlClause","name":"ValueHoldingSqlClause"},"ancestors":[{"html_id":"avram/Avram/Where/ValueHoldingSqlClause","kind":"class","full_name":"Avram::Where::ValueHoldingSqlClause","name":"ValueHoldingSqlClause"},{"html_id":"avram/Avram/Where/SqlClause","kind":"class","full_name":"Avram::Where::SqlClause","name":"SqlClause"},{"html_id":"avram/Avram/Where/Condition","kind":"class","full_name":"Avram::Where::Condition","name":"Condition"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Avram/Where","kind":"module","full_name":"Avram::Where","name":"Where"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"negated:Like-instance-method","html_id":"negated:Like-instance-method","name":"negated","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Like","args_html":" : <a href=\"../../Avram/Where/Like.html\">Like</a>","location":{"filename":"src/avram/where.cr","line_number":158,"url":null},"def":{"name":"negated","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Like","visibility":"Public","body":"Like.new(column, value)"}},{"id":"operator:String-instance-method","html_id":"operator:String-instance-method","name":"operator","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","args_html":" : <a href=\"../../String.html\">String</a>","location":{"filename":"src/avram/where.cr","line_number":154,"url":null},"def":{"name":"operator","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"\"NOT LIKE\""}}],"macros":[],"types":[]},{"html_id":"avram/Avram/Where/NotNull","path":"Avram/Where/NotNull.html","kind":"class","full_name":"Avram::Where::NotNull","name":"NotNull","abstract":false,"superclass":{"html_id":"avram/Avram/Where/NullSqlClause","kind":"class","full_name":"Avram::Where::NullSqlClause","name":"NullSqlClause"},"ancestors":[{"html_id":"avram/Avram/Where/NullSqlClause","kind":"class","full_name":"Avram::Where::NullSqlClause","name":"NullSqlClause"},{"html_id":"avram/Avram/Where/SqlClause","kind":"class","full_name":"Avram::Where::SqlClause","name":"SqlClause"},{"html_id":"avram/Avram/Where/Condition","kind":"class","full_name":"Avram::Where::Condition","name":"Condition"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Avram/Where","kind":"module","full_name":"Avram::Where","name":"Where"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"negated:Null-instance-method","html_id":"negated:Null-instance-method","name":"negated","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Null","args_html":" : <a href=\"../../Avram/Where/Null.html\">Null</a>","location":{"filename":"src/avram/where.cr","line_number":68,"url":null},"def":{"name":"negated","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Null","visibility":"Public","body":"Null.new(column)"}},{"id":"operator:String-instance-method","html_id":"operator:String-instance-method","name":"operator","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","args_html":" : <a href=\"../../String.html\">String</a>","location":{"filename":"src/avram/where.cr","line_number":64,"url":null},"def":{"name":"operator","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"\"IS NOT\""}}],"macros":[],"types":[]},{"html_id":"avram/Avram/Where/Null","path":"Avram/Where/Null.html","kind":"class","full_name":"Avram::Where::Null","name":"Null","abstract":false,"superclass":{"html_id":"avram/Avram/Where/NullSqlClause","kind":"class","full_name":"Avram::Where::NullSqlClause","name":"NullSqlClause"},"ancestors":[{"html_id":"avram/Avram/Where/NullSqlClause","kind":"class","full_name":"Avram::Where::NullSqlClause","name":"NullSqlClause"},{"html_id":"avram/Avram/Where/SqlClause","kind":"class","full_name":"Avram::Where::SqlClause","name":"SqlClause"},{"html_id":"avram/Avram/Where/Condition","kind":"class","full_name":"Avram::Where::Condition","name":"Condition"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Avram/Where","kind":"module","full_name":"Avram::Where","name":"Where"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"negated:NotNull-instance-method","html_id":"negated:NotNull-instance-method","name":"negated","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : NotNull","args_html":" : <a href=\"../../Avram/Where/NotNull.html\">NotNull</a>","location":{"filename":"src/avram/where.cr","line_number":58,"url":null},"def":{"name":"negated","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"NotNull","visibility":"Public","body":"NotNull.new(column)"}},{"id":"operator:String-instance-method","html_id":"operator:String-instance-method","name":"operator","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","args_html":" : <a href=\"../../String.html\">String</a>","location":{"filename":"src/avram/where.cr","line_number":54,"url":null},"def":{"name":"operator","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"\"IS\""}}],"macros":[],"types":[]},{"html_id":"avram/Avram/Where/NullSqlClause","path":"Avram/Where/NullSqlClause.html","kind":"class","full_name":"Avram::Where::NullSqlClause","name":"NullSqlClause","abstract":true,"superclass":{"html_id":"avram/Avram/Where/SqlClause","kind":"class","full_name":"Avram::Where::SqlClause","name":"SqlClause"},"ancestors":[{"html_id":"avram/Avram/Where/SqlClause","kind":"class","full_name":"Avram::Where::SqlClause","name":"SqlClause"},{"html_id":"avram/Avram/Where/Condition","kind":"class","full_name":"Avram::Where::Condition","name":"Condition"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"avram/Avram/Where/NotNull","kind":"class","full_name":"Avram::Where::NotNull","name":"NotNull"},{"html_id":"avram/Avram/Where/Null","kind":"class","full_name":"Avram::Where::Null","name":"Null"}],"including_types":[],"namespace":{"html_id":"avram/Avram/Where","kind":"module","full_name":"Avram::Where","name":"Where"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"prepare(_placeholder_supplier:Proc(String)):String-instance-method","html_id":"prepare(_placeholder_supplier:Proc(String)):String-instance-method","name":"prepare","doc":null,"summary":null,"abstract":false,"args":[{"name":"_placeholder_supplier","doc":null,"default_value":"","external_name":"_placeholder_supplier","restriction":"Proc(String)"}],"args_string":"(_placeholder_supplier : Proc(String)) : String","args_html":"(_placeholder_supplier : Proc(<a href=\"../../String.html\">String</a>)) : <a href=\"../../String.html\">String</a>","location":{"filename":"src/avram/where.cr","line_number":48,"url":null},"def":{"name":"prepare","args":[{"name":"_placeholder_supplier","doc":null,"default_value":"","external_name":"_placeholder_supplier","restriction":"Proc(String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"\"#{column} #{operator} NULL\""}}],"macros":[],"types":[]},{"html_id":"avram/Avram/Where/Raw","path":"Avram/Where/Raw.html","kind":"class","full_name":"Avram::Where::Raw","name":"Raw","abstract":false,"superclass":{"html_id":"avram/Avram/Where/Condition","kind":"class","full_name":"Avram::Where::Condition","name":"Condition"},"ancestors":[{"html_id":"avram/Avram/Where/Condition","kind":"class","full_name":"Avram::Where::Condition","name":"Condition"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Avram/Where","kind":"module","full_name":"Avram::Where","name":"Where"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(statement:String,*bind_vars)-class-method","html_id":"new(statement:String,*bind_vars)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"statement","doc":null,"default_value":"","external_name":"statement","restriction":"String"},{"name":"bind_vars","doc":null,"default_value":"","external_name":"bind_vars","restriction":""}],"args_string":"(statement : String, *bind_vars)","args_html":"(statement : <a href=\"../../String.html\">String</a>, *bind_vars)","location":{"filename":"src/avram/where.cr","line_number":204,"url":null},"def":{"name":"new","args":[{"name":"statement","doc":null,"default_value":"","external_name":"statement","restriction":"String"},{"name":"bind_vars","doc":null,"default_value":"","external_name":"bind_vars","restriction":""}],"double_splat":null,"splat_index":1,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"new(statement, args: bind_vars.to_a)"}},{"id":"new(statement:String,*,argsbind_vars:Array)-class-method","html_id":"new(statement:String,*,argsbind_vars:Array)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"statement","doc":null,"default_value":"","external_name":"statement","restriction":"String"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"bind_vars","doc":null,"default_value":"","external_name":"args","restriction":"Array"}],"args_string":"(statement : String, *, args bind_vars : Array)","args_html":"(statement : <a href=\"../../String.html\">String</a>, *, args bind_vars : <a href=\"../../Array.html\">Array</a>)","location":{"filename":"src/avram/where.cr","line_number":208,"url":null},"def":{"name":"new","args":[{"name":"statement","doc":null,"default_value":"","external_name":"statement","restriction":"String"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"bind_vars","doc":null,"default_value":"","external_name":"args","restriction":"Array"}],"double_splat":null,"splat_index":1,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(statement, args: bind_vars)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"prepare(_placeholder_supplier:Proc(String)):String-instance-method","html_id":"prepare(_placeholder_supplier:Proc(String)):String-instance-method","name":"prepare","doc":null,"summary":null,"abstract":false,"args":[{"name":"_placeholder_supplier","doc":null,"default_value":"","external_name":"_placeholder_supplier","restriction":"Proc(String)"}],"args_string":"(_placeholder_supplier : Proc(String)) : String","args_html":"(_placeholder_supplier : Proc(<a href=\"../../String.html\">String</a>)) : <a href=\"../../String.html\">String</a>","location":{"filename":"src/avram/where.cr","line_number":213,"url":null},"def":{"name":"prepare","args":[{"name":"_placeholder_supplier","doc":null,"default_value":"","external_name":"_placeholder_supplier","restriction":"Proc(String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@clause"}}],"macros":[],"types":[]},{"html_id":"avram/Avram/Where/SqlClause","path":"Avram/Where/SqlClause.html","kind":"class","full_name":"Avram::Where::SqlClause","name":"SqlClause","abstract":true,"superclass":{"html_id":"avram/Avram/Where/Condition","kind":"class","full_name":"Avram::Where::Condition","name":"Condition"},"ancestors":[{"html_id":"avram/Avram/Where/Condition","kind":"class","full_name":"Avram::Where::Condition","name":"Condition"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"avram/Avram/Where/NullSqlClause","kind":"class","full_name":"Avram::Where::NullSqlClause","name":"NullSqlClause"},{"html_id":"avram/Avram/Where/ValueHoldingSqlClause","kind":"class","full_name":"Avram::Where::ValueHoldingSqlClause","name":"ValueHoldingSqlClause"}],"including_types":[],"namespace":{"html_id":"avram/Avram/Where","kind":"module","full_name":"Avram::Where","name":"Where"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(column)-class-method","html_id":"new(column)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":""}],"args_string":"(column)","args_html":"(column)","location":{"filename":"src/avram/where.cr","line_number":29,"url":null},"def":{"name":"new","args":[{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(column)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"column:Symbol|String-instance-method","html_id":"column:Symbol|String-instance-method","name":"column","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Symbol | String","args_html":" : Symbol | <a href=\"../../String.html\">String</a>","location":{"filename":"src/avram/where.cr","line_number":27,"url":null},"def":{"name":"column","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Symbol | String","visibility":"Public","body":"@column"}},{"id":"negated:SqlClause-instance-method","html_id":"negated:SqlClause-instance-method","name":"negated","doc":null,"summary":null,"abstract":true,"args":[],"args_string":" : SqlClause","args_html":" : <a href=\"../../Avram/Where/SqlClause.html\">SqlClause</a>","location":{"filename":"src/avram/where.cr","line_number":33,"url":null},"def":{"name":"negated","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"SqlClause","visibility":"Public","body":""}},{"id":"operator:String-instance-method","html_id":"operator:String-instance-method","name":"operator","doc":null,"summary":null,"abstract":true,"args":[],"args_string":" : String","args_html":" : <a href=\"../../String.html\">String</a>","location":{"filename":"src/avram/where.cr","line_number":32,"url":null},"def":{"name":"operator","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":""}},{"id":"prepare(placeholder_supplier:Proc(String)):String-instance-method","html_id":"prepare(placeholder_supplier:Proc(String)):String-instance-method","name":"prepare","doc":null,"summary":null,"abstract":false,"args":[{"name":"placeholder_supplier","doc":null,"default_value":"","external_name":"placeholder_supplier","restriction":"Proc(String)"}],"args_string":"(placeholder_supplier : Proc(String)) : String","args_html":"(placeholder_supplier : Proc(<a href=\"../../String.html\">String</a>)) : <a href=\"../../String.html\">String</a>","location":{"filename":"src/avram/where.cr","line_number":35,"url":null},"def":{"name":"prepare","args":[{"name":"placeholder_supplier","doc":null,"default_value":"","external_name":"placeholder_supplier","restriction":"Proc(String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"\"#{column} #{operator} #{placeholder_supplier.call}\""}}],"macros":[],"types":[]},{"html_id":"avram/Avram/Where/ValueHoldingSqlClause","path":"Avram/Where/ValueHoldingSqlClause.html","kind":"class","full_name":"Avram::Where::ValueHoldingSqlClause","name":"ValueHoldingSqlClause","abstract":true,"superclass":{"html_id":"avram/Avram/Where/SqlClause","kind":"class","full_name":"Avram::Where::SqlClause","name":"SqlClause"},"ancestors":[{"html_id":"avram/Avram/Where/SqlClause","kind":"class","full_name":"Avram::Where::SqlClause","name":"SqlClause"},{"html_id":"avram/Avram/Where/Condition","kind":"class","full_name":"Avram::Where::Condition","name":"Condition"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"avram/Avram/Where/Equal","kind":"class","full_name":"Avram::Where::Equal","name":"Equal"},{"html_id":"avram/Avram/Where/GreaterThan","kind":"class","full_name":"Avram::Where::GreaterThan","name":"GreaterThan"},{"html_id":"avram/Avram/Where/GreaterThanOrEqualTo","kind":"class","full_name":"Avram::Where::GreaterThanOrEqualTo","name":"GreaterThanOrEqualTo"},{"html_id":"avram/Avram/Where/Ilike","kind":"class","full_name":"Avram::Where::Ilike","name":"Ilike"},{"html_id":"avram/Avram/Where/In","kind":"class","full_name":"Avram::Where::In","name":"In"},{"html_id":"avram/Avram/Where/LessThan","kind":"class","full_name":"Avram::Where::LessThan","name":"LessThan"},{"html_id":"avram/Avram/Where/LessThanOrEqualTo","kind":"class","full_name":"Avram::Where::LessThanOrEqualTo","name":"LessThanOrEqualTo"},{"html_id":"avram/Avram/Where/Like","kind":"class","full_name":"Avram::Where::Like","name":"Like"},{"html_id":"avram/Avram/Where/NotEqual","kind":"class","full_name":"Avram::Where::NotEqual","name":"NotEqual"},{"html_id":"avram/Avram/Where/NotIlike","kind":"class","full_name":"Avram::Where::NotIlike","name":"NotIlike"},{"html_id":"avram/Avram/Where/NotIn","kind":"class","full_name":"Avram::Where::NotIn","name":"NotIn"},{"html_id":"avram/Avram/Where/NotLike","kind":"class","full_name":"Avram::Where::NotLike","name":"NotLike"}],"including_types":[],"namespace":{"html_id":"avram/Avram/Where","kind":"module","full_name":"Avram::Where","name":"Where"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(column,value)-class-method","html_id":"new(column,value)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":""},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(column, value)","args_html":"(column, value)","location":{"filename":"src/avram/where.cr","line_number":43,"url":null},"def":{"name":"new","args":[{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":""},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(column, value)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"value:String|Array(String)|Array(Int32)-instance-method","html_id":"value:String|Array(String)|Array(Int32)-instance-method","name":"value","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String | Array(String) | Array(Int32)","args_html":" : <a href=\"../../String.html\">String</a> | <a href=\"../../Array.html\">Array</a>(<a href=\"../../String.html\">String</a>) | <a href=\"../../Array.html\">Array</a>(<a href=\"../../Int32.html\">Int32</a>)","location":{"filename":"src/avram/where.cr","line_number":41,"url":null},"def":{"name":"value","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String | Array(String) | Array(Int32)","visibility":"Public","body":"@value"}}],"macros":[],"types":[]}]}]},{"html_id":"avram/BaseTask","path":"BaseTask.html","kind":"class","full_name":"BaseTask","name":"BaseTask","abstract":true,"superclass":{"html_id":"avram/LuckyCli/Task","kind":"class","full_name":"LuckyCli::Task","name":"Task"},"ancestors":[{"html_id":"avram/LuckyCli/Task","kind":"class","full_name":"LuckyCli::Task","name":"Task"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[{"id":"PARSER_OPTS","name":"PARSER_OPTS","value":"[] of Symbol","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"avram/Db/Create","kind":"class","full_name":"Db::Create","name":"Create"},{"html_id":"avram/Db/Drop","kind":"class","full_name":"Db::Drop","name":"Drop"},{"html_id":"avram/Db/Migrate","kind":"class","full_name":"Db::Migrate","name":"Migrate"},{"html_id":"avram/Db/Migrate/One","kind":"class","full_name":"Db::Migrate::One","name":"One"},{"html_id":"avram/Db/Migrations/Status","kind":"class","full_name":"Db::Migrations::Status","name":"Status"},{"html_id":"avram/Db/Redo","kind":"class","full_name":"Db::Redo","name":"Redo"},{"html_id":"avram/Db/Reset","kind":"class","full_name":"Db::Reset","name":"Reset"},{"html_id":"avram/Db/Rollback","kind":"class","full_name":"Db::Rollback","name":"Rollback"},{"html_id":"avram/Db/RollbackAll","kind":"class","full_name":"Db::RollbackAll","name":"RollbackAll"},{"html_id":"avram/Db/RollbackTo","kind":"class","full_name":"Db::RollbackTo","name":"RollbackTo"},{"html_id":"avram/Db/Schema/Dump","kind":"class","full_name":"Db::Schema::Dump","name":"Dump"},{"html_id":"avram/Db/Schema/Restore","kind":"class","full_name":"Db::Schema::Restore","name":"Restore"},{"html_id":"avram/Db/Setup","kind":"class","full_name":"Db::Setup","name":"Setup"},{"html_id":"avram/Db/VerifyConnection","kind":"class","full_name":"Db::VerifyConnection","name":"VerifyConnection"}],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"call-instance-method","html_id":"call-instance-method","name":"call","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/tasks/db/base_task.cr","line_number":4,"url":null},"def":{"name":"call","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Avram::Migrator.run do\n  run_task\nend"}},{"id":"help_message-instance-method","html_id":"help_message-instance-method","name":"help_message","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/tasks/db/base_task.cr","line_number":1,"url":null},"def":{"name":"help_message","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"#{summary}\\n\\nRun this task with 'lucky #{name}'\""}},{"id":"name-instance-method","html_id":"name-instance-method","name":"name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/tasks/db/base_task.cr","line_number":1,"url":null},"def":{"name":"name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"base_task\""}},{"id":"option_parser:OptionParser-instance-method","html_id":"option_parser:OptionParser-instance-method","name":"option_parser","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : OptionParser","args_html":" : OptionParser","location":null,"def":{"name":"option_parser","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"OptionParser","visibility":"Public","body":"@option_parser"}},{"id":"option_parser=(option_parser:OptionParser)-instance-method","html_id":"option_parser=(option_parser:OptionParser)-instance-method","name":"option_parser=","doc":null,"summary":null,"abstract":false,"args":[{"name":"option_parser","doc":null,"default_value":"","external_name":"option_parser","restriction":"OptionParser"}],"args_string":"(option_parser : OptionParser)","args_html":"(option_parser : OptionParser)","location":null,"def":{"name":"option_parser=","args":[{"name":"option_parser","doc":null,"default_value":"","external_name":"option_parser","restriction":"OptionParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@option_parser = option_parser"}},{"id":"output:IO-instance-method","html_id":"output:IO-instance-method","name":"output","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : IO","args_html":" : IO","location":null,"def":{"name":"output","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"IO","visibility":"Public","body":"@output"}},{"id":"output=(output:IO)-instance-method","html_id":"output=(output:IO)-instance-method","name":"output=","doc":null,"summary":null,"abstract":false,"args":[{"name":"output","doc":null,"default_value":"","external_name":"output","restriction":"IO"}],"args_string":"(output : IO)","args_html":"(output : IO)","location":null,"def":{"name":"output=","args":[{"name":"output","doc":null,"default_value":"","external_name":"output","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@output = output"}},{"id":"print_help_or_call(args:Array(String),io:IO)-instance-method","html_id":"print_help_or_call(args:Array(String),io:IO)-instance-method","name":"print_help_or_call","doc":null,"summary":"<p><span class=\"flag red\">DEPRECATED</span>  Set #output instead of passing in <code>io</code></p>\n\n","abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(String)"},{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"args_string":"(args : Array(String), io : IO)","args_html":"(args : <a href=\"Array.html\">Array</a>(<a href=\"String.html\">String</a>), io : IO)","location":{"filename":"src/avram/tasks/db/base_task.cr","line_number":1,"url":null},"def":{"name":"print_help_or_call","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(String)"},{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@output = io\nprint_help_or_call(args)\n"}},{"id":"print_help_or_call(args:Array(String))-instance-method","html_id":"print_help_or_call(args:Array(String))-instance-method","name":"print_help_or_call","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(String)"}],"args_string":"(args : Array(String))","args_html":"(args : <a href=\"Array.html\">Array</a>(<a href=\"String.html\">String</a>))","location":{"filename":"src/avram/tasks/db/base_task.cr","line_number":1,"url":null},"def":{"name":"print_help_or_call","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if wants_help_message?(args)\n  output.puts(help_message)\nelse\n  {% for opt in @type.constant(:PARSER_OPTS) %}\n        set_opt_for_{{ opt.id }}(args)\n        {% end %}\n  option_parser.parse(args)\n  call\nend"}},{"id":"run_task-instance-method","html_id":"run_task-instance-method","name":"run_task","doc":null,"summary":null,"abstract":true,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/tasks/db/base_task.cr","line_number":2,"url":null},"def":{"name":"run_task","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}}],"macros":[],"types":[]},{"html_id":"avram/Bool","path":"Bool.html","kind":"struct","full_name":"Bool","name":"Bool","abstract":false,"superclass":{"html_id":"avram/Value","kind":"struct","full_name":"Value","name":"Value"},"ancestors":[{"html_id":"avram/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"Bool has only two possible values: `true` and `false`. They are constructed using these literals:\n\n```\ntrue  # A Bool that is true\nfalse # A Bool that is false\n```","summary":"<p>Bool has only two possible values: <code>true</code> and <code>false</code>.</p>","class_methods":[{"id":"adapter-class-method","html_id":"adapter-class-method","name":"adapter","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/charms/bool_extensions.cr","line_number":2,"url":null},"def":{"name":"adapter","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Lucky"}}],"constructors":[],"instance_methods":[{"id":"blank?-instance-method","html_id":"blank?-instance-method","name":"blank?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/blank_extensions.cr","line_number":2,"url":null},"def":{"name":"blank?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"false"}},{"id":"blank_for_validates_required?:Bool-instance-method","html_id":"blank_for_validates_required?:Bool-instance-method","name":"blank_for_validates_required?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","args_html":" : <a href=\"Bool.html\">Bool</a>","location":{"filename":"src/avram/object_extensions.cr","line_number":15,"url":null},"def":{"name":"blank_for_validates_required?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"false"}}],"macros":[],"types":[{"html_id":"avram/Bool/Lucky","path":"Bool/Lucky.html","kind":"module","full_name":"Bool::Lucky","name":"Lucky","abstract":false,"superclass":null,"ancestors":[{"html_id":"avram/Avram/Type","kind":"module","full_name":"Avram::Type","name":"Type"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[{"html_id":"avram/Avram/Type","kind":"module","full_name":"Avram::Type","name":"Type"}],"extended_modules":[{"html_id":"avram/Bool/Lucky","kind":"module","full_name":"Bool::Lucky","name":"Lucky"}],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Bool","kind":"struct","full_name":"Bool","name":"Bool"},"doc":null,"summary":null,"class_methods":[{"id":"criteria(query:T,column)forallT-class-method","html_id":"criteria(query:T,column)forallT-class-method","name":"criteria","doc":null,"summary":null,"abstract":false,"args":[{"name":"query","doc":null,"default_value":"","external_name":"query","restriction":"T"},{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":""}],"args_string":"(query : T, column) forall T","args_html":"(query : T, column) forall T","location":{"filename":"src/avram/charms/bool_extensions.cr","line_number":10,"url":null},"def":{"name":"criteria","args":[{"name":"query","doc":null,"default_value":"","external_name":"query","restriction":"T"},{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Criteria(T, Bool).new(query, column)"}}],"constructors":[],"instance_methods":[{"id":"parse(value:String)-instance-method","html_id":"parse(value:String)-instance-method","name":"parse","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"String"}],"args_string":"(value : String)","args_html":"(value : <a href=\"../String.html\">String</a>)","location":{"filename":"src/avram/charms/bool_extensions.cr","line_number":14,"url":null},"def":{"name":"parse","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if ([\"true\", \"1\"] of ::String).includes?(value)\n  SuccessfulCast(Bool).new(true)\nelse\n  if ([\"false\", \"0\"] of ::String).includes?(value)\n    SuccessfulCast(Bool).new(false)\n  else\n    FailedCast.new\n  end\nend"}},{"id":"parse(value:Bool)-instance-method","html_id":"parse(value:Bool)-instance-method","name":"parse","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Bool"}],"args_string":"(value : Bool)","args_html":"(value : <a href=\"../Bool.html\">Bool</a>)","location":{"filename":"src/avram/charms/bool_extensions.cr","line_number":24,"url":null},"def":{"name":"parse","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SuccessfulCast(Bool).new(value)"}},{"id":"parse(values:Array(Bool))-instance-method","html_id":"parse(values:Array(Bool))-instance-method","name":"parse","doc":null,"summary":null,"abstract":false,"args":[{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":"Array(Bool)"}],"args_string":"(values : Array(Bool))","args_html":"(values : <a href=\"../Array.html\">Array</a>(<a href=\"../Bool.html\">Bool</a>))","location":{"filename":"src/avram/charms/bool_extensions.cr","line_number":28,"url":null},"def":{"name":"parse","args":[{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":"Array(Bool)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SuccessfulCast(Array(Bool)).new(values)"}},{"id":"to_db(value:Bool)-instance-method","html_id":"to_db(value:Bool)-instance-method","name":"to_db","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Bool"}],"args_string":"(value : Bool)","args_html":"(value : <a href=\"../Bool.html\">Bool</a>)","location":{"filename":"src/avram/charms/bool_extensions.cr","line_number":32,"url":null},"def":{"name":"to_db","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value.to_s"}},{"id":"to_db(values:Array(Bool))-instance-method","html_id":"to_db(values:Array(Bool))-instance-method","name":"to_db","doc":null,"summary":null,"abstract":false,"args":[{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":"Array(Bool)"}],"args_string":"(values : Array(Bool))","args_html":"(values : <a href=\"../Array.html\">Array</a>(<a href=\"../Bool.html\">Bool</a>))","location":{"filename":"src/avram/charms/bool_extensions.cr","line_number":36,"url":null},"def":{"name":"to_db","args":[{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":"Array(Bool)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"PQ::Param.encode_array(values)"}}],"macros":[],"types":[{"html_id":"avram/Bool/Lucky/ColumnType","path":"Bool/Lucky/ColumnType.html","kind":"alias","full_name":"Bool::Lucky::ColumnType","name":"ColumnType","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":true,"aliased":"Bool","aliased_html":"<a href=\"../../Bool.html\">Bool</a>","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Bool/Lucky","kind":"module","full_name":"Bool::Lucky","name":"Lucky"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"avram/Bool/Lucky/Criteria","path":"Bool/Lucky/Criteria.html","kind":"class","full_name":"Bool::Lucky::Criteria(T, V)","name":"Criteria","abstract":false,"superclass":{"html_id":"avram/Avram/Criteria","kind":"class","full_name":"Avram::Criteria","name":"Criteria"},"ancestors":[{"html_id":"avram/Avram/Criteria","kind":"class","full_name":"Avram::Criteria","name":"Criteria"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Bool/Lucky","kind":"module","full_name":"Bool::Lucky","name":"Lucky"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(rows:T,column:Symbol|String)-class-method","html_id":"new(rows:T,column:Symbol|String)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"rows","doc":null,"default_value":"","external_name":"rows","restriction":"T"},{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":"Symbol | String"}],"args_string":"(rows : T, column : Symbol | String)","args_html":"(rows : T, column : Symbol | <a href=\"../../String.html\">String</a>)","location":{"filename":"src/avram/criteria.cr","line_number":5,"url":null},"def":{"name":"new","args":[{"name":"rows","doc":null,"default_value":"","external_name":"rows","restriction":"T"},{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":"Symbol | String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = Criteria(T, V).allocate\n_.initialize(rows, column)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[],"macros":[],"types":[]}]}]},{"html_id":"avram/Char","path":"Char.html","kind":"struct","full_name":"Char","name":"Char","abstract":false,"superclass":{"html_id":"avram/Value","kind":"struct","full_name":"Value","name":"Value"},"ancestors":[{"html_id":"avram/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"avram/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[{"html_id":"avram/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"A `Char` represents a [Unicode](http://en.wikipedia.org/wiki/Unicode) [code point](http://en.wikipedia.org/wiki/Code_point).\nIt occupies 32 bits.\n\nIt is created by enclosing an UTF-8 character in single quotes.\n\n```\n'a'\n'z'\n'0'\n'_'\n'あ'\n```\n\nYou can use a backslash to denote some characters:\n\n```\n'\\'' # single quote\n'\\\\' # backslash\n'\\e' # escape\n'\\f' # form feed\n'\\n' # newline\n'\\r' # carriage return\n'\\t' # tab\n'\\v' # vertical tab\n```\n\nYou can use a backslash followed by an *u* and four hexadecimal characters to denote a unicode codepoint written:\n\n```\n'\\u0041' # == 'A'\n```\n\nOr you can use curly braces and specify up to four hexadecimal numbers:\n\n```\n'\\u{41}' # == 'A'\n```","summary":"<p>A <code><a href=\"Char.html\">Char</a></code> represents a <a href=\"http://en.wikipedia.org/wiki/Unicode\">Unicode</a> <a href=\"http://en.wikipedia.org/wiki/Code_point\">code point</a>.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"blank_for_validates_required?:Bool-instance-method","html_id":"blank_for_validates_required?:Bool-instance-method","name":"blank_for_validates_required?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","args_html":" : <a href=\"Bool.html\">Bool</a>","location":{"filename":"src/avram/object_extensions.cr","line_number":21,"url":null},"def":{"name":"blank_for_validates_required?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"blank?"}}],"macros":[],"types":[]},{"html_id":"avram/Db","path":"Db.html","kind":"module","full_name":"Db","name":"Db","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"avram/Db/Console","path":"Db/Console.html","kind":"class","full_name":"Db::Console","name":"Console","abstract":false,"superclass":{"html_id":"avram/LuckyCli/Task","kind":"class","full_name":"LuckyCli::Task","name":"Task"},"ancestors":[{"html_id":"avram/LuckyCli/Task","kind":"class","full_name":"LuckyCli::Task","name":"Task"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[{"id":"PARSER_OPTS","name":"PARSER_OPTS","value":"[] of Symbol","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Db","kind":"module","full_name":"Db","name":"Db"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"call-instance-method","html_id":"call-instance-method","name":"call","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/tasks/db/console.cr","line_number":18,"url":null},"def":{"name":"call","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"puts(banner_message)\nsystem(\"psql #{Avram::Migrator::Runner.credentials.url_without_query_params}\")\n"}},{"id":"help_message-instance-method","html_id":"help_message-instance-method","name":"help_message","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/tasks/db/console.cr","line_number":4,"url":null},"def":{"name":"help_message","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"#{summary}\\n\\nEnters the postgres REPL. Check config/database.cr\\nfor database configuration.\\n\\nExamples:\\n\\n  lucky db.console\\n\""}},{"id":"name-instance-method","html_id":"name-instance-method","name":"name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/tasks/db/console.cr","line_number":1,"url":null},"def":{"name":"name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"db.console\""}},{"id":"option_parser:OptionParser-instance-method","html_id":"option_parser:OptionParser-instance-method","name":"option_parser","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : OptionParser","args_html":" : OptionParser","location":null,"def":{"name":"option_parser","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"OptionParser","visibility":"Public","body":"@option_parser"}},{"id":"option_parser=(option_parser:OptionParser)-instance-method","html_id":"option_parser=(option_parser:OptionParser)-instance-method","name":"option_parser=","doc":null,"summary":null,"abstract":false,"args":[{"name":"option_parser","doc":null,"default_value":"","external_name":"option_parser","restriction":"OptionParser"}],"args_string":"(option_parser : OptionParser)","args_html":"(option_parser : OptionParser)","location":null,"def":{"name":"option_parser=","args":[{"name":"option_parser","doc":null,"default_value":"","external_name":"option_parser","restriction":"OptionParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@option_parser = option_parser"}},{"id":"output:IO-instance-method","html_id":"output:IO-instance-method","name":"output","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : IO","args_html":" : IO","location":null,"def":{"name":"output","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"IO","visibility":"Public","body":"@output"}},{"id":"output=(output:IO)-instance-method","html_id":"output=(output:IO)-instance-method","name":"output=","doc":null,"summary":null,"abstract":false,"args":[{"name":"output","doc":null,"default_value":"","external_name":"output","restriction":"IO"}],"args_string":"(output : IO)","args_html":"(output : IO)","location":null,"def":{"name":"output=","args":[{"name":"output","doc":null,"default_value":"","external_name":"output","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@output = output"}},{"id":"print_help_or_call(args:Array(String),io:IO)-instance-method","html_id":"print_help_or_call(args:Array(String),io:IO)-instance-method","name":"print_help_or_call","doc":null,"summary":"<p><span class=\"flag red\">DEPRECATED</span>  Set #output instead of passing in <code>io</code></p>\n\n","abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(String)"},{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"args_string":"(args : Array(String), io : IO)","args_html":"(args : <a href=\"../Array.html\">Array</a>(<a href=\"../String.html\">String</a>), io : IO)","location":{"filename":"src/avram/tasks/db/console.cr","line_number":1,"url":null},"def":{"name":"print_help_or_call","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(String)"},{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@output = io\nprint_help_or_call(args)\n"}},{"id":"print_help_or_call(args:Array(String))-instance-method","html_id":"print_help_or_call(args:Array(String))-instance-method","name":"print_help_or_call","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(String)"}],"args_string":"(args : Array(String))","args_html":"(args : <a href=\"../Array.html\">Array</a>(<a href=\"../String.html\">String</a>))","location":{"filename":"src/avram/tasks/db/console.cr","line_number":1,"url":null},"def":{"name":"print_help_or_call","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if wants_help_message?(args)\n  output.puts(help_message)\nelse\n  {% for opt in @type.constant(:PARSER_OPTS) %}\n        set_opt_for_{{ opt.id }}(args)\n        {% end %}\n  option_parser.parse(args)\n  call\nend"}},{"id":"summary-instance-method","html_id":"summary-instance-method","name":"summary","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/tasks/db/console.cr","line_number":2,"url":null},"def":{"name":"summary","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"Access PostgreSQL console\""}}],"macros":[],"types":[]},{"html_id":"avram/Db/Create","path":"Db/Create.html","kind":"class","full_name":"Db::Create","name":"Create","abstract":false,"superclass":{"html_id":"avram/BaseTask","kind":"class","full_name":"BaseTask","name":"BaseTask"},"ancestors":[{"html_id":"avram/BaseTask","kind":"class","full_name":"BaseTask","name":"BaseTask"},{"html_id":"avram/LuckyCli/Task","kind":"class","full_name":"LuckyCli::Task","name":"Task"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[{"id":"PARSER_OPTS","name":"PARSER_OPTS","value":"[] of Symbol","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Db","kind":"module","full_name":"Db","name":"Db"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(quiet:Bool=false)-class-method","html_id":"new(quiet:Bool=false)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"quiet","doc":null,"default_value":"false","external_name":"quiet","restriction":"Bool"}],"args_string":"(quiet : Bool = <span class=\"n\">false</span>)","args_html":"(quiet : <a href=\"../Bool.html\">Bool</a> = <span class=\"n\">false</span>)","location":{"filename":"src/avram/tasks/db/create.cr","line_number":5,"url":null},"def":{"name":"new","args":[{"name":"quiet","doc":null,"default_value":"false","external_name":"quiet","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(quiet)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"help_message-instance-method","html_id":"help_message-instance-method","name":"help_message","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/tasks/db/create.cr","line_number":8,"url":null},"def":{"name":"help_message","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"#{summary}\\n\\nThe database name is usually found in config/database.cr\\n\\nExamples:\\n\\n  lucky db.create\\n  LUCKY_ENV=test lucky db.create # Create the test database\\n\""}},{"id":"name-instance-method","html_id":"name-instance-method","name":"name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/tasks/db/create.cr","line_number":1,"url":null},"def":{"name":"name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"db.create\""}},{"id":"option_parser:OptionParser-instance-method","html_id":"option_parser:OptionParser-instance-method","name":"option_parser","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : OptionParser","args_html":" : OptionParser","location":null,"def":{"name":"option_parser","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"OptionParser","visibility":"Public","body":"@option_parser"}},{"id":"option_parser=(option_parser:OptionParser)-instance-method","html_id":"option_parser=(option_parser:OptionParser)-instance-method","name":"option_parser=","doc":null,"summary":null,"abstract":false,"args":[{"name":"option_parser","doc":null,"default_value":"","external_name":"option_parser","restriction":"OptionParser"}],"args_string":"(option_parser : OptionParser)","args_html":"(option_parser : OptionParser)","location":null,"def":{"name":"option_parser=","args":[{"name":"option_parser","doc":null,"default_value":"","external_name":"option_parser","restriction":"OptionParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@option_parser = option_parser"}},{"id":"output:IO-instance-method","html_id":"output:IO-instance-method","name":"output","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : IO","args_html":" : IO","location":null,"def":{"name":"output","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"IO","visibility":"Public","body":"@output"}},{"id":"output=(output:IO)-instance-method","html_id":"output=(output:IO)-instance-method","name":"output=","doc":null,"summary":null,"abstract":false,"args":[{"name":"output","doc":null,"default_value":"","external_name":"output","restriction":"IO"}],"args_string":"(output : IO)","args_html":"(output : IO)","location":null,"def":{"name":"output=","args":[{"name":"output","doc":null,"default_value":"","external_name":"output","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@output = output"}},{"id":"print_help_or_call(args:Array(String),io:IO)-instance-method","html_id":"print_help_or_call(args:Array(String),io:IO)-instance-method","name":"print_help_or_call","doc":null,"summary":"<p><span class=\"flag red\">DEPRECATED</span>  Set #output instead of passing in <code>io</code></p>\n\n","abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(String)"},{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"args_string":"(args : Array(String), io : IO)","args_html":"(args : <a href=\"../Array.html\">Array</a>(<a href=\"../String.html\">String</a>), io : IO)","location":{"filename":"src/avram/tasks/db/create.cr","line_number":1,"url":null},"def":{"name":"print_help_or_call","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(String)"},{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@output = io\nprint_help_or_call(args)\n"}},{"id":"print_help_or_call(args:Array(String))-instance-method","html_id":"print_help_or_call(args:Array(String))-instance-method","name":"print_help_or_call","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(String)"}],"args_string":"(args : Array(String))","args_html":"(args : <a href=\"../Array.html\">Array</a>(<a href=\"../String.html\">String</a>))","location":{"filename":"src/avram/tasks/db/create.cr","line_number":1,"url":null},"def":{"name":"print_help_or_call","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if wants_help_message?(args)\n  output.puts(help_message)\nelse\n  {% for opt in @type.constant(:PARSER_OPTS) %}\n        set_opt_for_{{ opt.id }}(args)\n        {% end %}\n  option_parser.parse(args)\n  call\nend"}},{"id":"run_task-instance-method","html_id":"run_task-instance-method","name":"run_task","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/tasks/db/create.cr","line_number":22,"url":null},"def":{"name":"run_task","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Migrator::Runner.create_db(@quiet)"}},{"id":"summary-instance-method","html_id":"summary-instance-method","name":"summary","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/tasks/db/create.cr","line_number":3,"url":null},"def":{"name":"summary","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"Create the database\""}}],"macros":[],"types":[{"html_id":"avram/Db/Create/Migrator","path":"Db/Create/Migrator.html","kind":"alias","full_name":"Db::Create::Migrator","name":"Migrator","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":true,"aliased":"Avram::Migrator","aliased_html":"<a href=\"../../Avram/Migrator.html\">Avram::Migrator</a>","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Db/Create","kind":"class","full_name":"Db::Create","name":"Create"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]},{"html_id":"avram/Db/Drop","path":"Db/Drop.html","kind":"class","full_name":"Db::Drop","name":"Drop","abstract":false,"superclass":{"html_id":"avram/BaseTask","kind":"class","full_name":"BaseTask","name":"BaseTask"},"ancestors":[{"html_id":"avram/BaseTask","kind":"class","full_name":"BaseTask","name":"BaseTask"},{"html_id":"avram/LuckyCli/Task","kind":"class","full_name":"LuckyCli::Task","name":"Task"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[{"id":"PARSER_OPTS","name":"PARSER_OPTS","value":"[] of Symbol","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Db","kind":"module","full_name":"Db","name":"Db"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"help_message-instance-method","html_id":"help_message-instance-method","name":"help_message","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/tasks/db/drop.cr","line_number":11,"url":null},"def":{"name":"help_message","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"#{summary}\\n\\nThe database name is usually found in config/database.cr\\n\\nExamples:\\n\\n  lucky db.drop\\n  LUCKY_ENV=test lucky db.drop # Drop the test database\\n\""}},{"id":"name-instance-method","html_id":"name-instance-method","name":"name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/tasks/db/drop.cr","line_number":3,"url":null},"def":{"name":"name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"db.drop\""}},{"id":"option_parser:OptionParser-instance-method","html_id":"option_parser:OptionParser-instance-method","name":"option_parser","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : OptionParser","args_html":" : OptionParser","location":null,"def":{"name":"option_parser","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"OptionParser","visibility":"Public","body":"@option_parser"}},{"id":"option_parser=(option_parser:OptionParser)-instance-method","html_id":"option_parser=(option_parser:OptionParser)-instance-method","name":"option_parser=","doc":null,"summary":null,"abstract":false,"args":[{"name":"option_parser","doc":null,"default_value":"","external_name":"option_parser","restriction":"OptionParser"}],"args_string":"(option_parser : OptionParser)","args_html":"(option_parser : OptionParser)","location":null,"def":{"name":"option_parser=","args":[{"name":"option_parser","doc":null,"default_value":"","external_name":"option_parser","restriction":"OptionParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@option_parser = option_parser"}},{"id":"output:IO-instance-method","html_id":"output:IO-instance-method","name":"output","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : IO","args_html":" : IO","location":null,"def":{"name":"output","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"IO","visibility":"Public","body":"@output"}},{"id":"output=(output:IO)-instance-method","html_id":"output=(output:IO)-instance-method","name":"output=","doc":null,"summary":null,"abstract":false,"args":[{"name":"output","doc":null,"default_value":"","external_name":"output","restriction":"IO"}],"args_string":"(output : IO)","args_html":"(output : IO)","location":null,"def":{"name":"output=","args":[{"name":"output","doc":null,"default_value":"","external_name":"output","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@output = output"}},{"id":"print_help_or_call(args:Array(String),io:IO)-instance-method","html_id":"print_help_or_call(args:Array(String),io:IO)-instance-method","name":"print_help_or_call","doc":null,"summary":"<p><span class=\"flag red\">DEPRECATED</span>  Set #output instead of passing in <code>io</code></p>\n\n","abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(String)"},{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"args_string":"(args : Array(String), io : IO)","args_html":"(args : <a href=\"../Array.html\">Array</a>(<a href=\"../String.html\">String</a>), io : IO)","location":{"filename":"src/avram/tasks/db/drop.cr","line_number":3,"url":null},"def":{"name":"print_help_or_call","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(String)"},{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@output = io\nprint_help_or_call(args)\n"}},{"id":"print_help_or_call(args:Array(String))-instance-method","html_id":"print_help_or_call(args:Array(String))-instance-method","name":"print_help_or_call","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(String)"}],"args_string":"(args : Array(String))","args_html":"(args : <a href=\"../Array.html\">Array</a>(<a href=\"../String.html\">String</a>))","location":{"filename":"src/avram/tasks/db/drop.cr","line_number":3,"url":null},"def":{"name":"print_help_or_call","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if wants_help_message?(args)\n  output.puts(help_message)\nelse\n  {% for opt in @type.constant(:PARSER_OPTS) %}\n        set_opt_for_{{ opt.id }}(args)\n        {% end %}\n  option_parser.parse(args)\n  call\nend"}},{"id":"run_task-instance-method","html_id":"run_task-instance-method","name":"run_task","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/tasks/db/drop.cr","line_number":6,"url":null},"def":{"name":"run_task","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Avram::Migrator::Runner.drop_db\nputs(\"Done dropping #{Avram::Migrator::Runner.db_name.colorize(:green)}\")\n"}},{"id":"summary-instance-method","html_id":"summary-instance-method","name":"summary","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/tasks/db/drop.cr","line_number":4,"url":null},"def":{"name":"summary","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"Drop the database\""}}],"macros":[],"types":[]},{"html_id":"avram/Db/Migrate","path":"Db/Migrate.html","kind":"class","full_name":"Db::Migrate","name":"Migrate","abstract":false,"superclass":{"html_id":"avram/BaseTask","kind":"class","full_name":"BaseTask","name":"BaseTask"},"ancestors":[{"html_id":"avram/BaseTask","kind":"class","full_name":"BaseTask","name":"BaseTask"},{"html_id":"avram/LuckyCli/Task","kind":"class","full_name":"LuckyCli::Task","name":"Task"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[{"id":"PARSER_OPTS","name":"PARSER_OPTS","value":"[] of Symbol","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Db","kind":"module","full_name":"Db","name":"Db"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(quiet:Bool=false)-class-method","html_id":"new(quiet:Bool=false)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"quiet","doc":null,"default_value":"false","external_name":"quiet","restriction":"Bool"}],"args_string":"(quiet : Bool = <span class=\"n\">false</span>)","args_html":"(quiet : <a href=\"../Bool.html\">Bool</a> = <span class=\"n\">false</span>)","location":{"filename":"src/avram/tasks/db/migrate.cr","line_number":6,"url":null},"def":{"name":"new","args":[{"name":"quiet","doc":null,"default_value":"false","external_name":"quiet","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(quiet)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"help_message-instance-method","html_id":"help_message-instance-method","name":"help_message","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/tasks/db/migrate.cr","line_number":9,"url":null},"def":{"name":"help_message","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"#{summary}\\n\\nExamples:\\n\\n  lucky db.migrate\\n  LUCKY_ENV=test lucky db.migrate # Runs migrations on the test database\\n\""}},{"id":"name-instance-method","html_id":"name-instance-method","name":"name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/tasks/db/migrate.cr","line_number":3,"url":null},"def":{"name":"name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"db.migrate\""}},{"id":"option_parser:OptionParser-instance-method","html_id":"option_parser:OptionParser-instance-method","name":"option_parser","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : OptionParser","args_html":" : OptionParser","location":null,"def":{"name":"option_parser","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"OptionParser","visibility":"Public","body":"@option_parser"}},{"id":"option_parser=(option_parser:OptionParser)-instance-method","html_id":"option_parser=(option_parser:OptionParser)-instance-method","name":"option_parser=","doc":null,"summary":null,"abstract":false,"args":[{"name":"option_parser","doc":null,"default_value":"","external_name":"option_parser","restriction":"OptionParser"}],"args_string":"(option_parser : OptionParser)","args_html":"(option_parser : OptionParser)","location":null,"def":{"name":"option_parser=","args":[{"name":"option_parser","doc":null,"default_value":"","external_name":"option_parser","restriction":"OptionParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@option_parser = option_parser"}},{"id":"output:IO-instance-method","html_id":"output:IO-instance-method","name":"output","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : IO","args_html":" : IO","location":null,"def":{"name":"output","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"IO","visibility":"Public","body":"@output"}},{"id":"output=(output:IO)-instance-method","html_id":"output=(output:IO)-instance-method","name":"output=","doc":null,"summary":null,"abstract":false,"args":[{"name":"output","doc":null,"default_value":"","external_name":"output","restriction":"IO"}],"args_string":"(output : IO)","args_html":"(output : IO)","location":null,"def":{"name":"output=","args":[{"name":"output","doc":null,"default_value":"","external_name":"output","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@output = output"}},{"id":"print_help_or_call(args:Array(String),io:IO)-instance-method","html_id":"print_help_or_call(args:Array(String),io:IO)-instance-method","name":"print_help_or_call","doc":null,"summary":"<p><span class=\"flag red\">DEPRECATED</span>  Set #output instead of passing in <code>io</code></p>\n\n","abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(String)"},{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"args_string":"(args : Array(String), io : IO)","args_html":"(args : <a href=\"../Array.html\">Array</a>(<a href=\"../String.html\">String</a>), io : IO)","location":{"filename":"src/avram/tasks/db/migrate.cr","line_number":3,"url":null},"def":{"name":"print_help_or_call","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(String)"},{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@output = io\nprint_help_or_call(args)\n"}},{"id":"print_help_or_call(args:Array(String))-instance-method","html_id":"print_help_or_call(args:Array(String))-instance-method","name":"print_help_or_call","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(String)"}],"args_string":"(args : Array(String))","args_html":"(args : <a href=\"../Array.html\">Array</a>(<a href=\"../String.html\">String</a>))","location":{"filename":"src/avram/tasks/db/migrate.cr","line_number":3,"url":null},"def":{"name":"print_help_or_call","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if wants_help_message?(args)\n  output.puts(help_message)\nelse\n  {% for opt in @type.constant(:PARSER_OPTS) %}\n        set_opt_for_{{ opt.id }}(args)\n        {% end %}\n  option_parser.parse(args)\n  call\nend"}},{"id":"run_task-instance-method","html_id":"run_task-instance-method","name":"run_task","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/tasks/db/migrate.cr","line_number":21,"url":null},"def":{"name":"run_task","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(Avram::Migrator::Runner.new(@quiet)).run_pending_migrations"}},{"id":"summary-instance-method","html_id":"summary-instance-method","name":"summary","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/tasks/db/migrate.cr","line_number":4,"url":null},"def":{"name":"summary","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"Run any pending migrations\""}}],"macros":[],"types":[{"html_id":"avram/Db/Migrate/One","path":"Db/Migrate/One.html","kind":"class","full_name":"Db::Migrate::One","name":"One","abstract":false,"superclass":{"html_id":"avram/BaseTask","kind":"class","full_name":"BaseTask","name":"BaseTask"},"ancestors":[{"html_id":"avram/BaseTask","kind":"class","full_name":"BaseTask","name":"BaseTask"},{"html_id":"avram/LuckyCli/Task","kind":"class","full_name":"LuckyCli::Task","name":"Task"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[{"id":"PARSER_OPTS","name":"PARSER_OPTS","value":"[] of Symbol","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Db/Migrate","kind":"class","full_name":"Db::Migrate","name":"Migrate"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"help_message-instance-method","html_id":"help_message-instance-method","name":"help_message","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/tasks/db/migrate_one.cr","line_number":6,"url":null},"def":{"name":"help_message","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"#{summary}\\n\\nExample:\\n\\n  lucky db.migrate.one\\n\""}},{"id":"name-instance-method","html_id":"name-instance-method","name":"name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/tasks/db/migrate_one.cr","line_number":3,"url":null},"def":{"name":"name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"db.migrate.one\""}},{"id":"option_parser:OptionParser-instance-method","html_id":"option_parser:OptionParser-instance-method","name":"option_parser","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : OptionParser","args_html":" : OptionParser","location":null,"def":{"name":"option_parser","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"OptionParser","visibility":"Public","body":"@option_parser"}},{"id":"option_parser=(option_parser:OptionParser)-instance-method","html_id":"option_parser=(option_parser:OptionParser)-instance-method","name":"option_parser=","doc":null,"summary":null,"abstract":false,"args":[{"name":"option_parser","doc":null,"default_value":"","external_name":"option_parser","restriction":"OptionParser"}],"args_string":"(option_parser : OptionParser)","args_html":"(option_parser : OptionParser)","location":null,"def":{"name":"option_parser=","args":[{"name":"option_parser","doc":null,"default_value":"","external_name":"option_parser","restriction":"OptionParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@option_parser = option_parser"}},{"id":"output:IO-instance-method","html_id":"output:IO-instance-method","name":"output","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : IO","args_html":" : IO","location":null,"def":{"name":"output","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"IO","visibility":"Public","body":"@output"}},{"id":"output=(output:IO)-instance-method","html_id":"output=(output:IO)-instance-method","name":"output=","doc":null,"summary":null,"abstract":false,"args":[{"name":"output","doc":null,"default_value":"","external_name":"output","restriction":"IO"}],"args_string":"(output : IO)","args_html":"(output : IO)","location":null,"def":{"name":"output=","args":[{"name":"output","doc":null,"default_value":"","external_name":"output","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@output = output"}},{"id":"print_help_or_call(args:Array(String),io:IO)-instance-method","html_id":"print_help_or_call(args:Array(String),io:IO)-instance-method","name":"print_help_or_call","doc":null,"summary":"<p><span class=\"flag red\">DEPRECATED</span>  Set #output instead of passing in <code>io</code></p>\n\n","abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(String)"},{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"args_string":"(args : Array(String), io : IO)","args_html":"(args : <a href=\"../../Array.html\">Array</a>(<a href=\"../../String.html\">String</a>), io : IO)","location":{"filename":"src/avram/tasks/db/migrate_one.cr","line_number":3,"url":null},"def":{"name":"print_help_or_call","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(String)"},{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@output = io\nprint_help_or_call(args)\n"}},{"id":"print_help_or_call(args:Array(String))-instance-method","html_id":"print_help_or_call(args:Array(String))-instance-method","name":"print_help_or_call","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(String)"}],"args_string":"(args : Array(String))","args_html":"(args : <a href=\"../../Array.html\">Array</a>(<a href=\"../../String.html\">String</a>))","location":{"filename":"src/avram/tasks/db/migrate_one.cr","line_number":3,"url":null},"def":{"name":"print_help_or_call","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if wants_help_message?(args)\n  output.puts(help_message)\nelse\n  {% for opt in @type.constant(:PARSER_OPTS) %}\n        set_opt_for_{{ opt.id }}(args)\n        {% end %}\n  option_parser.parse(args)\n  call\nend"}},{"id":"run_task-instance-method","html_id":"run_task-instance-method","name":"run_task","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/tasks/db/migrate_one.cr","line_number":17,"url":null},"def":{"name":"run_task","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Avram::Migrator::Runner.new.run_next_migration"}},{"id":"summary-instance-method","html_id":"summary-instance-method","name":"summary","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/tasks/db/migrate_one.cr","line_number":4,"url":null},"def":{"name":"summary","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"Run just the next pending migration\""}}],"macros":[],"types":[]}]},{"html_id":"avram/Db/Migrations","path":"Db/Migrations.html","kind":"module","full_name":"Db::Migrations","name":"Migrations","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Db","kind":"module","full_name":"Db","name":"Db"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"avram/Db/Migrations/Status","path":"Db/Migrations/Status.html","kind":"class","full_name":"Db::Migrations::Status","name":"Status","abstract":false,"superclass":{"html_id":"avram/BaseTask","kind":"class","full_name":"BaseTask","name":"BaseTask"},"ancestors":[{"html_id":"avram/BaseTask","kind":"class","full_name":"BaseTask","name":"BaseTask"},{"html_id":"avram/LuckyCli/Task","kind":"class","full_name":"LuckyCli::Task","name":"Task"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[{"id":"PARSER_OPTS","name":"PARSER_OPTS","value":"[] of Symbol","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Db/Migrations","kind":"module","full_name":"Db::Migrations","name":"Migrations"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"help_message-instance-method","html_id":"help_message-instance-method","name":"help_message","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/tasks/db/migrations_status.cr","line_number":15,"url":null},"def":{"name":"help_message","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"Shows which migrations are pending and which have been run.\\n\\nExamples:\\n\\n  lucky db.migration.status\\n  LUCKY_ENV=test lucky db.migration.status # Show migration status for test db\\n\""}},{"id":"name-instance-method","html_id":"name-instance-method","name":"name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/tasks/db/migrations_status.cr","line_number":3,"url":null},"def":{"name":"name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"db.migrations.status\""}},{"id":"option_parser:OptionParser-instance-method","html_id":"option_parser:OptionParser-instance-method","name":"option_parser","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : OptionParser","args_html":" : OptionParser","location":null,"def":{"name":"option_parser","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"OptionParser","visibility":"Public","body":"@option_parser"}},{"id":"option_parser=(option_parser:OptionParser)-instance-method","html_id":"option_parser=(option_parser:OptionParser)-instance-method","name":"option_parser=","doc":null,"summary":null,"abstract":false,"args":[{"name":"option_parser","doc":null,"default_value":"","external_name":"option_parser","restriction":"OptionParser"}],"args_string":"(option_parser : OptionParser)","args_html":"(option_parser : OptionParser)","location":null,"def":{"name":"option_parser=","args":[{"name":"option_parser","doc":null,"default_value":"","external_name":"option_parser","restriction":"OptionParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@option_parser = option_parser"}},{"id":"output:IO-instance-method","html_id":"output:IO-instance-method","name":"output","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : IO","args_html":" : IO","location":null,"def":{"name":"output","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"IO","visibility":"Public","body":"@output"}},{"id":"output=(output:IO)-instance-method","html_id":"output=(output:IO)-instance-method","name":"output=","doc":null,"summary":null,"abstract":false,"args":[{"name":"output","doc":null,"default_value":"","external_name":"output","restriction":"IO"}],"args_string":"(output : IO)","args_html":"(output : IO)","location":null,"def":{"name":"output=","args":[{"name":"output","doc":null,"default_value":"","external_name":"output","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@output = output"}},{"id":"print_help_or_call(args:Array(String),io:IO)-instance-method","html_id":"print_help_or_call(args:Array(String),io:IO)-instance-method","name":"print_help_or_call","doc":null,"summary":"<p><span class=\"flag red\">DEPRECATED</span>  Set #output instead of passing in <code>io</code></p>\n\n","abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(String)"},{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"args_string":"(args : Array(String), io : IO)","args_html":"(args : <a href=\"../../Array.html\">Array</a>(<a href=\"../../String.html\">String</a>), io : IO)","location":{"filename":"src/avram/tasks/db/migrations_status.cr","line_number":3,"url":null},"def":{"name":"print_help_or_call","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(String)"},{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@output = io\nprint_help_or_call(args)\n"}},{"id":"print_help_or_call(args:Array(String))-instance-method","html_id":"print_help_or_call(args:Array(String))-instance-method","name":"print_help_or_call","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(String)"}],"args_string":"(args : Array(String))","args_html":"(args : <a href=\"../../Array.html\">Array</a>(<a href=\"../../String.html\">String</a>))","location":{"filename":"src/avram/tasks/db/migrations_status.cr","line_number":3,"url":null},"def":{"name":"print_help_or_call","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if wants_help_message?(args)\n  output.puts(help_message)\nelse\n  {% for opt in @type.constant(:PARSER_OPTS) %}\n        set_opt_for_{{ opt.id }}(args)\n        {% end %}\n  option_parser.parse(args)\n  call\nend"}},{"id":"run_task-instance-method","html_id":"run_task-instance-method","name":"run_task","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/tasks/db/migrations_status.cr","line_number":6,"url":null},"def":{"name":"run_task","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if migrations.none?\n  puts(\"There are no migrations.\".colorize(:green))\nelse\n  ensure_migration_tracking_tables_exist\n  print_migration_statuses\nend"}},{"id":"summary-instance-method","html_id":"summary-instance-method","name":"summary","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/tasks/db/migrations_status.cr","line_number":4,"url":null},"def":{"name":"summary","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"Print the current status of migrations\""}}],"macros":[],"types":[]}]},{"html_id":"avram/Db/Redo","path":"Db/Redo.html","kind":"class","full_name":"Db::Redo","name":"Redo","abstract":false,"superclass":{"html_id":"avram/BaseTask","kind":"class","full_name":"BaseTask","name":"BaseTask"},"ancestors":[{"html_id":"avram/BaseTask","kind":"class","full_name":"BaseTask","name":"BaseTask"},{"html_id":"avram/LuckyCli/Task","kind":"class","full_name":"LuckyCli::Task","name":"Task"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[{"id":"PARSER_OPTS","name":"PARSER_OPTS","value":"[] of Symbol","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Db","kind":"module","full_name":"Db","name":"Db"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"help_message-instance-method","html_id":"help_message-instance-method","name":"help_message","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/tasks/db/redo.cr","line_number":6,"url":null},"def":{"name":"help_message","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"#{summary}\\n\\nExample:\\n\\n  lucky db.redo\\n\""}},{"id":"name-instance-method","html_id":"name-instance-method","name":"name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/tasks/db/redo.cr","line_number":3,"url":null},"def":{"name":"name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"db.redo\""}},{"id":"option_parser:OptionParser-instance-method","html_id":"option_parser:OptionParser-instance-method","name":"option_parser","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : OptionParser","args_html":" : OptionParser","location":null,"def":{"name":"option_parser","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"OptionParser","visibility":"Public","body":"@option_parser"}},{"id":"option_parser=(option_parser:OptionParser)-instance-method","html_id":"option_parser=(option_parser:OptionParser)-instance-method","name":"option_parser=","doc":null,"summary":null,"abstract":false,"args":[{"name":"option_parser","doc":null,"default_value":"","external_name":"option_parser","restriction":"OptionParser"}],"args_string":"(option_parser : OptionParser)","args_html":"(option_parser : OptionParser)","location":null,"def":{"name":"option_parser=","args":[{"name":"option_parser","doc":null,"default_value":"","external_name":"option_parser","restriction":"OptionParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@option_parser = option_parser"}},{"id":"output:IO-instance-method","html_id":"output:IO-instance-method","name":"output","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : IO","args_html":" : IO","location":null,"def":{"name":"output","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"IO","visibility":"Public","body":"@output"}},{"id":"output=(output:IO)-instance-method","html_id":"output=(output:IO)-instance-method","name":"output=","doc":null,"summary":null,"abstract":false,"args":[{"name":"output","doc":null,"default_value":"","external_name":"output","restriction":"IO"}],"args_string":"(output : IO)","args_html":"(output : IO)","location":null,"def":{"name":"output=","args":[{"name":"output","doc":null,"default_value":"","external_name":"output","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@output = output"}},{"id":"print_help_or_call(args:Array(String),io:IO)-instance-method","html_id":"print_help_or_call(args:Array(String),io:IO)-instance-method","name":"print_help_or_call","doc":null,"summary":"<p><span class=\"flag red\">DEPRECATED</span>  Set #output instead of passing in <code>io</code></p>\n\n","abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(String)"},{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"args_string":"(args : Array(String), io : IO)","args_html":"(args : <a href=\"../Array.html\">Array</a>(<a href=\"../String.html\">String</a>), io : IO)","location":{"filename":"src/avram/tasks/db/redo.cr","line_number":3,"url":null},"def":{"name":"print_help_or_call","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(String)"},{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@output = io\nprint_help_or_call(args)\n"}},{"id":"print_help_or_call(args:Array(String))-instance-method","html_id":"print_help_or_call(args:Array(String))-instance-method","name":"print_help_or_call","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(String)"}],"args_string":"(args : Array(String))","args_html":"(args : <a href=\"../Array.html\">Array</a>(<a href=\"../String.html\">String</a>))","location":{"filename":"src/avram/tasks/db/redo.cr","line_number":3,"url":null},"def":{"name":"print_help_or_call","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if wants_help_message?(args)\n  output.puts(help_message)\nelse\n  {% for opt in @type.constant(:PARSER_OPTS) %}\n        set_opt_for_{{ opt.id }}(args)\n        {% end %}\n  option_parser.parse(args)\n  call\nend"}},{"id":"run_task-instance-method","html_id":"run_task-instance-method","name":"run_task","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/tasks/db/redo.cr","line_number":17,"url":null},"def":{"name":"run_task","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Db::Rollback.new.run_task\nDb::Migrate.new.run_task\n"}},{"id":"summary-instance-method","html_id":"summary-instance-method","name":"summary","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/tasks/db/redo.cr","line_number":4,"url":null},"def":{"name":"summary","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"Rollback and run just the last migration\""}}],"macros":[],"types":[]},{"html_id":"avram/Db/Reset","path":"Db/Reset.html","kind":"class","full_name":"Db::Reset","name":"Reset","abstract":false,"superclass":{"html_id":"avram/BaseTask","kind":"class","full_name":"BaseTask","name":"BaseTask"},"ancestors":[{"html_id":"avram/BaseTask","kind":"class","full_name":"BaseTask","name":"BaseTask"},{"html_id":"avram/LuckyCli/Task","kind":"class","full_name":"LuckyCli::Task","name":"Task"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[{"id":"PARSER_OPTS","name":"PARSER_OPTS","value":"[] of Symbol","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Db","kind":"module","full_name":"Db","name":"Db"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"help_message-instance-method","html_id":"help_message-instance-method","name":"help_message","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/tasks/db/reset.cr","line_number":6,"url":null},"def":{"name":"help_message","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"#{summary}\\n\\nExample:\\n\\n  lucky db.reset\\n\\nTo drop the test database:\\n\\n   LUCKY_ENV=test lucky db.reset\\n\""}},{"id":"name-instance-method","html_id":"name-instance-method","name":"name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/tasks/db/reset.cr","line_number":3,"url":null},"def":{"name":"name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"db.reset\""}},{"id":"option_parser:OptionParser-instance-method","html_id":"option_parser:OptionParser-instance-method","name":"option_parser","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : OptionParser","args_html":" : OptionParser","location":null,"def":{"name":"option_parser","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"OptionParser","visibility":"Public","body":"@option_parser"}},{"id":"option_parser=(option_parser:OptionParser)-instance-method","html_id":"option_parser=(option_parser:OptionParser)-instance-method","name":"option_parser=","doc":null,"summary":null,"abstract":false,"args":[{"name":"option_parser","doc":null,"default_value":"","external_name":"option_parser","restriction":"OptionParser"}],"args_string":"(option_parser : OptionParser)","args_html":"(option_parser : OptionParser)","location":null,"def":{"name":"option_parser=","args":[{"name":"option_parser","doc":null,"default_value":"","external_name":"option_parser","restriction":"OptionParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@option_parser = option_parser"}},{"id":"output:IO-instance-method","html_id":"output:IO-instance-method","name":"output","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : IO","args_html":" : IO","location":null,"def":{"name":"output","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"IO","visibility":"Public","body":"@output"}},{"id":"output=(output:IO)-instance-method","html_id":"output=(output:IO)-instance-method","name":"output=","doc":null,"summary":null,"abstract":false,"args":[{"name":"output","doc":null,"default_value":"","external_name":"output","restriction":"IO"}],"args_string":"(output : IO)","args_html":"(output : IO)","location":null,"def":{"name":"output=","args":[{"name":"output","doc":null,"default_value":"","external_name":"output","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@output = output"}},{"id":"print_help_or_call(args:Array(String),io:IO)-instance-method","html_id":"print_help_or_call(args:Array(String),io:IO)-instance-method","name":"print_help_or_call","doc":null,"summary":"<p><span class=\"flag red\">DEPRECATED</span>  Set #output instead of passing in <code>io</code></p>\n\n","abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(String)"},{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"args_string":"(args : Array(String), io : IO)","args_html":"(args : <a href=\"../Array.html\">Array</a>(<a href=\"../String.html\">String</a>), io : IO)","location":{"filename":"src/avram/tasks/db/reset.cr","line_number":3,"url":null},"def":{"name":"print_help_or_call","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(String)"},{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@output = io\nprint_help_or_call(args)\n"}},{"id":"print_help_or_call(args:Array(String))-instance-method","html_id":"print_help_or_call(args:Array(String))-instance-method","name":"print_help_or_call","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(String)"}],"args_string":"(args : Array(String))","args_html":"(args : <a href=\"../Array.html\">Array</a>(<a href=\"../String.html\">String</a>))","location":{"filename":"src/avram/tasks/db/reset.cr","line_number":3,"url":null},"def":{"name":"print_help_or_call","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if wants_help_message?(args)\n  output.puts(help_message)\nelse\n  {% for opt in @type.constant(:PARSER_OPTS) %}\n        set_opt_for_{{ opt.id }}(args)\n        {% end %}\n  option_parser.parse(args)\n  call\nend"}},{"id":"run_task-instance-method","html_id":"run_task-instance-method","name":"run_task","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/tasks/db/reset.cr","line_number":21,"url":null},"def":{"name":"run_task","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Db::Drop.new.run_task\nDb::Create.new.run_task\nDb::Migrate.new.run_task\n"}},{"id":"summary-instance-method","html_id":"summary-instance-method","name":"summary","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/tasks/db/reset.cr","line_number":4,"url":null},"def":{"name":"summary","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"Drop, recreate, and run migrations.\""}}],"macros":[],"types":[]},{"html_id":"avram/Db/Rollback","path":"Db/Rollback.html","kind":"class","full_name":"Db::Rollback","name":"Rollback","abstract":false,"superclass":{"html_id":"avram/BaseTask","kind":"class","full_name":"BaseTask","name":"BaseTask"},"ancestors":[{"html_id":"avram/BaseTask","kind":"class","full_name":"BaseTask","name":"BaseTask"},{"html_id":"avram/LuckyCli/Task","kind":"class","full_name":"LuckyCli::Task","name":"Task"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[{"id":"PARSER_OPTS","name":"PARSER_OPTS","value":"[] of Symbol","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Db","kind":"module","full_name":"Db","name":"Db"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"help_message-instance-method","html_id":"help_message-instance-method","name":"help_message","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/tasks/db/rollback.cr","line_number":6,"url":null},"def":{"name":"help_message","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"#{summary}\\n\\nExample:\\n\\n  lucky db.rollback\\n\""}},{"id":"name-instance-method","html_id":"name-instance-method","name":"name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/tasks/db/rollback.cr","line_number":3,"url":null},"def":{"name":"name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"db.rollback\""}},{"id":"option_parser:OptionParser-instance-method","html_id":"option_parser:OptionParser-instance-method","name":"option_parser","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : OptionParser","args_html":" : OptionParser","location":null,"def":{"name":"option_parser","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"OptionParser","visibility":"Public","body":"@option_parser"}},{"id":"option_parser=(option_parser:OptionParser)-instance-method","html_id":"option_parser=(option_parser:OptionParser)-instance-method","name":"option_parser=","doc":null,"summary":null,"abstract":false,"args":[{"name":"option_parser","doc":null,"default_value":"","external_name":"option_parser","restriction":"OptionParser"}],"args_string":"(option_parser : OptionParser)","args_html":"(option_parser : OptionParser)","location":null,"def":{"name":"option_parser=","args":[{"name":"option_parser","doc":null,"default_value":"","external_name":"option_parser","restriction":"OptionParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@option_parser = option_parser"}},{"id":"output:IO-instance-method","html_id":"output:IO-instance-method","name":"output","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : IO","args_html":" : IO","location":null,"def":{"name":"output","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"IO","visibility":"Public","body":"@output"}},{"id":"output=(output:IO)-instance-method","html_id":"output=(output:IO)-instance-method","name":"output=","doc":null,"summary":null,"abstract":false,"args":[{"name":"output","doc":null,"default_value":"","external_name":"output","restriction":"IO"}],"args_string":"(output : IO)","args_html":"(output : IO)","location":null,"def":{"name":"output=","args":[{"name":"output","doc":null,"default_value":"","external_name":"output","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@output = output"}},{"id":"print_help_or_call(args:Array(String),io:IO)-instance-method","html_id":"print_help_or_call(args:Array(String),io:IO)-instance-method","name":"print_help_or_call","doc":null,"summary":"<p><span class=\"flag red\">DEPRECATED</span>  Set #output instead of passing in <code>io</code></p>\n\n","abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(String)"},{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"args_string":"(args : Array(String), io : IO)","args_html":"(args : <a href=\"../Array.html\">Array</a>(<a href=\"../String.html\">String</a>), io : IO)","location":{"filename":"src/avram/tasks/db/rollback.cr","line_number":3,"url":null},"def":{"name":"print_help_or_call","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(String)"},{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@output = io\nprint_help_or_call(args)\n"}},{"id":"print_help_or_call(args:Array(String))-instance-method","html_id":"print_help_or_call(args:Array(String))-instance-method","name":"print_help_or_call","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(String)"}],"args_string":"(args : Array(String))","args_html":"(args : <a href=\"../Array.html\">Array</a>(<a href=\"../String.html\">String</a>))","location":{"filename":"src/avram/tasks/db/rollback.cr","line_number":3,"url":null},"def":{"name":"print_help_or_call","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if wants_help_message?(args)\n  output.puts(help_message)\nelse\n  {% for opt in @type.constant(:PARSER_OPTS) %}\n        set_opt_for_{{ opt.id }}(args)\n        {% end %}\n  option_parser.parse(args)\n  call\nend"}},{"id":"run_task-instance-method","html_id":"run_task-instance-method","name":"run_task","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/tasks/db/rollback.cr","line_number":17,"url":null},"def":{"name":"run_task","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Avram::Migrator::Runner.new.rollback_one"}},{"id":"summary-instance-method","html_id":"summary-instance-method","name":"summary","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/tasks/db/rollback.cr","line_number":4,"url":null},"def":{"name":"summary","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"Rollback the last migration\""}}],"macros":[],"types":[]},{"html_id":"avram/Db/RollbackAll","path":"Db/RollbackAll.html","kind":"class","full_name":"Db::RollbackAll","name":"RollbackAll","abstract":false,"superclass":{"html_id":"avram/BaseTask","kind":"class","full_name":"BaseTask","name":"BaseTask"},"ancestors":[{"html_id":"avram/BaseTask","kind":"class","full_name":"BaseTask","name":"BaseTask"},{"html_id":"avram/LuckyCli/Task","kind":"class","full_name":"LuckyCli::Task","name":"Task"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[{"id":"PARSER_OPTS","name":"PARSER_OPTS","value":"[] of Symbol","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Db","kind":"module","full_name":"Db","name":"Db"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"help_message-instance-method","html_id":"help_message-instance-method","name":"help_message","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/tasks/db/rollback_all.cr","line_number":6,"url":null},"def":{"name":"help_message","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"#{summary}\\n\\nYou may also want to look at 'lucky db.drop'.\\n\\nExample:\\n\\n  lucky db.rollback_all\\n\""}},{"id":"name-instance-method","html_id":"name-instance-method","name":"name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/tasks/db/rollback_all.cr","line_number":3,"url":null},"def":{"name":"name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"db.rollback_all\""}},{"id":"option_parser:OptionParser-instance-method","html_id":"option_parser:OptionParser-instance-method","name":"option_parser","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : OptionParser","args_html":" : OptionParser","location":null,"def":{"name":"option_parser","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"OptionParser","visibility":"Public","body":"@option_parser"}},{"id":"option_parser=(option_parser:OptionParser)-instance-method","html_id":"option_parser=(option_parser:OptionParser)-instance-method","name":"option_parser=","doc":null,"summary":null,"abstract":false,"args":[{"name":"option_parser","doc":null,"default_value":"","external_name":"option_parser","restriction":"OptionParser"}],"args_string":"(option_parser : OptionParser)","args_html":"(option_parser : OptionParser)","location":null,"def":{"name":"option_parser=","args":[{"name":"option_parser","doc":null,"default_value":"","external_name":"option_parser","restriction":"OptionParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@option_parser = option_parser"}},{"id":"output:IO-instance-method","html_id":"output:IO-instance-method","name":"output","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : IO","args_html":" : IO","location":null,"def":{"name":"output","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"IO","visibility":"Public","body":"@output"}},{"id":"output=(output:IO)-instance-method","html_id":"output=(output:IO)-instance-method","name":"output=","doc":null,"summary":null,"abstract":false,"args":[{"name":"output","doc":null,"default_value":"","external_name":"output","restriction":"IO"}],"args_string":"(output : IO)","args_html":"(output : IO)","location":null,"def":{"name":"output=","args":[{"name":"output","doc":null,"default_value":"","external_name":"output","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@output = output"}},{"id":"print_help_or_call(args:Array(String),io:IO)-instance-method","html_id":"print_help_or_call(args:Array(String),io:IO)-instance-method","name":"print_help_or_call","doc":null,"summary":"<p><span class=\"flag red\">DEPRECATED</span>  Set #output instead of passing in <code>io</code></p>\n\n","abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(String)"},{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"args_string":"(args : Array(String), io : IO)","args_html":"(args : <a href=\"../Array.html\">Array</a>(<a href=\"../String.html\">String</a>), io : IO)","location":{"filename":"src/avram/tasks/db/rollback_all.cr","line_number":3,"url":null},"def":{"name":"print_help_or_call","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(String)"},{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@output = io\nprint_help_or_call(args)\n"}},{"id":"print_help_or_call(args:Array(String))-instance-method","html_id":"print_help_or_call(args:Array(String))-instance-method","name":"print_help_or_call","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(String)"}],"args_string":"(args : Array(String))","args_html":"(args : <a href=\"../Array.html\">Array</a>(<a href=\"../String.html\">String</a>))","location":{"filename":"src/avram/tasks/db/rollback_all.cr","line_number":3,"url":null},"def":{"name":"print_help_or_call","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if wants_help_message?(args)\n  output.puts(help_message)\nelse\n  {% for opt in @type.constant(:PARSER_OPTS) %}\n        set_opt_for_{{ opt.id }}(args)\n        {% end %}\n  option_parser.parse(args)\n  call\nend"}},{"id":"run_task-instance-method","html_id":"run_task-instance-method","name":"run_task","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/tasks/db/rollback_all.cr","line_number":19,"url":null},"def":{"name":"run_task","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Avram::Migrator::Runner.new.rollback_all\nputs(\"Done rolling back all migrations\".colorize(:green))\n"}},{"id":"summary-instance-method","html_id":"summary-instance-method","name":"summary","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/tasks/db/rollback_all.cr","line_number":4,"url":null},"def":{"name":"summary","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"Rollback all migrations\""}}],"macros":[],"types":[]},{"html_id":"avram/Db/RollbackTo","path":"Db/RollbackTo.html","kind":"class","full_name":"Db::RollbackTo","name":"RollbackTo","abstract":false,"superclass":{"html_id":"avram/BaseTask","kind":"class","full_name":"BaseTask","name":"BaseTask"},"ancestors":[{"html_id":"avram/BaseTask","kind":"class","full_name":"BaseTask","name":"BaseTask"},{"html_id":"avram/LuckyCli/Task","kind":"class","full_name":"LuckyCli::Task","name":"Task"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[{"id":"PARSER_OPTS","name":"PARSER_OPTS","value":"[] of Symbol","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Db","kind":"module","full_name":"Db","name":"Db"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"help_message-instance-method","html_id":"help_message-instance-method","name":"help_message","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/tasks/db/rollback_to.cr","line_number":6,"url":null},"def":{"name":"help_message","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"#{summary}\\n\\nYou can get the migration version from the filename or by running 'lucky db.migration.status'\\n\\nExample:\\n\\n  lucky db.rollback_to 20180802180356\\n\""}},{"id":"name-instance-method","html_id":"name-instance-method","name":"name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/tasks/db/rollback_to.cr","line_number":3,"url":null},"def":{"name":"name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"db.rollback_to\""}},{"id":"option_parser:OptionParser-instance-method","html_id":"option_parser:OptionParser-instance-method","name":"option_parser","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : OptionParser","args_html":" : OptionParser","location":null,"def":{"name":"option_parser","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"OptionParser","visibility":"Public","body":"@option_parser"}},{"id":"option_parser=(option_parser:OptionParser)-instance-method","html_id":"option_parser=(option_parser:OptionParser)-instance-method","name":"option_parser=","doc":null,"summary":null,"abstract":false,"args":[{"name":"option_parser","doc":null,"default_value":"","external_name":"option_parser","restriction":"OptionParser"}],"args_string":"(option_parser : OptionParser)","args_html":"(option_parser : OptionParser)","location":null,"def":{"name":"option_parser=","args":[{"name":"option_parser","doc":null,"default_value":"","external_name":"option_parser","restriction":"OptionParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@option_parser = option_parser"}},{"id":"output:IO-instance-method","html_id":"output:IO-instance-method","name":"output","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : IO","args_html":" : IO","location":null,"def":{"name":"output","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"IO","visibility":"Public","body":"@output"}},{"id":"output=(output:IO)-instance-method","html_id":"output=(output:IO)-instance-method","name":"output=","doc":null,"summary":null,"abstract":false,"args":[{"name":"output","doc":null,"default_value":"","external_name":"output","restriction":"IO"}],"args_string":"(output : IO)","args_html":"(output : IO)","location":null,"def":{"name":"output=","args":[{"name":"output","doc":null,"default_value":"","external_name":"output","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@output = output"}},{"id":"print_help_or_call(args:Array(String),io:IO)-instance-method","html_id":"print_help_or_call(args:Array(String),io:IO)-instance-method","name":"print_help_or_call","doc":null,"summary":"<p><span class=\"flag red\">DEPRECATED</span>  Set #output instead of passing in <code>io</code></p>\n\n","abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(String)"},{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"args_string":"(args : Array(String), io : IO)","args_html":"(args : <a href=\"../Array.html\">Array</a>(<a href=\"../String.html\">String</a>), io : IO)","location":{"filename":"src/avram/tasks/db/rollback_to.cr","line_number":3,"url":null},"def":{"name":"print_help_or_call","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(String)"},{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@output = io\nprint_help_or_call(args)\n"}},{"id":"print_help_or_call(args:Array(String))-instance-method","html_id":"print_help_or_call(args:Array(String))-instance-method","name":"print_help_or_call","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(String)"}],"args_string":"(args : Array(String))","args_html":"(args : <a href=\"../Array.html\">Array</a>(<a href=\"../String.html\">String</a>))","location":{"filename":"src/avram/tasks/db/rollback_to.cr","line_number":3,"url":null},"def":{"name":"print_help_or_call","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if wants_help_message?(args)\n  output.puts(help_message)\nelse\n  {% for opt in @type.constant(:PARSER_OPTS) %}\n        set_opt_for_{{ opt.id }}(args)\n        {% end %}\n  option_parser.parse(args)\n  call\nend"}},{"id":"run_task-instance-method","html_id":"run_task-instance-method","name":"run_task","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/tasks/db/rollback_to.cr","line_number":19,"url":null},"def":{"name":"run_task","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"version = ARGV.first?\nif version && version.to_i64?\n  Avram::Migrator::Runner.new.rollback_to(version.to_i64)\nelse\n  raise((\"Migration version is required. Example: lucky db.rollback_to 20180802180356\".colorize(:red)).to_s)\nend\n"}},{"id":"summary-instance-method","html_id":"summary-instance-method","name":"summary","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/tasks/db/rollback_to.cr","line_number":4,"url":null},"def":{"name":"summary","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"Rollback to a specific migration\""}}],"macros":[],"types":[]},{"html_id":"avram/Db/Schema","path":"Db/Schema.html","kind":"module","full_name":"Db::Schema","name":"Schema","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Db","kind":"module","full_name":"Db","name":"Db"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"avram/Db/Schema/Dump","path":"Db/Schema/Dump.html","kind":"class","full_name":"Db::Schema::Dump","name":"Dump","abstract":false,"superclass":{"html_id":"avram/BaseTask","kind":"class","full_name":"BaseTask","name":"BaseTask"},"ancestors":[{"html_id":"avram/BaseTask","kind":"class","full_name":"BaseTask","name":"BaseTask"},{"html_id":"avram/LuckyCli/Task","kind":"class","full_name":"LuckyCli::Task","name":"Task"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[{"id":"PARSER_OPTS","name":"PARSER_OPTS","value":"[] of Symbol","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Db/Schema","kind":"module","full_name":"Db::Schema","name":"Schema"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(dump_to:String?=nil,quiet:Bool=false)-class-method","html_id":"new(dump_to:String?=nil,quiet:Bool=false)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"dump_to","doc":null,"default_value":"nil","external_name":"dump_to","restriction":"String | ::Nil"},{"name":"quiet","doc":null,"default_value":"false","external_name":"quiet","restriction":"Bool"}],"args_string":"(dump_to : String? = <span class=\"n\">nil</span>, quiet : Bool = <span class=\"n\">false</span>)","args_html":"(dump_to : <a href=\"../../String.html\">String</a>? = <span class=\"n\">nil</span>, quiet : <a href=\"../../Bool.html\">Bool</a> = <span class=\"n\">false</span>)","location":{"filename":"src/avram/tasks/db/schema_dump.cr","line_number":4,"url":null},"def":{"name":"new","args":[{"name":"dump_to","doc":null,"default_value":"nil","external_name":"dump_to","restriction":"String | ::Nil"},{"name":"quiet","doc":null,"default_value":"false","external_name":"quiet","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(dump_to, quiet)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"help_message-instance-method","html_id":"help_message-instance-method","name":"help_message","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/tasks/db/schema_dump.cr","line_number":7,"url":null},"def":{"name":"help_message","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"#{summary}\\n\\nYou must specify the path that you want Avram to dump the sql to. Note\\nthat this dumps the schema but does not dump any data.\\n\\nExample:\\n\\n  lucky db.schema.dump structure.sql\\n\""}},{"id":"name-instance-method","html_id":"name-instance-method","name":"name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/tasks/db/schema_dump.cr","line_number":1,"url":null},"def":{"name":"name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"db.schema.dump\""}},{"id":"option_parser:OptionParser-instance-method","html_id":"option_parser:OptionParser-instance-method","name":"option_parser","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : OptionParser","args_html":" : OptionParser","location":null,"def":{"name":"option_parser","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"OptionParser","visibility":"Public","body":"@option_parser"}},{"id":"option_parser=(option_parser:OptionParser)-instance-method","html_id":"option_parser=(option_parser:OptionParser)-instance-method","name":"option_parser=","doc":null,"summary":null,"abstract":false,"args":[{"name":"option_parser","doc":null,"default_value":"","external_name":"option_parser","restriction":"OptionParser"}],"args_string":"(option_parser : OptionParser)","args_html":"(option_parser : OptionParser)","location":null,"def":{"name":"option_parser=","args":[{"name":"option_parser","doc":null,"default_value":"","external_name":"option_parser","restriction":"OptionParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@option_parser = option_parser"}},{"id":"output:IO-instance-method","html_id":"output:IO-instance-method","name":"output","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : IO","args_html":" : IO","location":null,"def":{"name":"output","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"IO","visibility":"Public","body":"@output"}},{"id":"output=(output:IO)-instance-method","html_id":"output=(output:IO)-instance-method","name":"output=","doc":null,"summary":null,"abstract":false,"args":[{"name":"output","doc":null,"default_value":"","external_name":"output","restriction":"IO"}],"args_string":"(output : IO)","args_html":"(output : IO)","location":null,"def":{"name":"output=","args":[{"name":"output","doc":null,"default_value":"","external_name":"output","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@output = output"}},{"id":"print_help_or_call(args:Array(String),io:IO)-instance-method","html_id":"print_help_or_call(args:Array(String),io:IO)-instance-method","name":"print_help_or_call","doc":null,"summary":"<p><span class=\"flag red\">DEPRECATED</span>  Set #output instead of passing in <code>io</code></p>\n\n","abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(String)"},{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"args_string":"(args : Array(String), io : IO)","args_html":"(args : <a href=\"../../Array.html\">Array</a>(<a href=\"../../String.html\">String</a>), io : IO)","location":{"filename":"src/avram/tasks/db/schema_dump.cr","line_number":1,"url":null},"def":{"name":"print_help_or_call","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(String)"},{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@output = io\nprint_help_or_call(args)\n"}},{"id":"print_help_or_call(args:Array(String))-instance-method","html_id":"print_help_or_call(args:Array(String))-instance-method","name":"print_help_or_call","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(String)"}],"args_string":"(args : Array(String))","args_html":"(args : <a href=\"../../Array.html\">Array</a>(<a href=\"../../String.html\">String</a>))","location":{"filename":"src/avram/tasks/db/schema_dump.cr","line_number":1,"url":null},"def":{"name":"print_help_or_call","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if wants_help_message?(args)\n  output.puts(help_message)\nelse\n  {% for opt in @type.constant(:PARSER_OPTS) %}\n        set_opt_for_{{ opt.id }}(args)\n        {% end %}\n  option_parser.parse(args)\n  call\nend"}},{"id":"run_task-instance-method","html_id":"run_task-instance-method","name":"run_task","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/tasks/db/schema_dump.cr","line_number":21,"url":null},"def":{"name":"run_task","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"dump_to = (@dump_to || ARGV.first?) || (raise(\"Must pass a file path to dump the db structure to\"))\nAvram::Migrator::Runner.dump_db(dump_to, @quiet)\n"}},{"id":"summary-instance-method","html_id":"summary-instance-method","name":"summary","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/tasks/db/schema_dump.cr","line_number":2,"url":null},"def":{"name":"summary","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"Export database schema to a sql file\""}}],"macros":[],"types":[]},{"html_id":"avram/Db/Schema/Restore","path":"Db/Schema/Restore.html","kind":"class","full_name":"Db::Schema::Restore","name":"Restore","abstract":false,"superclass":{"html_id":"avram/BaseTask","kind":"class","full_name":"BaseTask","name":"BaseTask"},"ancestors":[{"html_id":"avram/BaseTask","kind":"class","full_name":"BaseTask","name":"BaseTask"},{"html_id":"avram/LuckyCli/Task","kind":"class","full_name":"LuckyCli::Task","name":"Task"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[{"id":"PARSER_OPTS","name":"PARSER_OPTS","value":"[] of Symbol","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Db/Schema","kind":"module","full_name":"Db::Schema","name":"Schema"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(import_file_path:String?=nil,quiet:Bool=false)-class-method","html_id":"new(import_file_path:String?=nil,quiet:Bool=false)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"import_file_path","doc":null,"default_value":"nil","external_name":"import_file_path","restriction":"String | ::Nil"},{"name":"quiet","doc":null,"default_value":"false","external_name":"quiet","restriction":"Bool"}],"args_string":"(import_file_path : String? = <span class=\"n\">nil</span>, quiet : Bool = <span class=\"n\">false</span>)","args_html":"(import_file_path : <a href=\"../../String.html\">String</a>? = <span class=\"n\">nil</span>, quiet : <a href=\"../../Bool.html\">Bool</a> = <span class=\"n\">false</span>)","location":{"filename":"src/avram/tasks/db/schema_restore.cr","line_number":4,"url":null},"def":{"name":"new","args":[{"name":"import_file_path","doc":null,"default_value":"nil","external_name":"import_file_path","restriction":"String | ::Nil"},{"name":"quiet","doc":null,"default_value":"false","external_name":"quiet","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(import_file_path, quiet)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"help_message-instance-method","html_id":"help_message-instance-method","name":"help_message","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/tasks/db/schema_restore.cr","line_number":7,"url":null},"def":{"name":"help_message","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"#{summary}\\n\\nYou must specify the path to the sql that you want Avram to restore from.\\n\\nExample:\\n\\n  lucky db.schema.restore structure.sql\\n\""}},{"id":"name-instance-method","html_id":"name-instance-method","name":"name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/tasks/db/schema_restore.cr","line_number":1,"url":null},"def":{"name":"name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"db.schema.restore\""}},{"id":"option_parser:OptionParser-instance-method","html_id":"option_parser:OptionParser-instance-method","name":"option_parser","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : OptionParser","args_html":" : OptionParser","location":null,"def":{"name":"option_parser","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"OptionParser","visibility":"Public","body":"@option_parser"}},{"id":"option_parser=(option_parser:OptionParser)-instance-method","html_id":"option_parser=(option_parser:OptionParser)-instance-method","name":"option_parser=","doc":null,"summary":null,"abstract":false,"args":[{"name":"option_parser","doc":null,"default_value":"","external_name":"option_parser","restriction":"OptionParser"}],"args_string":"(option_parser : OptionParser)","args_html":"(option_parser : OptionParser)","location":null,"def":{"name":"option_parser=","args":[{"name":"option_parser","doc":null,"default_value":"","external_name":"option_parser","restriction":"OptionParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@option_parser = option_parser"}},{"id":"output:IO-instance-method","html_id":"output:IO-instance-method","name":"output","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : IO","args_html":" : IO","location":null,"def":{"name":"output","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"IO","visibility":"Public","body":"@output"}},{"id":"output=(output:IO)-instance-method","html_id":"output=(output:IO)-instance-method","name":"output=","doc":null,"summary":null,"abstract":false,"args":[{"name":"output","doc":null,"default_value":"","external_name":"output","restriction":"IO"}],"args_string":"(output : IO)","args_html":"(output : IO)","location":null,"def":{"name":"output=","args":[{"name":"output","doc":null,"default_value":"","external_name":"output","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@output = output"}},{"id":"print_help_or_call(args:Array(String),io:IO)-instance-method","html_id":"print_help_or_call(args:Array(String),io:IO)-instance-method","name":"print_help_or_call","doc":null,"summary":"<p><span class=\"flag red\">DEPRECATED</span>  Set #output instead of passing in <code>io</code></p>\n\n","abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(String)"},{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"args_string":"(args : Array(String), io : IO)","args_html":"(args : <a href=\"../../Array.html\">Array</a>(<a href=\"../../String.html\">String</a>), io : IO)","location":{"filename":"src/avram/tasks/db/schema_restore.cr","line_number":1,"url":null},"def":{"name":"print_help_or_call","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(String)"},{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@output = io\nprint_help_or_call(args)\n"}},{"id":"print_help_or_call(args:Array(String))-instance-method","html_id":"print_help_or_call(args:Array(String))-instance-method","name":"print_help_or_call","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(String)"}],"args_string":"(args : Array(String))","args_html":"(args : <a href=\"../../Array.html\">Array</a>(<a href=\"../../String.html\">String</a>))","location":{"filename":"src/avram/tasks/db/schema_restore.cr","line_number":1,"url":null},"def":{"name":"print_help_or_call","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if wants_help_message?(args)\n  output.puts(help_message)\nelse\n  {% for opt in @type.constant(:PARSER_OPTS) %}\n        set_opt_for_{{ opt.id }}(args)\n        {% end %}\n  option_parser.parse(args)\n  call\nend"}},{"id":"run_task-instance-method","html_id":"run_task-instance-method","name":"run_task","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/tasks/db/schema_restore.cr","line_number":20,"url":null},"def":{"name":"run_task","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"import_file_path = (@import_file_path || ARGV.first?) || (raise(\"A path to the import SQL file must be provided\"))\nAvram::Migrator::Runner.restore_db(import_file_path.as(String), @quiet)\n"}},{"id":"summary-instance-method","html_id":"summary-instance-method","name":"summary","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/tasks/db/schema_restore.cr","line_number":2,"url":null},"def":{"name":"summary","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"Restore database from a sql dump file\""}}],"macros":[],"types":[]}]},{"html_id":"avram/Db/Setup","path":"Db/Setup.html","kind":"class","full_name":"Db::Setup","name":"Setup","abstract":false,"superclass":{"html_id":"avram/BaseTask","kind":"class","full_name":"BaseTask","name":"BaseTask"},"ancestors":[{"html_id":"avram/BaseTask","kind":"class","full_name":"BaseTask","name":"BaseTask"},{"html_id":"avram/LuckyCli/Task","kind":"class","full_name":"LuckyCli::Task","name":"Task"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[{"id":"PARSER_OPTS","name":"PARSER_OPTS","value":"[] of Symbol","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Db","kind":"module","full_name":"Db","name":"Db"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(quiet:Bool=false)-class-method","html_id":"new(quiet:Bool=false)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"quiet","doc":null,"default_value":"false","external_name":"quiet","restriction":"Bool"}],"args_string":"(quiet : Bool = <span class=\"n\">false</span>)","args_html":"(quiet : <a href=\"../Bool.html\">Bool</a> = <span class=\"n\">false</span>)","location":{"filename":"src/avram/tasks/db/setup.cr","line_number":4,"url":null},"def":{"name":"new","args":[{"name":"quiet","doc":null,"default_value":"false","external_name":"quiet","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(quiet)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"help_message-instance-method","html_id":"help_message-instance-method","name":"help_message","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/tasks/db/setup.cr","line_number":7,"url":null},"def":{"name":"help_message","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"#{summary}\\n\\nThis task will run the following:\\n  * db.create   - Create the database from config/database.cr\\n  * db.migrate  - Migrate all pending migrations from db/migrations/\\n\\n\\nExamples:\\n\\n  lucky db.setup\\n  LUCKY_ENV=test lucky db.setup # Setup test database\\n\""}},{"id":"name-instance-method","html_id":"name-instance-method","name":"name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/tasks/db/setup.cr","line_number":1,"url":null},"def":{"name":"name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"db.setup\""}},{"id":"option_parser:OptionParser-instance-method","html_id":"option_parser:OptionParser-instance-method","name":"option_parser","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : OptionParser","args_html":" : OptionParser","location":null,"def":{"name":"option_parser","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"OptionParser","visibility":"Public","body":"@option_parser"}},{"id":"option_parser=(option_parser:OptionParser)-instance-method","html_id":"option_parser=(option_parser:OptionParser)-instance-method","name":"option_parser=","doc":null,"summary":null,"abstract":false,"args":[{"name":"option_parser","doc":null,"default_value":"","external_name":"option_parser","restriction":"OptionParser"}],"args_string":"(option_parser : OptionParser)","args_html":"(option_parser : OptionParser)","location":null,"def":{"name":"option_parser=","args":[{"name":"option_parser","doc":null,"default_value":"","external_name":"option_parser","restriction":"OptionParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@option_parser = option_parser"}},{"id":"output:IO-instance-method","html_id":"output:IO-instance-method","name":"output","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : IO","args_html":" : IO","location":null,"def":{"name":"output","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"IO","visibility":"Public","body":"@output"}},{"id":"output=(output:IO)-instance-method","html_id":"output=(output:IO)-instance-method","name":"output=","doc":null,"summary":null,"abstract":false,"args":[{"name":"output","doc":null,"default_value":"","external_name":"output","restriction":"IO"}],"args_string":"(output : IO)","args_html":"(output : IO)","location":null,"def":{"name":"output=","args":[{"name":"output","doc":null,"default_value":"","external_name":"output","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@output = output"}},{"id":"print_help_or_call(args:Array(String),io:IO)-instance-method","html_id":"print_help_or_call(args:Array(String),io:IO)-instance-method","name":"print_help_or_call","doc":null,"summary":"<p><span class=\"flag red\">DEPRECATED</span>  Set #output instead of passing in <code>io</code></p>\n\n","abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(String)"},{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"args_string":"(args : Array(String), io : IO)","args_html":"(args : <a href=\"../Array.html\">Array</a>(<a href=\"../String.html\">String</a>), io : IO)","location":{"filename":"src/avram/tasks/db/setup.cr","line_number":1,"url":null},"def":{"name":"print_help_or_call","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(String)"},{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@output = io\nprint_help_or_call(args)\n"}},{"id":"print_help_or_call(args:Array(String))-instance-method","html_id":"print_help_or_call(args:Array(String))-instance-method","name":"print_help_or_call","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(String)"}],"args_string":"(args : Array(String))","args_html":"(args : <a href=\"../Array.html\">Array</a>(<a href=\"../String.html\">String</a>))","location":{"filename":"src/avram/tasks/db/setup.cr","line_number":1,"url":null},"def":{"name":"print_help_or_call","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if wants_help_message?(args)\n  output.puts(help_message)\nelse\n  {% for opt in @type.constant(:PARSER_OPTS) %}\n        set_opt_for_{{ opt.id }}(args)\n        {% end %}\n  option_parser.parse(args)\n  call\nend"}},{"id":"run_task-instance-method","html_id":"run_task-instance-method","name":"run_task","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/tasks/db/setup.cr","line_number":24,"url":null},"def":{"name":"run_task","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Avram::Migrator::Runner.create_db(@quiet)\n(Avram::Migrator::Runner.new(@quiet)).run_pending_migrations\n"}},{"id":"summary-instance-method","html_id":"summary-instance-method","name":"summary","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/tasks/db/setup.cr","line_number":2,"url":null},"def":{"name":"summary","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"Runs a few tasks for setting up your database\""}}],"macros":[],"types":[]},{"html_id":"avram/Db/VerifyConnection","path":"Db/VerifyConnection.html","kind":"class","full_name":"Db::VerifyConnection","name":"VerifyConnection","abstract":false,"superclass":{"html_id":"avram/BaseTask","kind":"class","full_name":"BaseTask","name":"BaseTask"},"ancestors":[{"html_id":"avram/BaseTask","kind":"class","full_name":"BaseTask","name":"BaseTask"},{"html_id":"avram/LuckyCli/Task","kind":"class","full_name":"LuckyCli::Task","name":"Task"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[{"id":"PARSER_OPTS","name":"PARSER_OPTS","value":"[] of Symbol","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Db","kind":"module","full_name":"Db","name":"Db"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(quiet:Bool=false)-class-method","html_id":"new(quiet:Bool=false)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"quiet","doc":null,"default_value":"false","external_name":"quiet","restriction":"Bool"}],"args_string":"(quiet : Bool = <span class=\"n\">false</span>)","args_html":"(quiet : <a href=\"../Bool.html\">Bool</a> = <span class=\"n\">false</span>)","location":{"filename":"src/avram/tasks/db/verify_connection.cr","line_number":5,"url":null},"def":{"name":"new","args":[{"name":"quiet","doc":null,"default_value":"false","external_name":"quiet","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(quiet)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"help_message-instance-method","html_id":"help_message-instance-method","name":"help_message","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/tasks/db/verify_connection.cr","line_number":8,"url":null},"def":{"name":"help_message","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"#{summary}\\n\\nThe connection settings are typically defined in config/database.cr\\n\\nExamples:\\n\\n  lucky db.verify_connection\\n  LUCKY_ENV=test lucky db.verify_connection # Verify test db connection\\n\""}},{"id":"name-instance-method","html_id":"name-instance-method","name":"name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/tasks/db/verify_connection.cr","line_number":1,"url":null},"def":{"name":"name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"db.verify_connection\""}},{"id":"option_parser:OptionParser-instance-method","html_id":"option_parser:OptionParser-instance-method","name":"option_parser","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : OptionParser","args_html":" : OptionParser","location":null,"def":{"name":"option_parser","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"OptionParser","visibility":"Public","body":"@option_parser"}},{"id":"option_parser=(option_parser:OptionParser)-instance-method","html_id":"option_parser=(option_parser:OptionParser)-instance-method","name":"option_parser=","doc":null,"summary":null,"abstract":false,"args":[{"name":"option_parser","doc":null,"default_value":"","external_name":"option_parser","restriction":"OptionParser"}],"args_string":"(option_parser : OptionParser)","args_html":"(option_parser : OptionParser)","location":null,"def":{"name":"option_parser=","args":[{"name":"option_parser","doc":null,"default_value":"","external_name":"option_parser","restriction":"OptionParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@option_parser = option_parser"}},{"id":"output:IO-instance-method","html_id":"output:IO-instance-method","name":"output","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : IO","args_html":" : IO","location":null,"def":{"name":"output","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"IO","visibility":"Public","body":"@output"}},{"id":"output=(output:IO)-instance-method","html_id":"output=(output:IO)-instance-method","name":"output=","doc":null,"summary":null,"abstract":false,"args":[{"name":"output","doc":null,"default_value":"","external_name":"output","restriction":"IO"}],"args_string":"(output : IO)","args_html":"(output : IO)","location":null,"def":{"name":"output=","args":[{"name":"output","doc":null,"default_value":"","external_name":"output","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@output = output"}},{"id":"print_help_or_call(args:Array(String),io:IO)-instance-method","html_id":"print_help_or_call(args:Array(String),io:IO)-instance-method","name":"print_help_or_call","doc":null,"summary":"<p><span class=\"flag red\">DEPRECATED</span>  Set #output instead of passing in <code>io</code></p>\n\n","abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(String)"},{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"args_string":"(args : Array(String), io : IO)","args_html":"(args : <a href=\"../Array.html\">Array</a>(<a href=\"../String.html\">String</a>), io : IO)","location":{"filename":"src/avram/tasks/db/verify_connection.cr","line_number":1,"url":null},"def":{"name":"print_help_or_call","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(String)"},{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@output = io\nprint_help_or_call(args)\n"}},{"id":"print_help_or_call(args:Array(String))-instance-method","html_id":"print_help_or_call(args:Array(String))-instance-method","name":"print_help_or_call","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(String)"}],"args_string":"(args : Array(String))","args_html":"(args : <a href=\"../Array.html\">Array</a>(<a href=\"../String.html\">String</a>))","location":{"filename":"src/avram/tasks/db/verify_connection.cr","line_number":1,"url":null},"def":{"name":"print_help_or_call","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if wants_help_message?(args)\n  output.puts(help_message)\nelse\n  {% for opt in @type.constant(:PARSER_OPTS) %}\n        set_opt_for_{{ opt.id }}(args)\n        {% end %}\n  option_parser.parse(args)\n  call\nend"}},{"id":"quiet?:Bool-instance-method","html_id":"quiet?:Bool-instance-method","name":"quiet?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","args_html":" : <a href=\"../Bool.html\">Bool</a>","location":{"filename":"src/avram/tasks/db/verify_connection.cr","line_number":3,"url":null},"def":{"name":"quiet?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@quiet"}},{"id":"run_task-instance-method","html_id":"run_task-instance-method","name":"run_task","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/tasks/db/verify_connection.cr","line_number":22,"url":null},"def":{"name":"run_task","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"begin\n  DB.open(Avram::Migrator::Runner.database_url) do |_db|\n  end\n  if quiet?\n  else\n    puts(\"✔ Connection verified\")\n  end\nrescue PQ::ConnectionError | DB::ConnectionRefused\n  raise(\"Unable to connect to Postgres for database '#{Avram.settings.database_to_migrate}'.\\n\\nThis is what we tried to connect to:\\n\\n  * host: #{Avram::Migrator::Runner.db_host}\\n  * port: #{Avram::Migrator::Runner.db_port}\\n  * database: #{Avram::Migrator::Runner.db_name}\\n  * username: #{Avram::Migrator::Runner.db_user}\\n  * password: check config/database.cr\\n\\nTo fix, try this...\\n\\n  ▸ Make sure Postgres is running.\\n  ▸ Check connection settings in config/database.cr.\\n  ▸ If the database has not been created yet, run 'lucky db.create'\\n  ▸ Then run 'lucky db.verify_connection' to make sure it can connect.\\n\")\nend"}},{"id":"summary-instance-method","html_id":"summary-instance-method","name":"summary","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/tasks/db/verify_connection.cr","line_number":2,"url":null},"def":{"name":"summary","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"Verify connection to postgres\""}}],"macros":[],"types":[]}]},{"html_id":"avram/Float64","path":"Float64.html","kind":"struct","full_name":"Float64","name":"Float64","abstract":false,"superclass":{"html_id":"avram/Float","kind":"struct","full_name":"Float","name":"Float"},"ancestors":[{"html_id":"avram/Float","kind":"struct","full_name":"Float","name":"Float"},{"html_id":"avram/Number","kind":"struct","full_name":"Number","name":"Number"},{"html_id":"avram/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"avram/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[{"id":"adapter-class-method","html_id":"adapter-class-method","name":"adapter","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/charms/float64_extensions.cr","line_number":2,"url":null},"def":{"name":"adapter","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Lucky"}}],"constructors":[],"instance_methods":[{"id":"blank?-instance-method","html_id":"blank?-instance-method","name":"blank?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/blank_extensions.cr","line_number":32,"url":null},"def":{"name":"blank?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.nil?"}}],"macros":[],"types":[{"html_id":"avram/Float64/Lucky","path":"Float64/Lucky.html","kind":"module","full_name":"Float64::Lucky","name":"Lucky","abstract":false,"superclass":null,"ancestors":[{"html_id":"avram/Avram/Type","kind":"module","full_name":"Avram::Type","name":"Type"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[{"html_id":"avram/Avram/Type","kind":"module","full_name":"Avram::Type","name":"Type"}],"extended_modules":[{"html_id":"avram/Float64/Lucky","kind":"module","full_name":"Float64::Lucky","name":"Lucky"}],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Float64","kind":"struct","full_name":"Float64","name":"Float64"},"doc":null,"summary":null,"class_methods":[{"id":"criteria(query:T,column)forallT-class-method","html_id":"criteria(query:T,column)forallT-class-method","name":"criteria","doc":null,"summary":null,"abstract":false,"args":[{"name":"query","doc":null,"default_value":"","external_name":"query","restriction":"T"},{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":""}],"args_string":"(query : T, column) forall T","args_html":"(query : T, column) forall T","location":{"filename":"src/avram/charms/float64_extensions.cr","line_number":10,"url":null},"def":{"name":"criteria","args":[{"name":"query","doc":null,"default_value":"","external_name":"query","restriction":"T"},{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Criteria(T, Float64).new(query, column)"}}],"constructors":[],"instance_methods":[{"id":"from_db!(value:Float64)-instance-method","html_id":"from_db!(value:Float64)-instance-method","name":"from_db!","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Float64"}],"args_string":"(value : Float64)","args_html":"(value : <a href=\"../Float64.html\">Float64</a>)","location":{"filename":"src/avram/charms/float64_extensions.cr","line_number":14,"url":null},"def":{"name":"from_db!","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value"}},{"id":"from_db!(value:PG::Numeric)-instance-method","html_id":"from_db!(value:PG::Numeric)-instance-method","name":"from_db!","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"PG::Numeric"}],"args_string":"(value : PG::Numeric)","args_html":"(value : PG::Numeric)","location":{"filename":"src/avram/charms/float64_extensions.cr","line_number":18,"url":null},"def":{"name":"from_db!","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"PG::Numeric"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value.to_f"}},{"id":"parse(values:Array(PG::Numeric))-instance-method","html_id":"parse(values:Array(PG::Numeric))-instance-method","name":"parse","doc":null,"summary":null,"abstract":false,"args":[{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":"Array(PG::Numeric)"}],"args_string":"(values : Array(PG::Numeric))","args_html":"(values : <a href=\"../Array.html\">Array</a>(PG::Numeric))","location":{"filename":"src/avram/charms/float64_extensions.cr","line_number":34,"url":null},"def":{"name":"parse","args":[{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":"Array(PG::Numeric)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SuccessfulCast(Array(Float64)).new(values.map(&.to_f))"}},{"id":"parse(value:Float64)-instance-method","html_id":"parse(value:Float64)-instance-method","name":"parse","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Float64"}],"args_string":"(value : Float64)","args_html":"(value : <a href=\"../Float64.html\">Float64</a>)","location":{"filename":"src/avram/charms/float64_extensions.cr","line_number":22,"url":null},"def":{"name":"parse","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SuccessfulCast(Float64).new(value)"}},{"id":"parse(values:Array(Float64))-instance-method","html_id":"parse(values:Array(Float64))-instance-method","name":"parse","doc":null,"summary":null,"abstract":false,"args":[{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":"Array(Float64)"}],"args_string":"(values : Array(Float64))","args_html":"(values : <a href=\"../Array.html\">Array</a>(<a href=\"../Float64.html\">Float64</a>))","location":{"filename":"src/avram/charms/float64_extensions.cr","line_number":26,"url":null},"def":{"name":"parse","args":[{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":"Array(Float64)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SuccessfulCast(Array(Float64)).new(values)"}},{"id":"parse(value:String)-instance-method","html_id":"parse(value:String)-instance-method","name":"parse","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"String"}],"args_string":"(value : String)","args_html":"(value : <a href=\"../String.html\">String</a>)","location":{"filename":"src/avram/charms/float64_extensions.cr","line_number":38,"url":null},"def":{"name":"parse","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"begin\n  SuccessfulCast(Float64).new(value.to_f64)\nrescue ArgumentError\n  FailedCast.new\nend"}},{"id":"parse(value:Int32)-instance-method","html_id":"parse(value:Int32)-instance-method","name":"parse","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Int32"}],"args_string":"(value : Int32)","args_html":"(value : <a href=\"../Int32.html\">Int32</a>)","location":{"filename":"src/avram/charms/float64_extensions.cr","line_number":44,"url":null},"def":{"name":"parse","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SuccessfulCast(Float64).new(value.to_f64)"}},{"id":"parse(value:Int64)-instance-method","html_id":"parse(value:Int64)-instance-method","name":"parse","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Int64"}],"args_string":"(value : Int64)","args_html":"(value : <a href=\"../Int64.html\">Int64</a>)","location":{"filename":"src/avram/charms/float64_extensions.cr","line_number":48,"url":null},"def":{"name":"parse","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Int64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SuccessfulCast(Float64).new(value.to_f64)"}},{"id":"parse(value:PG::Numeric)-instance-method","html_id":"parse(value:PG::Numeric)-instance-method","name":"parse","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"PG::Numeric"}],"args_string":"(value : PG::Numeric)","args_html":"(value : PG::Numeric)","location":{"filename":"src/avram/charms/float64_extensions.cr","line_number":30,"url":null},"def":{"name":"parse","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"PG::Numeric"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SuccessfulCast(Float64).new(value.to_f)"}},{"id":"to_db(value:Float64)-instance-method","html_id":"to_db(value:Float64)-instance-method","name":"to_db","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Float64"}],"args_string":"(value : Float64)","args_html":"(value : <a href=\"../Float64.html\">Float64</a>)","location":{"filename":"src/avram/charms/float64_extensions.cr","line_number":52,"url":null},"def":{"name":"to_db","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value.to_s"}},{"id":"to_db(values:Array(Float64))-instance-method","html_id":"to_db(values:Array(Float64))-instance-method","name":"to_db","doc":null,"summary":null,"abstract":false,"args":[{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":"Array(Float64)"}],"args_string":"(values : Array(Float64))","args_html":"(values : <a href=\"../Array.html\">Array</a>(<a href=\"../Float64.html\">Float64</a>))","location":{"filename":"src/avram/charms/float64_extensions.cr","line_number":56,"url":null},"def":{"name":"to_db","args":[{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":"Array(Float64)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"PQ::Param.encode_array(values)"}}],"macros":[],"types":[{"html_id":"avram/Float64/Lucky/ColumnType","path":"Float64/Lucky/ColumnType.html","kind":"alias","full_name":"Float64::Lucky::ColumnType","name":"ColumnType","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":true,"aliased":"PG::Numeric","aliased_html":"PG::Numeric","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Float64/Lucky","kind":"module","full_name":"Float64::Lucky","name":"Lucky"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"avram/Float64/Lucky/Criteria","path":"Float64/Lucky/Criteria.html","kind":"class","full_name":"Float64::Lucky::Criteria(T, V)","name":"Criteria","abstract":false,"superclass":{"html_id":"avram/Avram/Criteria","kind":"class","full_name":"Avram::Criteria","name":"Criteria"},"ancestors":[{"html_id":"avram/Avram/BetweenCriteria","kind":"module","full_name":"Avram::BetweenCriteria","name":"BetweenCriteria"},{"html_id":"avram/Avram/Criteria","kind":"class","full_name":"Avram::Criteria","name":"Criteria"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[{"html_id":"avram/Avram/BetweenCriteria","kind":"module","full_name":"Avram::BetweenCriteria","name":"BetweenCriteria"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Float64/Lucky","kind":"module","full_name":"Float64::Lucky","name":"Lucky"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(rows:T,column:Symbol|String)-class-method","html_id":"new(rows:T,column:Symbol|String)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"rows","doc":null,"default_value":"","external_name":"rows","restriction":"T"},{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":"Symbol | String"}],"args_string":"(rows : T, column : Symbol | String)","args_html":"(rows : T, column : Symbol | <a href=\"../../String.html\">String</a>)","location":{"filename":"src/avram/criteria.cr","line_number":5,"url":null},"def":{"name":"new","args":[{"name":"rows","doc":null,"default_value":"","external_name":"rows","restriction":"T"},{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":"Symbol | String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = Criteria(T, V).allocate\n_.initialize(rows, column)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"between(low_value:V,high_value:V)-instance-method","html_id":"between(low_value:V,high_value:V)-instance-method","name":"between","doc":"WHERE @column >= `low_value` AND @column <= `high_value`","summary":"<p>WHERE @column >= <code>low_value</code> AND @column &lt;= <code>high_value</code></p>","abstract":false,"args":[{"name":"low_value","doc":null,"default_value":"","external_name":"low_value","restriction":"V"},{"name":"high_value","doc":null,"default_value":"","external_name":"high_value","restriction":"V"}],"args_string":"(low_value : V, high_value : V)","args_html":"(low_value : V, high_value : V)","location":{"filename":"src/avram/charms/float64_extensions.cr","line_number":61,"url":null},"def":{"name":"between","args":[{"name":"low_value","doc":null,"default_value":"","external_name":"low_value","restriction":"V"},{"name":"high_value","doc":null,"default_value":"","external_name":"high_value","restriction":"V"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"add_clauses([Avram::Where::GreaterThanOrEqualTo.new(@column, V.adapter.to_db!(low_value)), Avram::Where::LessThanOrEqualTo.new(@column, V.adapter.to_db!(high_value))])"}},{"id":"select_sum:Float64?-instance-method","html_id":"select_sum:Float64?-instance-method","name":"select_sum","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Float64?","args_html":" : <a href=\"../../Float64.html\">Float64</a>?","location":{"filename":"src/avram/charms/float64_extensions.cr","line_number":63,"url":null},"def":{"name":"select_sum","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Float64 | ::Nil","visibility":"Public","body":"if sum = super()\n  (sum.as(PG::Numeric)).to_f\nend"}},{"id":"select_sum!:Float64-instance-method","html_id":"select_sum!:Float64-instance-method","name":"select_sum!","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Float64","args_html":" : <a href=\"../../Float64.html\">Float64</a>","location":{"filename":"src/avram/charms/float64_extensions.cr","line_number":69,"url":null},"def":{"name":"select_sum!","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Float64","visibility":"Public","body":"select_sum || 0_f64"}}],"macros":[],"types":[]}]}]},{"html_id":"avram/Gen","path":"Gen.html","kind":"module","full_name":"Gen","name":"Gen","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"avram/Gen/Migration","path":"Gen/Migration.html","kind":"class","full_name":"Gen::Migration","name":"Migration","abstract":false,"superclass":{"html_id":"avram/LuckyCli/Task","kind":"class","full_name":"LuckyCli::Task","name":"Task"},"ancestors":[{"html_id":"avram/Habitat/SettingsHelpers","kind":"module","full_name":"Habitat::SettingsHelpers","name":"SettingsHelpers"},{"html_id":"avram/Habitat/TempConfig","kind":"module","full_name":"Habitat::TempConfig","name":"TempConfig"},{"html_id":"avram/LuckyCli/Task","kind":"class","full_name":"LuckyCli::Task","name":"Task"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[{"id":"HABITAT_SETTINGS","name":"HABITAT_SETTINGS","value":"[{decl: io : IO = STDOUT, example: nil, validation: nil}] of Nil","doc":null,"summary":null},{"id":"PARSER_OPTS","name":"PARSER_OPTS","value":"[] of Symbol","doc":null,"summary":null}],"included_modules":[{"html_id":"avram/Habitat/SettingsHelpers","kind":"module","full_name":"Habitat::SettingsHelpers","name":"SettingsHelpers"},{"html_id":"avram/Habitat/TempConfig","kind":"module","full_name":"Habitat::TempConfig","name":"TempConfig"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Gen","kind":"module","full_name":"Gen","name":"Gen"},"doc":null,"summary":null,"class_methods":[{"id":"configure(&)-class-method","html_id":"configure(&)-class-method","name":"configure","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"(&)","args_html":"(&)","location":{"filename":"src/avram/tasks/gen/migration.cr","line_number":111,"url":null},"def":{"name":"configure","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"yield settings"}},{"id":"settings-class-method","html_id":"settings-class-method","name":"settings","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/tasks/gen/migration.cr","line_number":111,"url":null},"def":{"name":"settings","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"HabitatSettings"}},{"id":"silence_output(&)-class-method","html_id":"silence_output(&)-class-method","name":"silence_output","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"(&)","args_html":"(&)","location":{"filename":"src/avram/tasks/gen/migration.cr","line_number":130,"url":null},"def":{"name":"silence_output","args":[],"double_splat":null,"splat_index":null,"yields":0,"block_arg":null,"return_type":"","visibility":"Public","body":"temp_config(io: IO::Memory.new) do\n  yield\nend"}}],"constructors":[],"instance_methods":[{"id":"call(name:String?=nil)-instance-method","html_id":"call(name:String?=nil)-instance-method","name":"call","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":"String | ::Nil"}],"args_string":"(name : String? = <span class=\"n\">nil</span>)","args_html":"(name : <a href=\"../String.html\">String</a>? = <span class=\"n\">nil</span>)","location":{"filename":"src/avram/tasks/gen/migration.cr","line_number":136,"url":null},"def":{"name":"call","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Avram::Migrator.run do\n  name = name || ARGV.first?\n  if name\n    Avram::Migrator::MigrationGenerator.new(name: name).generate\n  else\n    raise((\"Migration name is required. Example: lucky gen.migration CreateUsers\".colorize(:red)).to_s)\n  end\nend"}},{"id":"help_message-instance-method","html_id":"help_message-instance-method","name":"help_message","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/tasks/gen/migration.cr","line_number":115,"url":null},"def":{"name":"help_message","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"Generate a new migration using the passed in migration name.\\n\\nThe migration name must be CamelCase. No other options are available.\\n\\nExamples:\\n\\n  lucky gen.migration CreateUsers\\n  lucky gen.migration AddAgeToUsers\\n  lucky gen.migration MakeUserNameOptional\\n\""}},{"id":"name-instance-method","html_id":"name-instance-method","name":"name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/tasks/gen/migration.cr","line_number":108,"url":null},"def":{"name":"name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"gen.migration\""}},{"id":"option_parser:OptionParser-instance-method","html_id":"option_parser:OptionParser-instance-method","name":"option_parser","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : OptionParser","args_html":" : OptionParser","location":null,"def":{"name":"option_parser","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"OptionParser","visibility":"Public","body":"@option_parser"}},{"id":"option_parser=(option_parser:OptionParser)-instance-method","html_id":"option_parser=(option_parser:OptionParser)-instance-method","name":"option_parser=","doc":null,"summary":null,"abstract":false,"args":[{"name":"option_parser","doc":null,"default_value":"","external_name":"option_parser","restriction":"OptionParser"}],"args_string":"(option_parser : OptionParser)","args_html":"(option_parser : OptionParser)","location":null,"def":{"name":"option_parser=","args":[{"name":"option_parser","doc":null,"default_value":"","external_name":"option_parser","restriction":"OptionParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@option_parser = option_parser"}},{"id":"output:IO-instance-method","html_id":"output:IO-instance-method","name":"output","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : IO","args_html":" : IO","location":null,"def":{"name":"output","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"IO","visibility":"Public","body":"@output"}},{"id":"output=(output:IO)-instance-method","html_id":"output=(output:IO)-instance-method","name":"output=","doc":null,"summary":null,"abstract":false,"args":[{"name":"output","doc":null,"default_value":"","external_name":"output","restriction":"IO"}],"args_string":"(output : IO)","args_html":"(output : IO)","location":null,"def":{"name":"output=","args":[{"name":"output","doc":null,"default_value":"","external_name":"output","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@output = output"}},{"id":"print_help_or_call(args:Array(String),io:IO)-instance-method","html_id":"print_help_or_call(args:Array(String),io:IO)-instance-method","name":"print_help_or_call","doc":null,"summary":"<p><span class=\"flag red\">DEPRECATED</span>  Set #output instead of passing in <code>io</code></p>\n\n","abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(String)"},{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"args_string":"(args : Array(String), io : IO)","args_html":"(args : <a href=\"../Array.html\">Array</a>(<a href=\"../String.html\">String</a>), io : IO)","location":{"filename":"src/avram/tasks/gen/migration.cr","line_number":108,"url":null},"def":{"name":"print_help_or_call","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(String)"},{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@output = io\nprint_help_or_call(args)\n"}},{"id":"print_help_or_call(args:Array(String))-instance-method","html_id":"print_help_or_call(args:Array(String))-instance-method","name":"print_help_or_call","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(String)"}],"args_string":"(args : Array(String))","args_html":"(args : <a href=\"../Array.html\">Array</a>(<a href=\"../String.html\">String</a>))","location":{"filename":"src/avram/tasks/gen/migration.cr","line_number":108,"url":null},"def":{"name":"print_help_or_call","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if wants_help_message?(args)\n  output.puts(help_message)\nelse\n  {% for opt in @type.constant(:PARSER_OPTS) %}\n        set_opt_for_{{ opt.id }}(args)\n        {% end %}\n  option_parser.parse(args)\n  call\nend"}},{"id":"settings-instance-method","html_id":"settings-instance-method","name":"settings","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/tasks/gen/migration.cr","line_number":111,"url":null},"def":{"name":"settings","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"HabitatSettings"}},{"id":"summary-instance-method","html_id":"summary-instance-method","name":"summary","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/tasks/gen/migration.cr","line_number":109,"url":null},"def":{"name":"summary","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"Generate a new migration\""}}],"macros":[],"types":[{"html_id":"avram/Gen/Migration/HabitatSettings","path":"Gen/Migration/HabitatSettings.html","kind":"class","full_name":"Gen::Migration::HabitatSettings","name":"HabitatSettings","abstract":false,"superclass":{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Gen/Migration","kind":"class","full_name":"Gen::Migration","name":"Migration"},"doc":null,"summary":null,"class_methods":[{"id":"io-class-method","html_id":"io-class-method","name":"io","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"io","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@io.not_nil!"}},{"id":"io=(value:IO)-class-method","html_id":"io=(value:IO)-class-method","name":"io=","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"IO"}],"args_string":"(value : IO)","args_html":"(value : IO)","location":null,"def":{"name":"io=","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@io = value"}},{"id":"io?-class-method","html_id":"io?-class-method","name":"io?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"io?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@io"}},{"id":"to_h-class-method","html_id":"to_h-class-method","name":"to_h","doc":"Generates a hash using the provided values","summary":"<p>Generates a hash using the provided values</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_h","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"{\"io\" => io}"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]}]},{"html_id":"avram/Int16","path":"Int16.html","kind":"struct","full_name":"Int16","name":"Int16","abstract":false,"superclass":{"html_id":"avram/Int","kind":"struct","full_name":"Int","name":"Int"},"ancestors":[{"html_id":"avram/Int","kind":"struct","full_name":"Int","name":"Int"},{"html_id":"avram/Number","kind":"struct","full_name":"Number","name":"Number"},{"html_id":"avram/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"avram/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[{"id":"adapter-class-method","html_id":"adapter-class-method","name":"adapter","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/charms/int16_extensions.cr","line_number":2,"url":null},"def":{"name":"adapter","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Lucky"}}],"constructors":[],"instance_methods":[{"id":"blank?-instance-method","html_id":"blank?-instance-method","name":"blank?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/blank_extensions.cr","line_number":14,"url":null},"def":{"name":"blank?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.nil?"}}],"macros":[],"types":[{"html_id":"avram/Int16/Lucky","path":"Int16/Lucky.html","kind":"module","full_name":"Int16::Lucky","name":"Lucky","abstract":false,"superclass":null,"ancestors":[{"html_id":"avram/Avram/Type","kind":"module","full_name":"Avram::Type","name":"Type"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[{"html_id":"avram/Avram/Type","kind":"module","full_name":"Avram::Type","name":"Type"}],"extended_modules":[{"html_id":"avram/Int16/Lucky","kind":"module","full_name":"Int16::Lucky","name":"Lucky"}],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Int16","kind":"struct","full_name":"Int16","name":"Int16"},"doc":null,"summary":null,"class_methods":[{"id":"criteria(query:T,column)forallT-class-method","html_id":"criteria(query:T,column)forallT-class-method","name":"criteria","doc":null,"summary":null,"abstract":false,"args":[{"name":"query","doc":null,"default_value":"","external_name":"query","restriction":"T"},{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":""}],"args_string":"(query : T, column) forall T","args_html":"(query : T, column) forall T","location":{"filename":"src/avram/charms/int16_extensions.cr","line_number":10,"url":null},"def":{"name":"criteria","args":[{"name":"query","doc":null,"default_value":"","external_name":"query","restriction":"T"},{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Criteria(T, Int16).new(query, column)"}}],"constructors":[],"instance_methods":[{"id":"from_db!(value:Int16)-instance-method","html_id":"from_db!(value:Int16)-instance-method","name":"from_db!","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Int16"}],"args_string":"(value : Int16)","args_html":"(value : <a href=\"../Int16.html\">Int16</a>)","location":{"filename":"src/avram/charms/int16_extensions.cr","line_number":14,"url":null},"def":{"name":"from_db!","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Int16"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value"}},{"id":"parse(value:Int16)-instance-method","html_id":"parse(value:Int16)-instance-method","name":"parse","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Int16"}],"args_string":"(value : Int16)","args_html":"(value : <a href=\"../Int16.html\">Int16</a>)","location":{"filename":"src/avram/charms/int16_extensions.cr","line_number":18,"url":null},"def":{"name":"parse","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Int16"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SuccessfulCast(Int16).new(value)"}},{"id":"parse(values:Array(Int16))-instance-method","html_id":"parse(values:Array(Int16))-instance-method","name":"parse","doc":null,"summary":null,"abstract":false,"args":[{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":"Array(Int16)"}],"args_string":"(values : Array(Int16))","args_html":"(values : <a href=\"../Array.html\">Array</a>(<a href=\"../Int16.html\">Int16</a>))","location":{"filename":"src/avram/charms/int16_extensions.cr","line_number":22,"url":null},"def":{"name":"parse","args":[{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":"Array(Int16)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SuccessfulCast(Array(Int16)).new(values)"}},{"id":"parse(value:String)-instance-method","html_id":"parse(value:String)-instance-method","name":"parse","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"String"}],"args_string":"(value : String)","args_html":"(value : <a href=\"../String.html\">String</a>)","location":{"filename":"src/avram/charms/int16_extensions.cr","line_number":26,"url":null},"def":{"name":"parse","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"begin\n  SuccessfulCast(Int16).new(value.to_i16)\nrescue ArgumentError\n  FailedCast.new\nend"}},{"id":"parse(value:Int32)-instance-method","html_id":"parse(value:Int32)-instance-method","name":"parse","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Int32"}],"args_string":"(value : Int32)","args_html":"(value : <a href=\"../Int32.html\">Int32</a>)","location":{"filename":"src/avram/charms/int16_extensions.cr","line_number":32,"url":null},"def":{"name":"parse","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"begin\n  SuccessfulCast(Int16).new(value.to_i16)\nrescue OverflowError\n  FailedCast.new\nend"}},{"id":"to_db(value:Int16)-instance-method","html_id":"to_db(value:Int16)-instance-method","name":"to_db","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Int16"}],"args_string":"(value : Int16)","args_html":"(value : <a href=\"../Int16.html\">Int16</a>)","location":{"filename":"src/avram/charms/int16_extensions.cr","line_number":38,"url":null},"def":{"name":"to_db","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Int16"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value.to_s"}},{"id":"to_db(values:Array(Int16))-instance-method","html_id":"to_db(values:Array(Int16))-instance-method","name":"to_db","doc":null,"summary":null,"abstract":false,"args":[{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":"Array(Int16)"}],"args_string":"(values : Array(Int16))","args_html":"(values : <a href=\"../Array.html\">Array</a>(<a href=\"../Int16.html\">Int16</a>))","location":{"filename":"src/avram/charms/int16_extensions.cr","line_number":42,"url":null},"def":{"name":"to_db","args":[{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":"Array(Int16)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"PQ::Param.encode_array(values)"}}],"macros":[],"types":[{"html_id":"avram/Int16/Lucky/ColumnType","path":"Int16/Lucky/ColumnType.html","kind":"alias","full_name":"Int16::Lucky::ColumnType","name":"ColumnType","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":true,"aliased":"Int16","aliased_html":"<a href=\"../../Int16.html\">Int16</a>","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Int16/Lucky","kind":"module","full_name":"Int16::Lucky","name":"Lucky"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"avram/Int16/Lucky/Criteria","path":"Int16/Lucky/Criteria.html","kind":"class","full_name":"Int16::Lucky::Criteria(T, V)","name":"Criteria","abstract":false,"superclass":{"html_id":"avram/Avram/Criteria","kind":"class","full_name":"Avram::Criteria","name":"Criteria"},"ancestors":[{"html_id":"avram/Avram/BetweenCriteria","kind":"module","full_name":"Avram::BetweenCriteria","name":"BetweenCriteria"},{"html_id":"avram/Avram/Criteria","kind":"class","full_name":"Avram::Criteria","name":"Criteria"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[{"html_id":"avram/Avram/BetweenCriteria","kind":"module","full_name":"Avram::BetweenCriteria","name":"BetweenCriteria"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Int16/Lucky","kind":"module","full_name":"Int16::Lucky","name":"Lucky"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(rows:T,column:Symbol|String)-class-method","html_id":"new(rows:T,column:Symbol|String)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"rows","doc":null,"default_value":"","external_name":"rows","restriction":"T"},{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":"Symbol | String"}],"args_string":"(rows : T, column : Symbol | String)","args_html":"(rows : T, column : Symbol | <a href=\"../../String.html\">String</a>)","location":{"filename":"src/avram/criteria.cr","line_number":5,"url":null},"def":{"name":"new","args":[{"name":"rows","doc":null,"default_value":"","external_name":"rows","restriction":"T"},{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":"Symbol | String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = Criteria(T, V).allocate\n_.initialize(rows, column)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"between(low_value:V,high_value:V)-instance-method","html_id":"between(low_value:V,high_value:V)-instance-method","name":"between","doc":"WHERE @column >= `low_value` AND @column <= `high_value`","summary":"<p>WHERE @column >= <code>low_value</code> AND @column &lt;= <code>high_value</code></p>","abstract":false,"args":[{"name":"low_value","doc":null,"default_value":"","external_name":"low_value","restriction":"V"},{"name":"high_value","doc":null,"default_value":"","external_name":"high_value","restriction":"V"}],"args_string":"(low_value : V, high_value : V)","args_html":"(low_value : V, high_value : V)","location":{"filename":"src/avram/charms/int16_extensions.cr","line_number":47,"url":null},"def":{"name":"between","args":[{"name":"low_value","doc":null,"default_value":"","external_name":"low_value","restriction":"V"},{"name":"high_value","doc":null,"default_value":"","external_name":"high_value","restriction":"V"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"add_clauses([Avram::Where::GreaterThanOrEqualTo.new(@column, V.adapter.to_db!(low_value)), Avram::Where::LessThanOrEqualTo.new(@column, V.adapter.to_db!(high_value))])"}},{"id":"select_sum:Int64?-instance-method","html_id":"select_sum:Int64?-instance-method","name":"select_sum","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int64?","args_html":" : <a href=\"../../Int64.html\">Int64</a>?","location":{"filename":"src/avram/charms/int16_extensions.cr","line_number":49,"url":null},"def":{"name":"select_sum","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int64 | ::Nil","visibility":"Public","body":"super().as(Int64 | ::Nil)"}},{"id":"select_sum!:Int64-instance-method","html_id":"select_sum!:Int64-instance-method","name":"select_sum!","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int64","args_html":" : <a href=\"../../Int64.html\">Int64</a>","location":{"filename":"src/avram/charms/int16_extensions.cr","line_number":53,"url":null},"def":{"name":"select_sum!","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int64","visibility":"Public","body":"select_sum || 0_i64"}}],"macros":[],"types":[]}]}]},{"html_id":"avram/Int32","path":"Int32.html","kind":"struct","full_name":"Int32","name":"Int32","abstract":false,"superclass":{"html_id":"avram/Int","kind":"struct","full_name":"Int","name":"Int"},"ancestors":[{"html_id":"avram/Int","kind":"struct","full_name":"Int","name":"Int"},{"html_id":"avram/Number","kind":"struct","full_name":"Number","name":"Number"},{"html_id":"avram/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"avram/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[{"id":"adapter-class-method","html_id":"adapter-class-method","name":"adapter","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/charms/int32_extensions.cr","line_number":2,"url":null},"def":{"name":"adapter","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Lucky"}}],"constructors":[],"instance_methods":[{"id":"blank?-instance-method","html_id":"blank?-instance-method","name":"blank?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/blank_extensions.cr","line_number":20,"url":null},"def":{"name":"blank?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.nil?"}}],"macros":[],"types":[{"html_id":"avram/Int32/Lucky","path":"Int32/Lucky.html","kind":"module","full_name":"Int32::Lucky","name":"Lucky","abstract":false,"superclass":null,"ancestors":[{"html_id":"avram/Avram/Type","kind":"module","full_name":"Avram::Type","name":"Type"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[{"html_id":"avram/Avram/Type","kind":"module","full_name":"Avram::Type","name":"Type"}],"extended_modules":[{"html_id":"avram/Int32/Lucky","kind":"module","full_name":"Int32::Lucky","name":"Lucky"}],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Int32","kind":"struct","full_name":"Int32","name":"Int32"},"doc":null,"summary":null,"class_methods":[{"id":"criteria(query:T,column)forallT-class-method","html_id":"criteria(query:T,column)forallT-class-method","name":"criteria","doc":null,"summary":null,"abstract":false,"args":[{"name":"query","doc":null,"default_value":"","external_name":"query","restriction":"T"},{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":""}],"args_string":"(query : T, column) forall T","args_html":"(query : T, column) forall T","location":{"filename":"src/avram/charms/int32_extensions.cr","line_number":10,"url":null},"def":{"name":"criteria","args":[{"name":"query","doc":null,"default_value":"","external_name":"query","restriction":"T"},{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Criteria(T, Int32).new(query, column)"}}],"constructors":[],"instance_methods":[{"id":"from_db!(value:Int32)-instance-method","html_id":"from_db!(value:Int32)-instance-method","name":"from_db!","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Int32"}],"args_string":"(value : Int32)","args_html":"(value : <a href=\"../Int32.html\">Int32</a>)","location":{"filename":"src/avram/charms/int32_extensions.cr","line_number":14,"url":null},"def":{"name":"from_db!","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value"}},{"id":"parse(value:String)-instance-method","html_id":"parse(value:String)-instance-method","name":"parse","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"String"}],"args_string":"(value : String)","args_html":"(value : <a href=\"../String.html\">String</a>)","location":{"filename":"src/avram/charms/int32_extensions.cr","line_number":18,"url":null},"def":{"name":"parse","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"begin\n  SuccessfulCast(Int32).new(value.to_i)\nrescue ArgumentError\n  FailedCast.new\nend"}},{"id":"parse(value:Int32)-instance-method","html_id":"parse(value:Int32)-instance-method","name":"parse","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Int32"}],"args_string":"(value : Int32)","args_html":"(value : <a href=\"../Int32.html\">Int32</a>)","location":{"filename":"src/avram/charms/int32_extensions.cr","line_number":24,"url":null},"def":{"name":"parse","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SuccessfulCast(Int32).new(value)"}},{"id":"parse(value:Int64)-instance-method","html_id":"parse(value:Int64)-instance-method","name":"parse","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Int64"}],"args_string":"(value : Int64)","args_html":"(value : <a href=\"../Int64.html\">Int64</a>)","location":{"filename":"src/avram/charms/int32_extensions.cr","line_number":28,"url":null},"def":{"name":"parse","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Int64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"begin\n  SuccessfulCast(Int32).new(value.to_i32)\nrescue OverflowError\n  FailedCast.new\nend"}},{"id":"parse(values:Array(Int32))-instance-method","html_id":"parse(values:Array(Int32))-instance-method","name":"parse","doc":null,"summary":null,"abstract":false,"args":[{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":"Array(Int32)"}],"args_string":"(values : Array(Int32))","args_html":"(values : <a href=\"../Array.html\">Array</a>(<a href=\"../Int32.html\">Int32</a>))","location":{"filename":"src/avram/charms/int32_extensions.cr","line_number":34,"url":null},"def":{"name":"parse","args":[{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":"Array(Int32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SuccessfulCast(Array(Int32)).new(values)"}},{"id":"to_db(value:Int32)-instance-method","html_id":"to_db(value:Int32)-instance-method","name":"to_db","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Int32"}],"args_string":"(value : Int32)","args_html":"(value : <a href=\"../Int32.html\">Int32</a>)","location":{"filename":"src/avram/charms/int32_extensions.cr","line_number":38,"url":null},"def":{"name":"to_db","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value.to_s"}},{"id":"to_db(values:Array(Int32))-instance-method","html_id":"to_db(values:Array(Int32))-instance-method","name":"to_db","doc":null,"summary":null,"abstract":false,"args":[{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":"Array(Int32)"}],"args_string":"(values : Array(Int32))","args_html":"(values : <a href=\"../Array.html\">Array</a>(<a href=\"../Int32.html\">Int32</a>))","location":{"filename":"src/avram/charms/int32_extensions.cr","line_number":42,"url":null},"def":{"name":"to_db","args":[{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":"Array(Int32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"PQ::Param.encode_array(values)"}}],"macros":[],"types":[{"html_id":"avram/Int32/Lucky/ColumnType","path":"Int32/Lucky/ColumnType.html","kind":"alias","full_name":"Int32::Lucky::ColumnType","name":"ColumnType","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":true,"aliased":"Int32","aliased_html":"<a href=\"../../Int32.html\">Int32</a>","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Int32/Lucky","kind":"module","full_name":"Int32::Lucky","name":"Lucky"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"avram/Int32/Lucky/Criteria","path":"Int32/Lucky/Criteria.html","kind":"class","full_name":"Int32::Lucky::Criteria(T, V)","name":"Criteria","abstract":false,"superclass":{"html_id":"avram/Avram/Criteria","kind":"class","full_name":"Avram::Criteria","name":"Criteria"},"ancestors":[{"html_id":"avram/Avram/BetweenCriteria","kind":"module","full_name":"Avram::BetweenCriteria","name":"BetweenCriteria"},{"html_id":"avram/Avram/Criteria","kind":"class","full_name":"Avram::Criteria","name":"Criteria"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[{"html_id":"avram/Avram/BetweenCriteria","kind":"module","full_name":"Avram::BetweenCriteria","name":"BetweenCriteria"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Int32/Lucky","kind":"module","full_name":"Int32::Lucky","name":"Lucky"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(rows:T,column:Symbol|String)-class-method","html_id":"new(rows:T,column:Symbol|String)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"rows","doc":null,"default_value":"","external_name":"rows","restriction":"T"},{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":"Symbol | String"}],"args_string":"(rows : T, column : Symbol | String)","args_html":"(rows : T, column : Symbol | <a href=\"../../String.html\">String</a>)","location":{"filename":"src/avram/criteria.cr","line_number":5,"url":null},"def":{"name":"new","args":[{"name":"rows","doc":null,"default_value":"","external_name":"rows","restriction":"T"},{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":"Symbol | String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = Criteria(T, V).allocate\n_.initialize(rows, column)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"between(low_value:V,high_value:V)-instance-method","html_id":"between(low_value:V,high_value:V)-instance-method","name":"between","doc":"WHERE @column >= `low_value` AND @column <= `high_value`","summary":"<p>WHERE @column >= <code>low_value</code> AND @column &lt;= <code>high_value</code></p>","abstract":false,"args":[{"name":"low_value","doc":null,"default_value":"","external_name":"low_value","restriction":"V"},{"name":"high_value","doc":null,"default_value":"","external_name":"high_value","restriction":"V"}],"args_string":"(low_value : V, high_value : V)","args_html":"(low_value : V, high_value : V)","location":{"filename":"src/avram/charms/int32_extensions.cr","line_number":47,"url":null},"def":{"name":"between","args":[{"name":"low_value","doc":null,"default_value":"","external_name":"low_value","restriction":"V"},{"name":"high_value","doc":null,"default_value":"","external_name":"high_value","restriction":"V"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"add_clauses([Avram::Where::GreaterThanOrEqualTo.new(@column, V.adapter.to_db!(low_value)), Avram::Where::LessThanOrEqualTo.new(@column, V.adapter.to_db!(high_value))])"}},{"id":"select_sum:Int64?-instance-method","html_id":"select_sum:Int64?-instance-method","name":"select_sum","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int64?","args_html":" : <a href=\"../../Int64.html\">Int64</a>?","location":{"filename":"src/avram/charms/int32_extensions.cr","line_number":49,"url":null},"def":{"name":"select_sum","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int64 | ::Nil","visibility":"Public","body":"super().as(Int64 | ::Nil)"}},{"id":"select_sum!:Int64-instance-method","html_id":"select_sum!:Int64-instance-method","name":"select_sum!","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int64","args_html":" : <a href=\"../../Int64.html\">Int64</a>","location":{"filename":"src/avram/charms/int32_extensions.cr","line_number":53,"url":null},"def":{"name":"select_sum!","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int64","visibility":"Public","body":"select_sum || 0_i64"}}],"macros":[],"types":[]}]}]},{"html_id":"avram/Int64","path":"Int64.html","kind":"struct","full_name":"Int64","name":"Int64","abstract":false,"superclass":{"html_id":"avram/Int","kind":"struct","full_name":"Int","name":"Int"},"ancestors":[{"html_id":"avram/Int","kind":"struct","full_name":"Int","name":"Int"},{"html_id":"avram/Number","kind":"struct","full_name":"Number","name":"Number"},{"html_id":"avram/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"avram/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[{"id":"adapter-class-method","html_id":"adapter-class-method","name":"adapter","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/charms/int64_extensions.cr","line_number":2,"url":null},"def":{"name":"adapter","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Lucky"}}],"constructors":[],"instance_methods":[{"id":"blank?-instance-method","html_id":"blank?-instance-method","name":"blank?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/blank_extensions.cr","line_number":26,"url":null},"def":{"name":"blank?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.nil?"}}],"macros":[],"types":[{"html_id":"avram/Int64/Lucky","path":"Int64/Lucky.html","kind":"module","full_name":"Int64::Lucky","name":"Lucky","abstract":false,"superclass":null,"ancestors":[{"html_id":"avram/Avram/Type","kind":"module","full_name":"Avram::Type","name":"Type"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[{"html_id":"avram/Avram/Type","kind":"module","full_name":"Avram::Type","name":"Type"}],"extended_modules":[{"html_id":"avram/Int64/Lucky","kind":"module","full_name":"Int64::Lucky","name":"Lucky"}],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Int64","kind":"struct","full_name":"Int64","name":"Int64"},"doc":null,"summary":null,"class_methods":[{"id":"criteria(query:T,column)forallT-class-method","html_id":"criteria(query:T,column)forallT-class-method","name":"criteria","doc":null,"summary":null,"abstract":false,"args":[{"name":"query","doc":null,"default_value":"","external_name":"query","restriction":"T"},{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":""}],"args_string":"(query : T, column) forall T","args_html":"(query : T, column) forall T","location":{"filename":"src/avram/charms/int64_extensions.cr","line_number":10,"url":null},"def":{"name":"criteria","args":[{"name":"query","doc":null,"default_value":"","external_name":"query","restriction":"T"},{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Criteria(T, Int64).new(query, column)"}}],"constructors":[],"instance_methods":[{"id":"from_db!(value:Int64)-instance-method","html_id":"from_db!(value:Int64)-instance-method","name":"from_db!","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Int64"}],"args_string":"(value : Int64)","args_html":"(value : <a href=\"../Int64.html\">Int64</a>)","location":{"filename":"src/avram/charms/int64_extensions.cr","line_number":14,"url":null},"def":{"name":"from_db!","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Int64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value"}},{"id":"parse(value:Int64)-instance-method","html_id":"parse(value:Int64)-instance-method","name":"parse","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Int64"}],"args_string":"(value : Int64)","args_html":"(value : <a href=\"../Int64.html\">Int64</a>)","location":{"filename":"src/avram/charms/int64_extensions.cr","line_number":18,"url":null},"def":{"name":"parse","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Int64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SuccessfulCast(Int64).new(value)"}},{"id":"parse(values:Array(Int64))-instance-method","html_id":"parse(values:Array(Int64))-instance-method","name":"parse","doc":null,"summary":null,"abstract":false,"args":[{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":"Array(Int64)"}],"args_string":"(values : Array(Int64))","args_html":"(values : <a href=\"../Array.html\">Array</a>(<a href=\"../Int64.html\">Int64</a>))","location":{"filename":"src/avram/charms/int64_extensions.cr","line_number":22,"url":null},"def":{"name":"parse","args":[{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":"Array(Int64)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SuccessfulCast(Array(Int64)).new(values)"}},{"id":"parse(value:String)-instance-method","html_id":"parse(value:String)-instance-method","name":"parse","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"String"}],"args_string":"(value : String)","args_html":"(value : <a href=\"../String.html\">String</a>)","location":{"filename":"src/avram/charms/int64_extensions.cr","line_number":26,"url":null},"def":{"name":"parse","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"begin\n  SuccessfulCast(Int64).new(value.to_i64)\nrescue ArgumentError\n  FailedCast.new\nend"}},{"id":"parse(value:Int32)-instance-method","html_id":"parse(value:Int32)-instance-method","name":"parse","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Int32"}],"args_string":"(value : Int32)","args_html":"(value : <a href=\"../Int32.html\">Int32</a>)","location":{"filename":"src/avram/charms/int64_extensions.cr","line_number":32,"url":null},"def":{"name":"parse","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SuccessfulCast(Int64).new(value.to_i64)"}},{"id":"to_db(value:Int64)-instance-method","html_id":"to_db(value:Int64)-instance-method","name":"to_db","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Int64"}],"args_string":"(value : Int64)","args_html":"(value : <a href=\"../Int64.html\">Int64</a>)","location":{"filename":"src/avram/charms/int64_extensions.cr","line_number":36,"url":null},"def":{"name":"to_db","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Int64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value.to_s"}},{"id":"to_db(values:Array(Int64))-instance-method","html_id":"to_db(values:Array(Int64))-instance-method","name":"to_db","doc":null,"summary":null,"abstract":false,"args":[{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":"Array(Int64)"}],"args_string":"(values : Array(Int64))","args_html":"(values : <a href=\"../Array.html\">Array</a>(<a href=\"../Int64.html\">Int64</a>))","location":{"filename":"src/avram/charms/int64_extensions.cr","line_number":40,"url":null},"def":{"name":"to_db","args":[{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":"Array(Int64)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"PQ::Param.encode_array(values)"}}],"macros":[],"types":[{"html_id":"avram/Int64/Lucky/ColumnType","path":"Int64/Lucky/ColumnType.html","kind":"alias","full_name":"Int64::Lucky::ColumnType","name":"ColumnType","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":true,"aliased":"Int64","aliased_html":"<a href=\"../../Int64.html\">Int64</a>","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Int64/Lucky","kind":"module","full_name":"Int64::Lucky","name":"Lucky"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"avram/Int64/Lucky/Criteria","path":"Int64/Lucky/Criteria.html","kind":"class","full_name":"Int64::Lucky::Criteria(T, V)","name":"Criteria","abstract":false,"superclass":{"html_id":"avram/Avram/Criteria","kind":"class","full_name":"Avram::Criteria","name":"Criteria"},"ancestors":[{"html_id":"avram/Avram/BetweenCriteria","kind":"module","full_name":"Avram::BetweenCriteria","name":"BetweenCriteria"},{"html_id":"avram/Avram/Criteria","kind":"class","full_name":"Avram::Criteria","name":"Criteria"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[{"html_id":"avram/Avram/BetweenCriteria","kind":"module","full_name":"Avram::BetweenCriteria","name":"BetweenCriteria"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Int64/Lucky","kind":"module","full_name":"Int64::Lucky","name":"Lucky"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(rows:T,column:Symbol|String)-class-method","html_id":"new(rows:T,column:Symbol|String)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"rows","doc":null,"default_value":"","external_name":"rows","restriction":"T"},{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":"Symbol | String"}],"args_string":"(rows : T, column : Symbol | String)","args_html":"(rows : T, column : Symbol | <a href=\"../../String.html\">String</a>)","location":{"filename":"src/avram/criteria.cr","line_number":5,"url":null},"def":{"name":"new","args":[{"name":"rows","doc":null,"default_value":"","external_name":"rows","restriction":"T"},{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":"Symbol | String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = Criteria(T, V).allocate\n_.initialize(rows, column)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"between(low_value:V,high_value:V)-instance-method","html_id":"between(low_value:V,high_value:V)-instance-method","name":"between","doc":"WHERE @column >= `low_value` AND @column <= `high_value`","summary":"<p>WHERE @column >= <code>low_value</code> AND @column &lt;= <code>high_value</code></p>","abstract":false,"args":[{"name":"low_value","doc":null,"default_value":"","external_name":"low_value","restriction":"V"},{"name":"high_value","doc":null,"default_value":"","external_name":"high_value","restriction":"V"}],"args_string":"(low_value : V, high_value : V)","args_html":"(low_value : V, high_value : V)","location":{"filename":"src/avram/charms/int64_extensions.cr","line_number":45,"url":null},"def":{"name":"between","args":[{"name":"low_value","doc":null,"default_value":"","external_name":"low_value","restriction":"V"},{"name":"high_value","doc":null,"default_value":"","external_name":"high_value","restriction":"V"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"add_clauses([Avram::Where::GreaterThanOrEqualTo.new(@column, V.adapter.to_db!(low_value)), Avram::Where::LessThanOrEqualTo.new(@column, V.adapter.to_db!(high_value))])"}},{"id":"select_sum:Int64?-instance-method","html_id":"select_sum:Int64?-instance-method","name":"select_sum","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int64?","args_html":" : <a href=\"../../Int64.html\">Int64</a>?","location":{"filename":"src/avram/charms/int64_extensions.cr","line_number":47,"url":null},"def":{"name":"select_sum","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int64 | ::Nil","visibility":"Public","body":"if sum = super()\n  (sum.as(PG::Numeric)).to_f.to_i64\nend"}},{"id":"select_sum!:Int64-instance-method","html_id":"select_sum!:Int64-instance-method","name":"select_sum!","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int64","args_html":" : <a href=\"../../Int64.html\">Int64</a>","location":{"filename":"src/avram/charms/int64_extensions.cr","line_number":53,"url":null},"def":{"name":"select_sum!","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int64","visibility":"Public","body":"select_sum || 0_i64"}}],"macros":[],"types":[]}]}]},{"html_id":"avram/Nil","path":"Nil.html","kind":"struct","full_name":"Nil","name":"Nil","abstract":false,"superclass":{"html_id":"avram/Value","kind":"struct","full_name":"Value","name":"Value"},"ancestors":[{"html_id":"avram/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"The `Nil` type has only one possible value: `nil`.\n\n`nil` is commonly used to represent the absence of a value.\nFor example, `String#index` returns the position of the character or `nil` if it's not\nin the string:\n\n```\nstr = \"Hello world\"\nstr.index 'e' # => 1\nstr.index 'a' # => nil\n```\n\nIn the above example, trying to invoke a method on the returned value will\ngive a compile time error unless both `Int32` and `Nil` define that method:\n\n```\nstr = \"Hello world\"\nidx = str.index 'e'\nidx + 1 # Error: undefined method '+' for Nil\n```\n\nThe language and the standard library provide short, readable, easy ways to deal with `nil`,\nsuch as `Object#try` and `Object#not_nil!`:\n\n```\nstr = \"Hello world\"\n\n# The index of 'e' in str or 0 if not found\nidx1 = str.index('e') || 0\n\nidx2 = str.index('a')\nif idx2\n  # Compiles: idx2 can't be nil here\n  idx2 + 1\nend\n\n# Tell the compiler that we are sure the returned\n# value is not nil: raises a runtime exception\n# if our assumption doesn't hold.\nidx3 = str.index('o').not_nil!\n```","summary":"<p>The <code><a href=\"Nil.html\">Nil</a></code> type has only one possible value: <code>nil</code>.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"blank?-instance-method","html_id":"blank?-instance-method","name":"blank?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/blank_extensions.cr","line_number":38,"url":null},"def":{"name":"blank?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.nil?"}},{"id":"blank_for_validates_required?:Bool-instance-method","html_id":"blank_for_validates_required?:Bool-instance-method","name":"blank_for_validates_required?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","args_html":" : <a href=\"Bool.html\">Bool</a>","location":{"filename":"src/avram/object_extensions.cr","line_number":27,"url":null},"def":{"name":"blank_for_validates_required?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"blank?"}}],"macros":[],"types":[]},{"html_id":"avram/Object","path":"Object.html","kind":"class","full_name":"Object","name":"Object","abstract":true,"superclass":null,"ancestors":[{"html_id":"avram/Colorize/ObjectExtensions","kind":"module","full_name":"Colorize::ObjectExtensions","name":"ObjectExtensions"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[{"html_id":"avram/Colorize/ObjectExtensions","kind":"module","full_name":"Colorize::ObjectExtensions","name":"ObjectExtensions"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"`Object` is the base type of all Crystal objects.","summary":"<p><code><a href=\"Object.html\">Object</a></code> is the base type of all Crystal objects.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"blank_for_validates_required?:Bool-instance-method","html_id":"blank_for_validates_required?:Bool-instance-method","name":"blank_for_validates_required?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","args_html":" : <a href=\"Bool.html\">Bool</a>","location":{"filename":"src/avram/object_extensions.cr","line_number":2,"url":null},"def":{"name":"blank_for_validates_required?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"blank?"}}],"macros":[],"types":[]},{"html_id":"avram/String","path":"String.html","kind":"class","full_name":"String","name":"String","abstract":false,"superclass":{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"avram/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[{"html_id":"avram/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"A `String` represents an immutable sequence of UTF-8 characters.\n\nA `String` is typically created with a string literal, enclosing UTF-8 characters\nin double quotes:\n\n```\n\"hello world\"\n```\n\nA backslash can be used to denote some characters inside the string:\n\n```\n\"\\\"\" # double quote\n\"\\\\\" # backslash\n\"\\e\" # escape\n\"\\f\" # form feed\n\"\\n\" # newline\n\"\\r\" # carriage return\n\"\\t\" # tab\n\"\\v\" # vertical tab\n```\n\nYou can use a backslash followed by an *u* and four hexadecimal characters to denote a unicode codepoint written:\n\n```\n\"\\u0041\" # == \"A\"\n```\n\nOr you can use curly braces and specify up to six hexadecimal numbers (0 to 10FFFF):\n\n```\n\"\\u{41}\" # == \"A\"\n```\n\nA string can span multiple lines:\n\n```\n\"hello\n      world\" # same as \"hello\\n      world\"\n```\n\nNote that in the above example trailing and leading spaces, as well as newlines,\nend up in the resulting string. To avoid this, you can split a string into multiple lines\nby joining multiple literals with a backslash:\n\n```\n\"hello \" \\\n\"world, \" \\\n\"no newlines\" # same as \"hello world, no newlines\"\n```\n\nAlternatively, a backslash followed by a newline can be inserted inside the string literal:\n\n```\n\"hello \\\n     world, \\\n     no newlines\" # same as \"hello world, no newlines\"\n```\n\nIn this case, leading whitespace is not included in the resulting string.\n\nIf you need to write a string that has many double quotes, parentheses, or similar\ncharacters, you can use alternative literals:\n\n```\n# Supports double quotes and nested parentheses\n%(hello (\"world\")) # same as \"hello (\\\"world\\\")\"\n\n# Supports double quotes and nested brackets\n%[hello [\"world\"]] # same as \"hello [\\\"world\\\"]\"\n\n# Supports double quotes and nested curlies\n%{hello {\"world\"}} # same as \"hello {\\\"world\\\"}\"\n\n# Supports double quotes and nested angles\n%<hello <\"world\">> # same as \"hello <\\\"world\\\">\"\n```\n\nTo create a `String` with embedded expressions, you can use string interpolation:\n\n```\na = 1\nb = 2\n\"sum = #{a + b}\" # \"sum = 3\"\n```\n\nThis ends up invoking `Object#to_s(IO)` on each expression enclosed by `#{...}`.\n\nIf you need to dynamically build a string, use `String#build` or `IO::Memory`.\n\n### Non UTF-8 valid strings\n\nString might end up being conformed of bytes which are an invalid\nbyte sequence according to UTF-8. This can happen if the string is created\nvia one of the constructors that accept bytes, or when getting a string\nfrom `String.build` or `IO::Memory`. No exception will be raised, but\ninvalid byte sequences, when asked as chars, will use the unicode replacement\nchar (value 0xFFFD). For example:\n\n```\n# here 255 is not a valid byte value in the UTF-8 encoding\nstring = String.new(Bytes[255, 97])\nstring.valid_encoding? # => false\n\n# The first char here is the unicode replacement char\nstring.chars # => ['�', 'a']\n```\n\nOne can also create strings with specific byte value in them by\nusing octal and hexadecimal escape sequences:\n\n```\n# Octal escape sequences\n\"\\101\" # # => \"A\"\n\"\\12\"  # # => \"\\n\"\n\"\\1\"   # string with one character with code point 1\n\"\\377\" # string with one byte with value 255\n\n# Hexadecimal escape sequences\n\"\\x41\" # # => \"A\"\n\"\\xFF\" # string with one byte with value 255\n```\n\nThe reason for allowing strings that don't have a valid UTF-8 sequence\nis that the world is full of content that isn't properly encoded,\nand having a program raise an exception or stop because of this\nis not good. It's better if programs are more resilient, but\nshow a replacement character when there's an error in incoming data.","summary":"<p>A <code><a href=\"String.html\">String</a></code> represents an immutable sequence of UTF-8 characters.</p>","class_methods":[{"id":"adapter-class-method","html_id":"adapter-class-method","name":"adapter","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/charms/string_extensions.cr","line_number":2,"url":null},"def":{"name":"adapter","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Lucky"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"avram/String/Lucky","path":"String/Lucky.html","kind":"module","full_name":"String::Lucky","name":"Lucky","abstract":false,"superclass":null,"ancestors":[{"html_id":"avram/Avram/Type","kind":"module","full_name":"Avram::Type","name":"Type"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[{"html_id":"avram/Avram/Type","kind":"module","full_name":"Avram::Type","name":"Type"}],"extended_modules":[{"html_id":"avram/String/Lucky","kind":"module","full_name":"String::Lucky","name":"Lucky"}],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/String","kind":"class","full_name":"String","name":"String"},"doc":null,"summary":null,"class_methods":[{"id":"criteria(query:T,column)forallT-class-method","html_id":"criteria(query:T,column)forallT-class-method","name":"criteria","doc":null,"summary":null,"abstract":false,"args":[{"name":"query","doc":null,"default_value":"","external_name":"query","restriction":"T"},{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":""}],"args_string":"(query : T, column) forall T","args_html":"(query : <a href=\"../String.html\">T</a>, column) forall T","location":{"filename":"src/avram/charms/string_extensions.cr","line_number":10,"url":null},"def":{"name":"criteria","args":[{"name":"query","doc":null,"default_value":"","external_name":"query","restriction":"T"},{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Criteria(T, String).new(query, column)"}}],"constructors":[],"instance_methods":[{"id":"parse(value:String)-instance-method","html_id":"parse(value:String)-instance-method","name":"parse","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"String"}],"args_string":"(value : String)","args_html":"(value : <a href=\"../String.html\">String</a>)","location":{"filename":"src/avram/charms/string_extensions.cr","line_number":14,"url":null},"def":{"name":"parse","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SuccessfulCast(String).new(value)"}},{"id":"parse(values:Array(String))-instance-method","html_id":"parse(values:Array(String))-instance-method","name":"parse","doc":null,"summary":null,"abstract":false,"args":[{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":"Array(String)"}],"args_string":"(values : Array(String))","args_html":"(values : <a href=\"../Array.html\">Array</a>(<a href=\"../String.html\">String</a>))","location":{"filename":"src/avram/charms/string_extensions.cr","line_number":18,"url":null},"def":{"name":"parse","args":[{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":"Array(String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SuccessfulCast(Array(String)).new(values)"}},{"id":"to_db(value:String)-instance-method","html_id":"to_db(value:String)-instance-method","name":"to_db","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"String"}],"args_string":"(value : String)","args_html":"(value : <a href=\"../String.html\">String</a>)","location":{"filename":"src/avram/charms/string_extensions.cr","line_number":22,"url":null},"def":{"name":"to_db","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value"}},{"id":"to_db(values:Array(String))-instance-method","html_id":"to_db(values:Array(String))-instance-method","name":"to_db","doc":null,"summary":null,"abstract":false,"args":[{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":"Array(String)"}],"args_string":"(values : Array(String))","args_html":"(values : <a href=\"../Array.html\">Array</a>(<a href=\"../String.html\">String</a>))","location":{"filename":"src/avram/charms/string_extensions.cr","line_number":26,"url":null},"def":{"name":"to_db","args":[{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":"Array(String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"PQ::Param.encode_array(values)"}}],"macros":[],"types":[{"html_id":"avram/String/Lucky/ColumnType","path":"String/Lucky/ColumnType.html","kind":"alias","full_name":"String::Lucky::ColumnType","name":"ColumnType","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":true,"aliased":"String","aliased_html":"<a href=\"../../String.html\">String</a>","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/String/Lucky","kind":"module","full_name":"String::Lucky","name":"Lucky"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"avram/String/Lucky/Criteria","path":"String/Lucky/Criteria.html","kind":"class","full_name":"String::Lucky::Criteria(T, V)","name":"Criteria","abstract":false,"superclass":{"html_id":"avram/Avram/Criteria","kind":"class","full_name":"Avram::Criteria","name":"Criteria"},"ancestors":[{"html_id":"avram/Avram/Criteria","kind":"class","full_name":"Avram::Criteria","name":"Criteria"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/String/Lucky","kind":"module","full_name":"String::Lucky","name":"Lucky"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(rows:T,column:Symbol|String)-class-method","html_id":"new(rows:T,column:Symbol|String)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"rows","doc":null,"default_value":"","external_name":"rows","restriction":"T"},{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":"Symbol | String"}],"args_string":"(rows : T, column : Symbol | String)","args_html":"(rows : T, column : Symbol | <a href=\"../../String.html\">String</a>)","location":{"filename":"src/avram/criteria.cr","line_number":5,"url":null},"def":{"name":"new","args":[{"name":"rows","doc":null,"default_value":"","external_name":"rows","restriction":"T"},{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":"Symbol | String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = Criteria(T, V).allocate\n_.initialize(rows, column)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"column-instance-method","html_id":"column-instance-method","name":"column","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/charms/string_extensions.cr","line_number":52,"url":null},"def":{"name":"column","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if @upper\n  \"UPPER(#{@column})\"\nelse\n  if @lower\n    \"LOWER(#{@column})\"\n  else\n    @column\n  end\nend"}},{"id":"ilike(value:String):T-instance-method","html_id":"ilike(value:String):T-instance-method","name":"ilike","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"String"}],"args_string":"(value : String) : T","args_html":"(value : <a href=\"../../String.html\">String</a>) : T","location":{"filename":"src/avram/charms/string_extensions.cr","line_number":38,"url":null},"def":{"name":"ilike","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"T","visibility":"Public","body":"add_clause(Avram::Where::Ilike.new(column, value))"}},{"id":"like(value:String):T-instance-method","html_id":"like(value:String):T-instance-method","name":"like","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"String"}],"args_string":"(value : String) : T","args_html":"(value : <a href=\"../../String.html\">String</a>) : T","location":{"filename":"src/avram/charms/string_extensions.cr","line_number":34,"url":null},"def":{"name":"like","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"T","visibility":"Public","body":"add_clause(Avram::Where::Like.new(column, value))"}},{"id":"lower-instance-method","html_id":"lower-instance-method","name":"lower","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/charms/string_extensions.cr","line_number":47,"url":null},"def":{"name":"lower","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@lower = true\nself\n"}},{"id":"upper-instance-method","html_id":"upper-instance-method","name":"upper","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/charms/string_extensions.cr","line_number":42,"url":null},"def":{"name":"upper","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@upper = true\nself\n"}}],"macros":[],"types":[]}]}]},{"html_id":"avram/Time","path":"Time.html","kind":"struct","full_name":"Time","name":"Time","abstract":false,"superclass":{"html_id":"avram/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"avram/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"avram/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"avram/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[{"html_id":"avram/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"`Time` represents a date-time instant in\n[incremental time](https://www.w3.org/International/articles/definitions-time/#incremental_time)\nobserved in a specific time zone.\n\nThe calendaric calculations are based on the rules of the proleptic Gregorian\ncalendar as specified in [ISO 8601](http://xml.coverpages.org/ISO-FDIS-8601.pdf).\nLeap seconds are ignored.\n\nInternally, the time is stored as an `Int64` representing seconds from epoch\n(`0001-01-01 00:00:00.0 UTC`) and an `Int32` representing\nnanosecond-of-second with value range `0..999_999_999`.\n\nThe supported date range is `0001-01-01 00:00:00.0` to\n`9999-12-31 23:59:59.999_999_999` in any local time zone.\n\n### Telling the Time\n\nThere are several methods to retrieve a `Time` instance representing the\ncurrent time:\n\n```\nTime.utc                                        # returns the current time in UTC\nTime.local Time::Location.load(\"Europe/Berlin\") # returns the current time in time zone Europe/Berlin\nTime.local                                      # returns the current time in current time zone\n```\n\nIt is generally recommended to keep instances in UTC and only apply a\nlocal time zone when formatting for user display, unless the domain logic\nrequires having a specific time zone (for example for calendaric operations).\n\n### Creating a Specific Instant\n\n`Time` instances representing a specific instant can be created by\n`.utc` or `.new` with the date-time specified as individual arguments:\n\n```\ntime = Time.utc(2016, 2, 15, 10, 20, 30)\ntime.to_s # => 2016-02-15 10:20:30 UTC\ntime = Time.local(2016, 2, 15, 10, 20, 30, location: Time::Location.load(\"Europe/Berlin\"))\ntime.to_s # => 2016-02-15 10:20:30 +01:00 Europe/Berlin\n# The time-of-day can be omitted and defaults to midnight (start of day):\ntime = Time.utc(2016, 2, 15)\ntime.to_s # => 2016-02-15 00:00:00 UTC\n```\n\n### Retrieving Time Information\n\nEach `Time` instance allows querying calendar data:\n\n```\ntime = Time.utc(2016, 2, 15, 10, 20, 30)\ntime.year        # => 2016\ntime.month       # => 2\ntime.day         # => 15\ntime.hour        # => 10\ntime.minute      # => 20\ntime.second      # => 30\ntime.millisecond # => 0\ntime.nanosecond  # => 0\ntime.day_of_week # => Time::DayOfWeek::Monday\ntime.day_of_year # => 46\ntime.monday?     # => true\ntime.time_of_day # => 10:20:30\n```\n\nFor querying if a time is at a specific day of week, `Time` offers named\npredicate methods, delegating to `#day_of_week`:\n\n```\ntime.monday? # => true\n# ...\ntime.sunday? # => false\n```\n\n### Time Zones\n\nEach time is attached to a specific time zone, represented by a `Location`\n(see `#location`).\n`#zone` returns the time zone observed in this location at the current time\n(i.e. the instant represented by this `Time`).\n`#offset` returns the offset of the current zone in seconds.\n\n```\ntime = Time.local(2018, 3, 8, 22, 5, 13, location: Time::Location.load(\"Europe/Berlin\"))\ntime          # => 2018-03-08 22:05:13 +01:00 Europe/Berlin\ntime.location # => #<Time::Location Europe/Berlin>\ntime.zone     # => #<Time::Location::Zone CET +01:00 (3600s) STD>\ntime.offset   # => 3600\n```\n\nUsing `.utc`, the location is `Time::Location::UTC`:\n\n```\ntime = Time.utc(2018, 3, 8, 22, 5, 13)\ntime          # => 2018-03-08 22:05:13.0 UTC\ntime.location # => #<Time::Location UTC>\ntime.zone     # => #<Time::Location::Zone UTC +00:00 (0s) STD>\ntime.offset   # => 0\n```\n\nA `Time` instance can be transformed to a different time zone while retaining\nthe same instant using `#in`:\n\n```\ntime_de = Time.local(2018, 3, 8, 22, 5, 13, location: Time::Location.load(\"Europe/Berlin\"))\ntime_ar = time_de.in Time::Location.load(\"America/Buenos_Aires\")\ntime_de # => 2018-03-08 22:05:13 +01:00 Europe/Berlin\ntime_ar # => 2018-03-08 18:05:13 -03:00 America/Buenos_Aires\n```\n\nBoth `Time` instances show a different local date-time, but they represent\nthe same date-time in the instant time-line, therefore they are considered\nequal:\n\n```\ntime_de.to_utc     # => 2018-03-08 21:05:13 UTC\ntime_ar.to_utc     # => 2018-03-08 21:05:13 UTC\ntime_de == time_ar # => true\n```\n\nThere are also two special methods for converting to UTC and local time zone:\n\n```\ntime.to_utc   # equals time.in(Location::UTC)\ntime.to_local # equals time.in(Location.local)\n```\n\n`#to_local_in` allows changing the time zone while keeping\nthe same local date-time (wall clock) which results in a different instant\non the time line.\n\n### Formatting and Parsing Time\n\nTo make date-time instances exchangeable between different computer systems\nor readable to humans, they are usually converted to and from a string\nrepresentation.\n\nThe method `#to_s` formats the date-time according to a specified pattern.\n\n```\ntime = Time.utc(2015, 10, 12, 10, 30, 0)\ntime.to_s(\"%Y-%m-%d %H:%M:%S %:z\") # => \"2015-10-12 10:30:00 +00:00\"\n```\n\nSimilarly, `Time.parse` and `Time.parse!` are used to construct a `Time` instance from date-time\ninformation in a string, according to a specified pattern:\n\n```\nTime.parse(\"2015-10-12 10:30:00 +00:00\", \"%Y-%m-%d %H:%M:%S %z\", Time::Location::UTC)\nTime.parse!(\"2015-10-12 10:30:00 +00:00\", \"%Y-%m-%d %H:%M:%S %z\")\n```\n\nSee `Time::Format` for all directives.\n\n### Calculations\n\n```\nTime.utc(2015, 10, 10) - 5.days # => 2015-10-05 00:00:00 +00:00\n\nspan = Time.utc(2015, 10, 10) - Time.utc(2015, 9, 10)\nspan.days          # => 30\nspan.total_hours   # => 720\nspan.total_minutes # => 43200\n```\n\n## Measuring Time\n\nThe typical time representation provided by the operating system is based on\na \"wall clock\" which is subject to changes for clock synchronization.\nThis can result in discontinuous jumps in the time-line making it not\nsuitable for accurately measuring elapsed time.\n\nInstances of `Time` are focused on telling time – using a \"wall clock\".\nWhen `Time.local` is called multiple times, the difference between the\nreturned instances is not guaranteed to equal to the time elapsed between\nmaking the calls; even the order of the returned `Time` instances might\nnot reflect invocation order.\n\n```\nt1 = Time.utc\n# operation that takes 1 minute\nt2 = Time.utc\nt2 - t1 # => ?\n```\n\nThe resulting `Time::Span` could be anything, even negative, if the\ncomputer's wall clock has changed between both calls.\n\nAs an alternative, the operating system also provides a monotonic clock.\nIts time-line has no specified starting point but is strictly linearly\nincreasing.\n\nThis monotonic clock should always be used for measuring elapsed time.\n\nA reading from this clock can be taken using `.monotonic`:\n\n```\nt1 = Time.monotonic\n# operation that takes 1 minute\nt2 = Time.monotonic\nt2 - t1 # => 1.minute (approximately)\n```\n\nThe execution time of a block can be measured using `.measure`:\n\n```\nelapsed_time = Time.measure do\n  # operation that takes 20 milliseconds\nend\nelapsed_time # => 20.milliseconds (approximately)\n```","summary":"<p><code><a href=\"Time.html\">Time</a></code> represents a date-time instant in <a href=\"https://www.w3.org/International/articles/definitions-time/#incremental_time\">incremental time</a> observed in a specific time zone.</p>","class_methods":[{"id":"adapter-class-method","html_id":"adapter-class-method","name":"adapter","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/charms/time_extensions.cr","line_number":2,"url":null},"def":{"name":"adapter","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Lucky"}}],"constructors":[],"instance_methods":[{"id":"blank?-instance-method","html_id":"blank?-instance-method","name":"blank?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/blank_extensions.cr","line_number":8,"url":null},"def":{"name":"blank?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.nil?"}}],"macros":[],"types":[{"html_id":"avram/Time/Lucky","path":"Time/Lucky.html","kind":"module","full_name":"Time::Lucky","name":"Lucky","abstract":false,"superclass":null,"ancestors":[{"html_id":"avram/Avram/Type","kind":"module","full_name":"Avram::Type","name":"Type"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[{"id":"TIME_FORMATS","name":"TIME_FORMATS","value":"[Time::Format::ISO_8601_DATE_TIME, Time::Format::RFC_2822, Time::Format::RFC_3339, Time::Format.new(\"%Y-%m-%dT%H:%M:%S\", Time::Location::UTC), Time::Format::HTTP_DATE, Time::Format::ISO_8601_DATE, Time::Format::ISO_8601_TIME]","doc":null,"summary":null}],"included_modules":[{"html_id":"avram/Avram/Type","kind":"module","full_name":"Avram::Type","name":"Type"}],"extended_modules":[{"html_id":"avram/Time/Lucky","kind":"module","full_name":"Time::Lucky","name":"Lucky"}],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Time","kind":"struct","full_name":"Time","name":"Time"},"doc":null,"summary":null,"class_methods":[{"id":"criteria(query:T,column)forallT-class-method","html_id":"criteria(query:T,column)forallT-class-method","name":"criteria","doc":null,"summary":null,"abstract":false,"args":[{"name":"query","doc":null,"default_value":"","external_name":"query","restriction":"T"},{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":""}],"args_string":"(query : T, column) forall T","args_html":"(query : <a href=\"../Time.html\">T</a>, column) forall T","location":{"filename":"src/avram/charms/time_extensions.cr","line_number":24,"url":null},"def":{"name":"criteria","args":[{"name":"query","doc":null,"default_value":"","external_name":"query","restriction":"T"},{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Criteria(T, Time).new(query, column)"}},{"id":"try_parsing_with_default_formatters(value:String)-class-method","html_id":"try_parsing_with_default_formatters(value:String)-class-method","name":"try_parsing_with_default_formatters","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"String"}],"args_string":"(value : String)","args_html":"(value : <a href=\"../String.html\">String</a>)","location":{"filename":"src/avram/charms/time_extensions.cr","line_number":41,"url":null},"def":{"name":"try_parsing_with_default_formatters","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"TIME_FORMATS.find do |format|\n  begin\n    format.parse(value)\n  rescue e : Time::Format::Error\n    nil\n  end\nend.try do |format|\n  SuccessfulCast.new((format.parse(value)).to_utc)\nend"}},{"id":"try_parsing_with_string_formats(value)-class-method","html_id":"try_parsing_with_string_formats(value)-class-method","name":"try_parsing_with_string_formats","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(value)","args_html":"(value)","location":{"filename":"src/avram/charms/time_extensions.cr","line_number":53,"url":null},"def":{"name":"try_parsing_with_string_formats","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Avram.settings.time_formats.find do |format|\n  begin\n    Time.parse(value, format, Time::Location.load(\"UTC\"))\n  rescue e : Time::Format::Error\n    nil\n  end\nend.try do |format|\n  SuccessfulCast.new((Time.parse(value, format, Time::Location.load(\"UTC\"))).to_utc)\nend"}}],"constructors":[],"instance_methods":[{"id":"from_db!(value:Time)-instance-method","html_id":"from_db!(value:Time)-instance-method","name":"from_db!","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Time"}],"args_string":"(value : Time)","args_html":"(value : <a href=\"../Time.html\">Time</a>)","location":{"filename":"src/avram/charms/time_extensions.cr","line_number":28,"url":null},"def":{"name":"from_db!","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Time"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value"}},{"id":"parse(value:String):SuccessfulCast(Time)|FailedCast-instance-method","html_id":"parse(value:String):SuccessfulCast(Time)|FailedCast-instance-method","name":"parse","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"String"}],"args_string":"(value : String) : SuccessfulCast(Time) | FailedCast","args_html":"(value : <a href=\"../String.html\">String</a>) : <a href=\"../Avram/Type/SuccessfulCast.html\">SuccessfulCast</a>(<a href=\"../Time.html\">Time</a>) | <a href=\"../Avram/Type/FailedCast.html\">FailedCast</a>","location":{"filename":"src/avram/charms/time_extensions.cr","line_number":32,"url":null},"def":{"name":"parse","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"SuccessfulCast(Time) | FailedCast","visibility":"Public","body":"((try_parsing_with_string_formats(value)) || (try_parsing_with_default_formatters(value))) || FailedCast.new"}},{"id":"parse(value:Time)-instance-method","html_id":"parse(value:Time)-instance-method","name":"parse","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Time"}],"args_string":"(value : Time)","args_html":"(value : <a href=\"../Time.html\">Time</a>)","location":{"filename":"src/avram/charms/time_extensions.cr","line_number":65,"url":null},"def":{"name":"parse","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Time"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SuccessfulCast(Time).new(value)"}},{"id":"parse(values:Array(Time))-instance-method","html_id":"parse(values:Array(Time))-instance-method","name":"parse","doc":null,"summary":null,"abstract":false,"args":[{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":"Array(Time)"}],"args_string":"(values : Array(Time))","args_html":"(values : <a href=\"../Array.html\">Array</a>(<a href=\"../Time.html\">Time</a>))","location":{"filename":"src/avram/charms/time_extensions.cr","line_number":69,"url":null},"def":{"name":"parse","args":[{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":"Array(Time)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SuccessfulCast(Array(Time)).new(values)"}},{"id":"to_db(value:Time)-instance-method","html_id":"to_db(value:Time)-instance-method","name":"to_db","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Time"}],"args_string":"(value : Time)","args_html":"(value : <a href=\"../Time.html\">Time</a>)","location":{"filename":"src/avram/charms/time_extensions.cr","line_number":73,"url":null},"def":{"name":"to_db","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Time"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value.to_s"}}],"macros":[],"types":[{"html_id":"avram/Time/Lucky/ColumnType","path":"Time/Lucky/ColumnType.html","kind":"alias","full_name":"Time::Lucky::ColumnType","name":"ColumnType","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":true,"aliased":"Time","aliased_html":"<a href=\"../../Time.html\">Time</a>","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Time/Lucky","kind":"module","full_name":"Time::Lucky","name":"Lucky"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"avram/Time/Lucky/Criteria","path":"Time/Lucky/Criteria.html","kind":"class","full_name":"Time::Lucky::Criteria(T, V)","name":"Criteria","abstract":false,"superclass":{"html_id":"avram/Avram/Criteria","kind":"class","full_name":"Avram::Criteria","name":"Criteria"},"ancestors":[{"html_id":"avram/Avram/BetweenCriteria","kind":"module","full_name":"Avram::BetweenCriteria","name":"BetweenCriteria"},{"html_id":"avram/Avram/Criteria","kind":"class","full_name":"Avram::Criteria","name":"Criteria"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[{"html_id":"avram/Avram/BetweenCriteria","kind":"module","full_name":"Avram::BetweenCriteria","name":"BetweenCriteria"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/Time/Lucky","kind":"module","full_name":"Time::Lucky","name":"Lucky"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(rows:T,column:Symbol|String)-class-method","html_id":"new(rows:T,column:Symbol|String)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"rows","doc":null,"default_value":"","external_name":"rows","restriction":"T"},{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":"Symbol | String"}],"args_string":"(rows : T, column : Symbol | String)","args_html":"(rows : T, column : Symbol | <a href=\"../../String.html\">String</a>)","location":{"filename":"src/avram/criteria.cr","line_number":5,"url":null},"def":{"name":"new","args":[{"name":"rows","doc":null,"default_value":"","external_name":"rows","restriction":"T"},{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":"Symbol | String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = Criteria(T, V).allocate\n_.initialize(rows, column)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"between(low_value:V,high_value:V)-instance-method","html_id":"between(low_value:V,high_value:V)-instance-method","name":"between","doc":"WHERE @column >= `low_value` AND @column <= `high_value`","summary":"<p>WHERE @column >= <code>low_value</code> AND @column &lt;= <code>high_value</code></p>","abstract":false,"args":[{"name":"low_value","doc":null,"default_value":"","external_name":"low_value","restriction":"V"},{"name":"high_value","doc":null,"default_value":"","external_name":"high_value","restriction":"V"}],"args_string":"(low_value : V, high_value : V)","args_html":"(low_value : V, high_value : V)","location":{"filename":"src/avram/charms/time_extensions.cr","line_number":78,"url":null},"def":{"name":"between","args":[{"name":"low_value","doc":null,"default_value":"","external_name":"low_value","restriction":"V"},{"name":"high_value","doc":null,"default_value":"","external_name":"high_value","restriction":"V"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"add_clauses([Avram::Where::GreaterThanOrEqualTo.new(@column, V.adapter.to_db!(low_value)), Avram::Where::LessThanOrEqualTo.new(@column, V.adapter.to_db!(high_value))])"}}],"macros":[],"types":[]}]}]},{"html_id":"avram/UUID","path":"UUID.html","kind":"struct","full_name":"UUID","name":"UUID","abstract":false,"superclass":{"html_id":"avram/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"avram/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"avram/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"Represents a UUID (Universally Unique IDentifier).","summary":"<p>Represents a UUID (Universally Unique IDentifier).</p>","class_methods":[{"id":"adapter-class-method","html_id":"adapter-class-method","name":"adapter","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/charms/uuid_extensions.cr","line_number":2,"url":null},"def":{"name":"adapter","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Lucky"}}],"constructors":[],"instance_methods":[{"id":"blank?-instance-method","html_id":"blank?-instance-method","name":"blank?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/avram/blank_extensions.cr","line_number":50,"url":null},"def":{"name":"blank?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"false"}}],"macros":[],"types":[{"html_id":"avram/UUID/Lucky","path":"UUID/Lucky.html","kind":"module","full_name":"UUID::Lucky","name":"Lucky","abstract":false,"superclass":null,"ancestors":[{"html_id":"avram/Avram/Type","kind":"module","full_name":"Avram::Type","name":"Type"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[{"html_id":"avram/Avram/Type","kind":"module","full_name":"Avram::Type","name":"Type"}],"extended_modules":[{"html_id":"avram/UUID/Lucky","kind":"module","full_name":"UUID::Lucky","name":"Lucky"}],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/UUID","kind":"struct","full_name":"UUID","name":"UUID"},"doc":null,"summary":null,"class_methods":[{"id":"criteria(query:T,column)forallT-class-method","html_id":"criteria(query:T,column)forallT-class-method","name":"criteria","doc":null,"summary":null,"abstract":false,"args":[{"name":"query","doc":null,"default_value":"","external_name":"query","restriction":"T"},{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":""}],"args_string":"(query : T, column) forall T","args_html":"(query : T, column) forall T","location":{"filename":"src/avram/charms/uuid_extensions.cr","line_number":10,"url":null},"def":{"name":"criteria","args":[{"name":"query","doc":null,"default_value":"","external_name":"query","restriction":"T"},{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Criteria(T, UUID).new(query, column)"}}],"constructors":[],"instance_methods":[{"id":"parse(value:UUID)-instance-method","html_id":"parse(value:UUID)-instance-method","name":"parse","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"UUID"}],"args_string":"(value : UUID)","args_html":"(value : <a href=\"../UUID.html\">UUID</a>)","location":{"filename":"src/avram/charms/uuid_extensions.cr","line_number":14,"url":null},"def":{"name":"parse","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"UUID"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SuccessfulCast(UUID).new(value)"}},{"id":"parse(values:Array(UUID))-instance-method","html_id":"parse(values:Array(UUID))-instance-method","name":"parse","doc":null,"summary":null,"abstract":false,"args":[{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":"Array(UUID)"}],"args_string":"(values : Array(UUID))","args_html":"(values : <a href=\"../Array.html\">Array</a>(<a href=\"../UUID.html\">UUID</a>))","location":{"filename":"src/avram/charms/uuid_extensions.cr","line_number":18,"url":null},"def":{"name":"parse","args":[{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":"Array(UUID)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SuccessfulCast(Array(UUID)).new(values)"}},{"id":"parse(value:String)-instance-method","html_id":"parse(value:String)-instance-method","name":"parse","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"String"}],"args_string":"(value : String)","args_html":"(value : <a href=\"../String.html\">String</a>)","location":{"filename":"src/avram/charms/uuid_extensions.cr","line_number":22,"url":null},"def":{"name":"parse","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"begin\n  SuccessfulCast(UUID).new(UUID.new(value))\nrescue\n  FailedCast.new\nend"}},{"id":"to_db(value:UUID)-instance-method","html_id":"to_db(value:UUID)-instance-method","name":"to_db","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"UUID"}],"args_string":"(value : UUID)","args_html":"(value : <a href=\"../UUID.html\">UUID</a>)","location":{"filename":"src/avram/charms/uuid_extensions.cr","line_number":28,"url":null},"def":{"name":"to_db","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"UUID"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value.to_s"}},{"id":"to_db(values:Array(UUID))-instance-method","html_id":"to_db(values:Array(UUID))-instance-method","name":"to_db","doc":null,"summary":null,"abstract":false,"args":[{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":"Array(UUID)"}],"args_string":"(values : Array(UUID))","args_html":"(values : <a href=\"../Array.html\">Array</a>(<a href=\"../UUID.html\">UUID</a>))","location":{"filename":"src/avram/charms/uuid_extensions.cr","line_number":32,"url":null},"def":{"name":"to_db","args":[{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":"Array(UUID)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"PQ::Param.encode_array(values)"}}],"macros":[],"types":[{"html_id":"avram/UUID/Lucky/ColumnType","path":"UUID/Lucky/ColumnType.html","kind":"alias","full_name":"UUID::Lucky::ColumnType","name":"ColumnType","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":true,"aliased":"UUID","aliased_html":"<a href=\"../../UUID.html\">UUID</a>","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/UUID/Lucky","kind":"module","full_name":"UUID::Lucky","name":"Lucky"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"avram/UUID/Lucky/Criteria","path":"UUID/Lucky/Criteria.html","kind":"class","full_name":"UUID::Lucky::Criteria(T, V)","name":"Criteria","abstract":false,"superclass":{"html_id":"avram/Avram/Criteria","kind":"class","full_name":"Avram::Criteria","name":"Criteria"},"ancestors":[{"html_id":"avram/Avram/Criteria","kind":"class","full_name":"Avram::Criteria","name":"Criteria"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"avram","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"avram/UUID/Lucky","kind":"module","full_name":"UUID::Lucky","name":"Lucky"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(rows:T,column:Symbol|String)-class-method","html_id":"new(rows:T,column:Symbol|String)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"rows","doc":null,"default_value":"","external_name":"rows","restriction":"T"},{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":"Symbol | String"}],"args_string":"(rows : T, column : Symbol | String)","args_html":"(rows : T, column : Symbol | <a href=\"../../String.html\">String</a>)","location":{"filename":"src/avram/criteria.cr","line_number":5,"url":null},"def":{"name":"new","args":[{"name":"rows","doc":null,"default_value":"","external_name":"rows","restriction":"T"},{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":"Symbol | String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = Criteria(T, V).allocate\n_.initialize(rows, column)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[],"macros":[],"types":[]}]}]}]}}